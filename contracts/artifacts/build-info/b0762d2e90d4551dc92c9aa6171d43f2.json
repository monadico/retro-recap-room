{"id":"b0762d2e90d4551dc92c9aa6171d43f2","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {Arrays} from \"@openzeppelin/contracts/utils/Arrays.sol\";\nimport {IERC1155Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC1155\n    struct ERC1155Storage {\n        mapping(uint256 id => mapping(address account => uint256)) _balances;\n\n        mapping(address account => mapping(address operator => bool)) _operatorApprovals;\n\n        // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n        string _uri;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC1155\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC1155StorageLocation = 0x88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500;\n\n    function _getERC1155Storage() private pure returns (ERC1155Storage storage $) {\n        assembly {\n            $.slot := ERC1155StorageLocation\n        }\n    }\n\n    /**\n     * @dev See {_setURI}.\n     */\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\n        __ERC1155_init_unchained(uri_);\n    }\n\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\n        _setURI(uri_);\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._uri;\n    }\n\n    /// @inheritdoc IERC1155\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /// @inheritdoc IERC1155\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC1155\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._operatorApprovals[account][operator];\n    }\n\n    /// @inheritdoc IERC1155\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /// @inheritdoc IERC1155\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = $._balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    $._balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                $._balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        $._uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155Upgradeable} from \"../ERC1155Upgradeable.sol\";\nimport {Arrays} from \"@openzeppelin/contracts/utils/Arrays.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC-1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n *\n * NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n * that can be minted.\n *\n * CAUTION: This extension should not be added in an upgrade to an already deployed contract.\n */\nabstract contract ERC1155SupplyUpgradeable is Initializable, ERC1155Upgradeable {\n    using Arrays for uint256[];\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC1155Supply\n    struct ERC1155SupplyStorage {\n        mapping(uint256 id => uint256) _totalSupply;\n        uint256 _totalSupplyAll;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC1155Supply\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC1155SupplyStorageLocation = 0x4a593662ee04d27b6a00ebb31be7fe0c102c2ade82a7c5d764f2df05dc4e2800;\n\n    function _getERC1155SupplyStorage() private pure returns (ERC1155SupplyStorage storage $) {\n        assembly {\n            $.slot := ERC1155SupplyStorageLocation\n        }\n    }\n\n    function __ERC1155Supply_init() internal onlyInitializing {\n    }\n\n    function __ERC1155Supply_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Total value of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        ERC1155SupplyStorage storage $ = _getERC1155SupplyStorage();\n        return $._totalSupply[id];\n    }\n\n    /**\n     * @dev Total value of tokens.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC1155SupplyStorage storage $ = _getERC1155SupplyStorage();\n        return $._totalSupplyAll;\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return totalSupply(id) > 0;\n    }\n\n    /// @inheritdoc ERC1155Upgradeable\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override {\n        ERC1155SupplyStorage storage $ = _getERC1155SupplyStorage();\n        super._update(from, to, ids, values);\n\n        if (from == address(0)) {\n            uint256 totalMintValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values.unsafeMemoryAccess(i);\n                // Overflow check required: The rest of the code assumes that totalSupply never overflows\n                $._totalSupply[ids.unsafeMemoryAccess(i)] += value;\n                totalMintValue += value;\n            }\n            // Overflow check required: The rest of the code assumes that totalSupplyAll never overflows\n            $._totalSupplyAll += totalMintValue;\n        }\n\n        if (to == address(0)) {\n            uint256 totalBurnValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values.unsafeMemoryAccess(i);\n\n                unchecked {\n                    // Overflow not possible: values[i] <= balanceOf(from, ids[i]) <= totalSupply(ids[i])\n                    $._totalSupply[ids.unsafeMemoryAccess(i)] -= value;\n                    // Overflow not possible: sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                    totalBurnValue += value;\n                }\n            }\n            unchecked {\n                // Overflow not possible: totalBurnValue = sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                $._totalSupplyAll -= totalBurnValue;\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\n\npragma solidity >=0.4.11;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes[] storage arr, uint256 pos) internal pure returns (StorageSlot.BytesSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytesSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(string[] storage arr, uint256 pos) internal pure returns (StorageSlot.StringSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getStringSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes[] memory arr, uint256 pos) internal pure returns (bytes memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(string[] memory arr, uint256 pos) internal pure returns (string memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(string[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"src/Achievements1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport {ERC1155Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\";\nimport {ERC1155SupplyUpgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\";\nimport {AccessControlUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * the capsule honor badges - upgradeable ERC-1155 for achievements\n * - Soulbound per achievement (toggleable)\n * - 1-per-user-per-achievement enforced\n * - EIP-712 signer-gated minting\n */\ncontract Achievements1155Upgradeable is\n    Initializable,\n    ERC1155Upgradeable,\n    ERC1155SupplyUpgradeable,\n    AccessControlUpgradeable,\n    UUPSUpgradeable\n{\n    using Strings for uint256;\n\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n    bytes32 public constant SIGNER_ROLE = keccak256(\"SIGNER_ROLE\");\n\n    struct AchievementDef {\n        bool enabled;\n        bool soulbound;\n        string uri; // optional per-id override; if empty, use baseURI + id\n    }\n\n    mapping(uint256 => AchievementDef) public achievements;\n    mapping(uint256 => mapping(address => bool)) public hasMinted; // id => user => bool\n\n    string public name;\n    string public symbol;\n    string public baseURI;\n\n    // EIP-712 domain separator parts\n    bytes32 private _DOMAIN_SEPARATOR;\n    bytes32 private constant _TYPEHASH = keccak256(\"MintPermit(address to,uint256 id,uint256 deadline,bytes32 nonce)\");\n    mapping(address => mapping(uint256 => bool)) public usedNonces; // to => nonce => used\n\n    function initialize(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        address admin,\n        address signer\n    ) public initializer {\n        __ERC1155_init(\"\");\n        __ERC1155Supply_init();\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n\n        name = _name;\n        symbol = _symbol;\n        baseURI = _baseURI;\n\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(UPGRADER_ROLE, admin);\n        _grantRole(SIGNER_ROLE, signer);\n\n        _rebuildDomainSeparator();\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {}\n\n    function setBaseURI(string calldata newBase) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        baseURI = newBase;\n        emit URI(uri(0), 0); // clients can refetch\n    }\n\n    function setAchievement(uint256 id, bool enabled, bool soulbound, string calldata perIdURI) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        achievements[id] = AchievementDef({enabled: enabled, soulbound: soulbound, uri: perIdURI});\n    }\n\n    function uri(uint256 id) public view override returns (string memory) {\n        string memory per = achievements[id].uri;\n        if (bytes(per).length != 0) return per;\n        return string(abi.encodePacked(baseURI, id.toString(), \".json\"));\n    }\n\n    function domainSeparator() public view returns (bytes32) { return _DOMAIN_SEPARATOR; }\n\n    function _rebuildDomainSeparator() internal {\n        _DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                block.chainid,\n                address(this)\n            )\n        );\n    }\n\n    function _hashPermit(address to, uint256 id, uint256 deadline, bytes32 nonce) internal view returns (bytes32) {\n        return keccak256(\n            abi.encodePacked(\"\\x19\\x01\", _DOMAIN_SEPARATOR, keccak256(abi.encode(_TYPEHASH, to, id, deadline, nonce)))\n        );\n    }\n\n    function mintWithPermit(\n        address to,\n        uint256 id,\n        uint256 deadline,\n        bytes32 nonce,\n        bytes calldata signature\n    ) external {\n        require(achievements[id].enabled, \"disabled\");\n        require(block.timestamp <= deadline, \"expired\");\n        require(!usedNonces[to][uint256(nonce)], \"nonce used\");\n        require(!hasMinted[id][to], \"already minted\");\n\n        bytes32 digest = _hashPermit(to, id, deadline, nonce);\n        address recovered = _recover(digest, signature);\n        require(hasRole(SIGNER_ROLE, recovered), \"bad sig\");\n\n        usedNonces[to][uint256(nonce)] = true;\n        hasMinted[id][to] = true;\n        _mint(to, id, 1, \"\");\n    }\n\n    function _recover(bytes32 digest, bytes memory sig) internal pure returns (address) {\n        if (sig.length != 65) return address(0);\n        bytes32 r; bytes32 s; uint8 v;\n        assembly {\n            r := mload(add(sig, 0x20))\n            s := mload(add(sig, 0x40))\n            v := byte(0, mload(add(sig, 0x60)))\n        }\n        if (v < 27) v += 27;\n        if (v != 27 && v != 28) return address(0);\n        return ecrecover(digest, v, r, s);\n    }\n\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal override(ERC1155Upgradeable, ERC1155SupplyUpgradeable) {\n        if (from != address(0) && to != address(0)) {\n            // transfers: enforce per-id soulbound\n            for (uint256 i = 0; i < ids.length; i++) {\n                require(!achievements[ids[i]].soulbound, \"soulbound\");\n            }\n        }\n        super._update(from, to, ids, values);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC1155Upgradeable, AccessControlUpgradeable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"ContextUpgradeable":[2096],"ERC165Upgradeable":[2136],"IAccessControl":[2219],"IERC165":[6038],"Initializable":[632]},"id":365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":2220,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":2097,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":6039,"src":"284:80:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"292:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":2137,"src":"365:79:0","symbolAliases":[{"foreign":{"id":8,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"373:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":633,"src":"445:63:0","symbolAliases":[{"foreign":{"id":10,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"453:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":13,"name":"Initializable","nameLocations":["2217:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"2217:13:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2217:13:0"},{"baseName":{"id":15,"name":"ContextUpgradeable","nameLocations":["2232:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"2232:18:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2232:18:0"},{"baseName":{"id":17,"name":"IAccessControl","nameLocations":["2252:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"2252:14:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2252:14:0"},{"baseName":{"id":19,"name":"ERC165Upgradeable","nameLocations":["2268:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"2268:17:0"},"id":20,"nodeType":"InheritanceSpecifier","src":"2268:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"510:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":364,"linearizedBaseContracts":[364,2136,6038,2219,2096,632],"name":"AccessControlUpgradeable","nameLocation":"2189:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":27,"members":[{"constant":false,"id":24,"mutability":"mutable","name":"hasRole","nameLocation":"2351:7:0","nodeType":"VariableDeclaration","scope":27,"src":"2318:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":23,"keyName":"account","keyNameLocation":"2334:7:0","keyType":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2318:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"name":"bool","nodeType":"ElementaryTypeName","src":"2345:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"adminRole","nameLocation":"2376:9:0","nodeType":"VariableDeclaration","scope":27,"src":"2368:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2368:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2299:8:0","nodeType":"StructDefinition","scope":364,"src":"2292:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2422:18:0","nodeType":"VariableDeclaration","scope":364,"src":"2398:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2398:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2455:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":37,"members":[{"constant":false,"id":36,"mutability":"mutable","name":"_roles","nameLocation":"2603:6:0","nodeType":"VariableDeclaration","scope":37,"src":"2569:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":35,"keyName":"role","keyNameLocation":"2585:4:0","keyType":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2577:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2569:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":34,"nodeType":"UserDefinedTypeName","pathNode":{"id":33,"name":"RoleData","nameLocations":["2593:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":27,"src":"2593:8:0"},"referencedDeclaration":27,"src":"2593:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2538:20:0","nodeType":"StructDefinition","scope":364,"src":"2531:85:0","visibility":"public"},{"constant":true,"id":40,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2764:28:0","nodeType":"VariableDeclaration","scope":364,"src":"2739:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":38,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2739:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2795:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":47,"nodeType":"Block","src":"2958:87:0","statements":[{"AST":{"nativeSrc":"2977:62:0","nodeType":"YulBlock","src":"2977:62:0","statements":[{"nativeSrc":"2991:38:0","nodeType":"YulAssignment","src":"2991:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"3001:28:0","nodeType":"YulIdentifier","src":"3001:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2991:6:0","nodeType":"YulIdentifier","src":"2991:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":44,"isOffset":false,"isSlot":true,"src":"2991:6:0","suffix":"slot","valueSize":1},{"declaration":40,"isOffset":false,"isSlot":false,"src":"3001:28:0","valueSize":1}],"id":46,"nodeType":"InlineAssembly","src":"2968:71:0"}]},"id":48,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2877:24:0","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[],"src":"2901:2:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"$","nameLocation":"2955:1:0","nodeType":"VariableDeclaration","scope":48,"src":"2926:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":43,"nodeType":"UserDefinedTypeName","pathNode":{"id":42,"name":"AccessControlStorage","nameLocations":["2926:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"2926:20:0"},"referencedDeclaration":37,"src":"2926:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2925:32:0"},"scope":364,"src":"2868:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":58,"nodeType":"Block","src":"3262:44:0","statements":[{"expression":{"arguments":[{"id":54,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"3283:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":53,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[131,152],"referencedDeclaration":131,"src":"3272:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":56,"nodeType":"ExpressionStatement","src":"3272:16:0"},{"id":57,"nodeType":"PlaceholderStatement","src":"3298:1:0"}]},"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"3051:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":59,"name":"onlyRole","nameLocation":"3239:8:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"role","nameLocation":"3256:4:0","nodeType":"VariableDeclaration","scope":59,"src":"3248:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":50,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3248:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3247:14:0"},"src":"3230:76:0","virtual":false,"visibility":"internal"},{"body":{"id":64,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":65,"implemented":true,"kind":"function","modifiers":[{"id":62,"kind":"modifierInvocation","modifierName":{"id":61,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init","nameLocation":"3321:20:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":364,"src":"3312:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":70,"nodeType":"Block","src":"3451:7:0","statements":[]},"id":71,"implemented":true,"kind":"function","modifiers":[{"id":68,"kind":"modifierInvocation","modifierName":{"id":67,"name":"onlyInitializing","nameLocations":["3434:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3434:16:0"},"nodeType":"ModifierInvocation","src":"3434:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3392:30:0","nodeType":"FunctionDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3422:2:0"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"3451:0:0"},"scope":364,"src":"3383:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2135],"body":{"id":92,"nodeType":"Block","src":"3582:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":80,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3599:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":82,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"3619:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$2219_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$2219_$","typeString":"type(contract IAccessControl)"}],"id":81,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3614:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$2219","typeString":"type(contract IAccessControl)"}},"id":84,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3635:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3614:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3599:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":88,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3674:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":86,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3650:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$364_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3656:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2135,"src":"3650:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3650:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3599:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":79,"id":91,"nodeType":"Return","src":"3592:94:0"}]},"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3463:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":93,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3500:17:0","nodeType":"FunctionDefinition","overrides":{"id":76,"nodeType":"OverrideSpecifier","overrides":[],"src":"3558:8:0"},"parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"interfaceId","nameLocation":"3525:11:0","nodeType":"VariableDeclaration","scope":93,"src":"3518:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":73,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3518:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3517:20:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":93,"src":"3576:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":77,"name":"bool","nodeType":"ElementaryTypeName","src":"3576:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3575:6:0"},"scope":364,"src":"3491:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2186],"body":{"id":117,"nodeType":"Block","src":"3863:124:0","statements":[{"assignments":[105],"declarations":[{"constant":false,"id":105,"mutability":"mutable","name":"$","nameLocation":"3902:1:0","nodeType":"VariableDeclaration","scope":117,"src":"3873:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":104,"nodeType":"UserDefinedTypeName","pathNode":{"id":103,"name":"AccessControlStorage","nameLocations":["3873:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"3873:20:0"},"referencedDeclaration":37,"src":"3873:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":108,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":106,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"3906:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3906:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3873:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":109,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"3949:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3951:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"3949:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":112,"indexExpression":{"id":111,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3958:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3949:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3964:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3949:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":115,"indexExpression":{"id":114,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3972:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3949:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":102,"id":116,"nodeType":"Return","src":"3942:38:0"}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3699:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":118,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3789:7:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3805:4:0","nodeType":"VariableDeclaration","scope":118,"src":"3797:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3797:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3819:7:0","nodeType":"VariableDeclaration","scope":118,"src":"3811:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3811:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3796:31:0"},"returnParameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":118,"src":"3857:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100,"name":"bool","nodeType":"ElementaryTypeName","src":"3857:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3856:6:0"},"scope":364,"src":"3780:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":130,"nodeType":"Block","src":"4252:47:0","statements":[{"expression":{"arguments":[{"id":125,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"4273:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":126,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"4279:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":124,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[131,152],"referencedDeclaration":152,"src":"4262:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":129,"nodeType":"ExpressionStatement","src":"4262:30:0"}]},"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"3993:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4205:10:0","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"role","nameLocation":"4224:4:0","nodeType":"VariableDeclaration","scope":131,"src":"4216:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4216:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4215:14:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"4252:0:0"},"scope":364,"src":"4196:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":151,"nodeType":"Block","src":"4502:124:0","statements":[{"condition":{"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4516:23:0","subExpression":{"arguments":[{"id":140,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4525:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":141,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"4531:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":139,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4517:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4517:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":150,"nodeType":"IfStatement","src":"4512:108:0","trueBody":{"id":149,"nodeType":"Block","src":"4541:79:0","statements":[{"errorCall":{"arguments":[{"id":145,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"4595:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":146,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4604:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":144,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"4562:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":148,"nodeType":"RevertStatement","src":"4555:54:0"}]}}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4305:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":152,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4438:10:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4457:4:0","nodeType":"VariableDeclaration","scope":152,"src":"4449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"4471:7:0","nodeType":"VariableDeclaration","scope":152,"src":"4463:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4448:31:0"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"4502:0:0"},"scope":364,"src":"4429:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2194],"body":{"id":172,"nodeType":"Block","src":"4881:117:0","statements":[{"assignments":[162],"declarations":[{"constant":false,"id":162,"mutability":"mutable","name":"$","nameLocation":"4920:1:0","nodeType":"VariableDeclaration","scope":172,"src":"4891:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":161,"nodeType":"UserDefinedTypeName","pathNode":{"id":160,"name":"AccessControlStorage","nameLocations":["4891:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"4891:20:0"},"referencedDeclaration":37,"src":"4891:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":165,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":163,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"4924:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4924:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4891:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":166,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"4967:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4969:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"4967:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":169,"indexExpression":{"id":168,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"4976:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4967:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4982:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4967:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":159,"id":171,"nodeType":"Return","src":"4960:31:0"}]},"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"4632:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":173,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4816:12:0","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"role","nameLocation":"4837:4:0","nodeType":"VariableDeclaration","scope":173,"src":"4829:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4829:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4828:14:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":173,"src":"4872:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4872:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4871:9:0"},"scope":364,"src":"4807:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2202],"body":{"id":191,"nodeType":"Block","src":"5388:42:0","statements":[{"expression":{"arguments":[{"id":187,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5409:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":188,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"5415:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":186,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5398:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5398:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":190,"nodeType":"ExpressionStatement","src":"5398:25:0"}]},"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"5004:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":192,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":182,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5381:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":181,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5368:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5368:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":184,"kind":"modifierInvocation","modifierName":{"id":180,"name":"onlyRole","nameLocations":["5359:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5359:8:0"},"nodeType":"ModifierInvocation","src":"5359:28:0"}],"name":"grantRole","nameLocation":"5303:9:0","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"role","nameLocation":"5321:4:0","nodeType":"VariableDeclaration","scope":192,"src":"5313:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5313:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"account","nameLocation":"5335:7:0","nodeType":"VariableDeclaration","scope":192,"src":"5327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"5327:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5312:31:0"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"5388:0:0"},"scope":364,"src":"5294:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2210],"body":{"id":210,"nodeType":"Block","src":"5805:43:0","statements":[{"expression":{"arguments":[{"id":206,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5827:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5833:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":205,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"5815:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5815:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":209,"nodeType":"ExpressionStatement","src":"5815:26:0"}]},"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"5436:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":211,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":203,"kind":"modifierInvocation","modifierName":{"id":199,"name":"onlyRole","nameLocations":["5776:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5776:8:0"},"nodeType":"ModifierInvocation","src":"5776:28:0"}],"name":"revokeRole","nameLocation":"5719:10:0","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"role","nameLocation":"5738:4:0","nodeType":"VariableDeclaration","scope":211,"src":"5730:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5730:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"account","nameLocation":"5752:7:0","nodeType":"VariableDeclaration","scope":211,"src":"5744:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"5744:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5729:31:0"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"5805:0:0"},"scope":364,"src":"5710:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2218],"body":{"id":233,"nodeType":"Block","src":"6475:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":219,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6489:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":220,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"6511:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6511:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6489:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":227,"nodeType":"IfStatement","src":"6485:102:0","trueBody":{"id":226,"nodeType":"Block","src":"6525:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":223,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6546:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6546:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"RevertStatement","src":"6539:37:0"}]}},{"expression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6609:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6615:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"6597:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":232,"nodeType":"ExpressionStatement","src":"6597:37:0"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"5854:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":234,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6405:12:0","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"role","nameLocation":"6426:4:0","nodeType":"VariableDeclaration","scope":234,"src":"6418:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6418:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6440:18:0","nodeType":"VariableDeclaration","scope":234,"src":"6432:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"6432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6417:42:0"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"6475:0:0"},"scope":364,"src":"6396:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":269,"nodeType":"Block","src":"6839:245:0","statements":[{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"$","nameLocation":"6878:1:0","nodeType":"VariableDeclaration","scope":269,"src":"6849:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":243,"nodeType":"UserDefinedTypeName","pathNode":{"id":242,"name":"AccessControlStorage","nameLocations":["6849:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"6849:20:0"},"referencedDeclaration":37,"src":"6849:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":247,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"6882:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6882:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6849:59:0"},{"assignments":[249],"declarations":[{"constant":false,"id":249,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6926:17:0","nodeType":"VariableDeclaration","scope":269,"src":"6918:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":253,"initialValue":{"arguments":[{"id":251,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6959:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":250,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"6946:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6946:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6918:46:0"},{"expression":{"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":254,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6974:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6976:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"6974:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":258,"indexExpression":{"id":256,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6974:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6989:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":26,"src":"6974:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":260,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7001:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6974:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":262,"nodeType":"ExpressionStatement","src":"6974:36:0"},{"eventCall":{"arguments":[{"id":264,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7042:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":265,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"7048:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":266,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7067:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":263,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"7025:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7025:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"EmitStatement","src":"7020:57:0"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"6647:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":270,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6775:13:0","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"role","nameLocation":"6797:4:0","nodeType":"VariableDeclaration","scope":270,"src":"6789:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6789:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"adminRole","nameLocation":"6811:9:0","nodeType":"VariableDeclaration","scope":270,"src":"6803:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6803:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6788:33:0"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"6839:0:0"},"scope":364,"src":"6766:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":316,"nodeType":"Block","src":"7401:304:0","statements":[{"assignments":[282],"declarations":[{"constant":false,"id":282,"mutability":"mutable","name":"$","nameLocation":"7440:1:0","nodeType":"VariableDeclaration","scope":316,"src":"7411:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":281,"nodeType":"UserDefinedTypeName","pathNode":{"id":280,"name":"AccessControlStorage","nameLocations":["7411:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"7411:20:0"},"referencedDeclaration":37,"src":"7411:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":285,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"7444:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7444:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7411:59:0"},{"condition":{"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7484:23:0","subExpression":{"arguments":[{"id":287,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7493:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":288,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7499:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":286,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"7485:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7485:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":314,"nodeType":"Block","src":"7662:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7683:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":279,"id":313,"nodeType":"Return","src":"7676:12:0"}]},"id":315,"nodeType":"IfStatement","src":"7480:219:0","trueBody":{"id":311,"nodeType":"Block","src":"7509:147:0","statements":[{"expression":{"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":291,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"7523:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7525:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"7523:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":295,"indexExpression":{"id":293,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7532:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7523:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7538:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"7523:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":298,"indexExpression":{"id":297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7546:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7523:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7557:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7523:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":301,"nodeType":"ExpressionStatement","src":"7523:38:0"},{"eventCall":{"arguments":[{"id":303,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7592:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":304,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"7607:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":302,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"7580:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7580:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"EmitStatement","src":"7575:45:0"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7641:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":279,"id":310,"nodeType":"Return","src":"7634:11:0"}]}}]},"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"7090:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":317,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7327:10:0","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"role","nameLocation":"7346:4:0","nodeType":"VariableDeclaration","scope":317,"src":"7338:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7338:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"account","nameLocation":"7360:7:0","nodeType":"VariableDeclaration","scope":317,"src":"7352:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"7352:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7337:31:0"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":317,"src":"7395:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":277,"name":"bool","nodeType":"ElementaryTypeName","src":"7395:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7394:6:0"},"scope":364,"src":"7318:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"8026:304:0","statements":[{"assignments":[329],"declarations":[{"constant":false,"id":329,"mutability":"mutable","name":"$","nameLocation":"8065:1:0","nodeType":"VariableDeclaration","scope":362,"src":"8036:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"AccessControlStorage","nameLocations":["8036:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"8036:20:0"},"referencedDeclaration":37,"src":"8036:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":332,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":330,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"8069:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8036:59:0"},{"condition":{"arguments":[{"id":334,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8117:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":335,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8123:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":333,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"8109:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8109:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":360,"nodeType":"Block","src":"8287:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8308:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":326,"id":359,"nodeType":"Return","src":"8301:12:0"}]},"id":361,"nodeType":"IfStatement","src":"8105:219:0","trueBody":{"id":357,"nodeType":"Block","src":"8133:148:0","statements":[{"expression":{"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":337,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8147:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8149:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"8147:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":341,"indexExpression":{"id":339,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8156:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8147:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8162:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"8147:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":344,"indexExpression":{"id":343,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8170:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8147:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8181:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8147:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":347,"nodeType":"ExpressionStatement","src":"8147:39:0"},{"eventCall":{"arguments":[{"id":349,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8217:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":350,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8223:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":351,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"8232:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8232:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":348,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"8205:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"EmitStatement","src":"8200:45:0"},{"expression":{"hexValue":"74727565","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8266:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":326,"id":356,"nodeType":"Return","src":"8259:11:0"}]}}]},"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"7711:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7951:11:0","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"role","nameLocation":"7971:4:0","nodeType":"VariableDeclaration","scope":363,"src":"7963:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7963:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"account","nameLocation":"7985:7:0","nodeType":"VariableDeclaration","scope":363,"src":"7977:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"7977:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7962:31:0"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"8020:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":324,"name":"bool","nodeType":"ElementaryTypeName","src":"8020:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8019:6:0"},"scope":364,"src":"7942:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":365,"src":"2171:6161:0","usedErrors":[381,384,2146,2149],"usedEvents":[389,2158,2167,2176]}],"src":"108:8225:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[632]},"id":633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":366,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":632,"linearizedBaseContracts":[632],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":375,"members":[{"constant":false,"id":371,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":375,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":370,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":375,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":632,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":378,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":632,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":381,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":384,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":389,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":389,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":386,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":471,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[394],"declarations":[{"constant":false,"id":394,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":471,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":393,"nodeType":"UserDefinedTypeName","pathNode":{"id":392,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"4158:20:1"},"referencedDeclaration":375,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":397,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":395,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[399],"declarations":[{"constant":false,"id":399,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":471,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":398,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":403,"initialValue":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":400,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[405],"declarations":[{"constant":false,"id":405,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":471,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":404,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":408,"initialValue":{"expression":{"id":406,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[410],"declarations":[{"constant":false,"id":410,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":471,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":409,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":416,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":411,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":414,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[418],"declarations":[{"constant":false,"id":418,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":471,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":431,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":419,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":424,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$632","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$632","typeString":"contract Initializable"}],"id":423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":432,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":434,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":441,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":440,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":437,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":439,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":442,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":447,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":448,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":456,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":455,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":449,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":457,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":458,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":469,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":459,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":464,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":465,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":472,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":518,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[479],"declarations":[{"constant":false,"id":479,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":518,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":478,"nodeType":"UserDefinedTypeName","pathNode":{"id":477,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"6355:20:1"},"referencedDeclaration":375,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":482,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":485,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":487,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":494,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":493,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":495,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":498,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":500,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":501,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":507,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":508,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":515,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":514,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":519,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":519,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":474,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":525,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":527,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":539,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":537,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":534,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":540,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":632,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[546],"declarations":[{"constant":false,"id":546,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":585,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":545,"nodeType":"UserDefinedTypeName","pathNode":{"id":544,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"7824:20:1"},"referencedDeclaration":375,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":549,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":547,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":550,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":556,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":555,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":552,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":557,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":560,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":584,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":583,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":565,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":569,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":568,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":574,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":577,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":575,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":632,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":596,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":592,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":591,"id":595,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":597,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":589,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":632,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":607,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":603,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":602,"id":606,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":608,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":600,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":632,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":616,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":614,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":613,"id":615,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":617,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":632,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[625],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":630,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":628,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":626,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":622,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":625,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":629,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":631,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":621,"nodeType":"UserDefinedTypeName","pathNode":{"id":620,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"9129:20:1"},"referencedDeclaration":375,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":632,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":633,"src":"2349:6929:1","usedErrors":[381,384],"usedEvents":[389]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[2681],"IERC1822Proxiable":[2250],"Initializable":[632],"UUPSUpgradeable":[814]},"id":815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":634,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":2251,"src":"141:88:2","symbolAliases":[{"foreign":{"id":635,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":2682,"src":"230:84:2","symbolAliases":[{"foreign":{"id":637,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":633,"src":"315:50:2","symbolAliases":[{"foreign":{"id":639,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":642,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1023:13:2"},"id":643,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":644,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":2250,"src":"1038:17:2"},"id":645,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":814,"linearizedBaseContracts":[814,2250,632],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":652,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":814,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":650,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":656,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":814,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":654,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":659,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":664,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":664,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":671,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":667,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":670,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":672,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":679,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":675,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":678,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":680,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":685,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":686,"implemented":true,"kind":"function","modifiers":[{"id":683,"kind":"modifierInvocation","modifierName":{"id":682,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":814,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":691,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":692,"implemented":true,"kind":"function","modifiers":[{"id":689,"kind":"modifierInvocation","modifierName":{"id":688,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":814,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2249],"body":{"id":703,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":700,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2681_$","typeString":"type(library ERC1967Utils)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2402,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":699,"id":702,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":704,"implemented":true,"kind":"function","modifiers":[{"id":696,"kind":"modifierInvocation","modifierName":{"id":695,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":680,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":704,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":814,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":723,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":715,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":714,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":719,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":718,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":724,"implemented":true,"kind":"function","modifiers":[{"id":712,"kind":"modifierInvocation","modifierName":{"id":711,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":724,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":724,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":708,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":814,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":745,"nodeType":"Block","src":"4623:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":730,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4658:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":732,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4667:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":734,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"4728:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2681_$","typeString":"type(library ERC1967Utils)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"4728:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":737,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4764:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4728:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":744,"nodeType":"IfStatement","src":"4633:251:2","trueBody":{"id":743,"nodeType":"Block","src":"4823:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":740,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"4844:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"RevertStatement","src":"4837:36:2"}]}}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"4381:192:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4587:11:2","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"4598:2:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"4623:0:2"},"scope":814,"src":"4578:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"5059:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":752,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:2","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":754,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5090:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5073:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":760,"nodeType":"IfStatement","src":"5069:145:2","trueBody":{"id":759,"nodeType":"Block","src":"5098:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":756,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"5174:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"RevertStatement","src":"5167:36:2"}]}}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"4896:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5016:18:2","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"5034:2:2"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"5059:0:2"},"scope":814,"src":"5007:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"5226:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":768,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5612:17:2","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"newImplementation","nameLocation":"5638:17:2","nodeType":"VariableDeclaration","scope":768,"src":"5630:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5629:27:2"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"5673:0:2"},"scope":814,"src":"5603:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":812,"nodeType":"Block","src":"6117:453:2","statements":[{"clauses":[{"block":{"id":801,"nodeType":"Block","src":"6207:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6225:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":785,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2681_$","typeString":"type(library ERC1967Utils)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6246:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2402,"src":"6233:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6225:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":793,"nodeType":"IfStatement","src":"6221:120:2","trueBody":{"id":792,"nodeType":"Block","src":"6267:74:2","statements":[{"errorCall":{"arguments":[{"id":789,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6321:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":788,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6292:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":791,"nodeType":"RevertStatement","src":"6285:41:2"}]}},{"expression":{"arguments":[{"id":797,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6384:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"6403:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":794,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"6354:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2681_$","typeString":"type(library ERC1967Utils)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":2496,"src":"6354:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"6354:54:2"}]},"errorName":"","id":802,"nodeType":"TryCatchClause","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"slot","nameLocation":"6201:4:2","nodeType":"VariableDeclaration","scope":802,"src":"6193:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6193:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6192:14:2"},"src":"6184:235:2"},{"block":{"id":809,"nodeType":"Block","src":"6426:138:2","statements":[{"errorCall":{"arguments":[{"id":806,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6535:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":803,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"6493:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2681_$","typeString":"type(library ERC1967Utils)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6506:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"6493:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"RevertStatement","src":"6486:67:2"}]},"errorName":"","id":810,"nodeType":"TryCatchClause","src":"6420:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":777,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6149:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":776,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"6131:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$2250_$","typeString":"type(contract IERC1822Proxiable)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$2250","typeString":"contract IERC1822Proxiable"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"6131:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":811,"nodeType":"TryStatement","src":"6127:437:2"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"5680:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":813,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6041:21:2","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"newImplementation","nameLocation":"6071:17:2","nodeType":"VariableDeclaration","scope":813,"src":"6063:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"data","nameLocation":"6103:4:2","nodeType":"VariableDeclaration","scope":813,"src":"6090:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":772,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6062:46:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"6117:0:2"},"scope":814,"src":"6032:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":815,"src":"986:5586:2","usedErrors":[381,384,659,664,2407,2420,3036,4309],"usedEvents":[389,2227]}],"src":"115:6458:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","exportedSymbols":{"Arrays":[4264],"ContextUpgradeable":[2096],"ERC1155Upgradeable":[1811],"ERC1155Utils":[3026],"ERC165Upgradeable":[2136],"IERC1155":[2814],"IERC1155Errors":[2387],"IERC1155MetadataURI":[2872],"IERC165":[6038],"Initializable":[632]},"id":1812,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":816,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","id":818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1812,"sourceUnit":2815,"src":"135:76:3","symbolAliases":[{"foreign":{"id":817,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"143:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","id":820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1812,"sourceUnit":2873,"src":"212:109:3","symbolAliases":[{"foreign":{"id":819,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"220:19:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","id":822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1812,"sourceUnit":3027,"src":"322:90:3","symbolAliases":[{"foreign":{"id":821,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"330:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1812,"sourceUnit":2097,"src":"413:70:3","symbolAliases":[{"foreign":{"id":823,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"421:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1812,"sourceUnit":6039,"src":"484:80:3","symbolAliases":[{"foreign":{"id":825,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"492:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":828,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1812,"sourceUnit":2137,"src":"565:82:3","symbolAliases":[{"foreign":{"id":827,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"573:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"@openzeppelin/contracts/utils/Arrays.sol","id":830,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1812,"sourceUnit":4265,"src":"648:64:3","symbolAliases":[{"foreign":{"id":829,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"656:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":832,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1812,"sourceUnit":2388,"src":"713:85:3","symbolAliases":[{"foreign":{"id":831,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"721:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1812,"sourceUnit":633,"src":"799:66:3","symbolAliases":[{"foreign":{"id":833,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"807:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":836,"name":"Initializable","nameLocations":["1092:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1092:13:3"},"id":837,"nodeType":"InheritanceSpecifier","src":"1092:13:3"},{"baseName":{"id":838,"name":"ContextUpgradeable","nameLocations":["1107:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"1107:18:3"},"id":839,"nodeType":"InheritanceSpecifier","src":"1107:18:3"},{"baseName":{"id":840,"name":"ERC165Upgradeable","nameLocations":["1127:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"1127:17:3"},"id":841,"nodeType":"InheritanceSpecifier","src":"1127:17:3"},{"baseName":{"id":842,"name":"IERC1155","nameLocations":["1146:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":2814,"src":"1146:8:3"},"id":843,"nodeType":"InheritanceSpecifier","src":"1146:8:3"},{"baseName":{"id":844,"name":"IERC1155MetadataURI","nameLocations":["1156:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":2872,"src":"1156:19:3"},"id":845,"nodeType":"InheritanceSpecifier","src":"1156:19:3"},{"baseName":{"id":846,"name":"IERC1155Errors","nameLocations":["1177:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2387,"src":"1177:14:3"},"id":847,"nodeType":"InheritanceSpecifier","src":"1177:14:3"}],"canonicalName":"ERC1155Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"867:184:3","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1811,"linearizedBaseContracts":[1811,2387,2872,2814,2136,6038,2096,632],"name":"ERC1155Upgradeable","nameLocation":"1070:18:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":851,"libraryName":{"id":848,"name":"Arrays","nameLocations":["1204:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4264,"src":"1204:6:3"},"nodeType":"UsingForDirective","src":"1198:27:3","typeName":{"baseType":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":850,"nodeType":"ArrayTypeName","src":"1215:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":855,"libraryName":{"id":852,"name":"Arrays","nameLocations":["1236:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4264,"src":"1236:6:3"},"nodeType":"UsingForDirective","src":"1230:27:3","typeName":{"baseType":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":854,"nodeType":"ArrayTypeName","src":"1247:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"canonicalName":"ERC1155Upgradeable.ERC1155Storage","documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"1263:65:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC1155"},"id":871,"members":[{"constant":false,"id":862,"mutability":"mutable","name":"_balances","nameLocation":"1424:9:3","nodeType":"VariableDeclaration","scope":871,"src":"1365:68:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":861,"keyName":"id","keyNameLocation":"1381:2:3","keyType":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1365:58:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":860,"keyName":"account","keyNameLocation":"1403:7:3","keyType":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1387:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1506:18:3","nodeType":"VariableDeclaration","scope":871,"src":"1444:80:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":867,"keyName":"account","keyNameLocation":"1460:7:3","keyType":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1444:61:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":866,"keyName":"operator","keyNameLocation":"1487:8:3","keyType":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"1479:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1471:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":865,"name":"bool","nodeType":"ElementaryTypeName","src":"1499:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"_uri","nameLocation":"1660:4:3","nodeType":"VariableDeclaration","scope":871,"src":"1653:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":869,"name":"string","nodeType":"ElementaryTypeName","src":"1653:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC1155Storage","nameLocation":"1340:14:3","nodeType":"StructDefinition","scope":1811,"src":"1333:338:3","visibility":"public"},{"constant":true,"id":874,"mutability":"constant","name":"ERC1155StorageLocation","nameLocation":"1813:22:3","nodeType":"VariableDeclaration","scope":1811,"src":"1788:116:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1788:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838386265353336643532343063323734613362316433613162653534343832666439636161323934663038633632613763646535363966343961336334353030","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1838:66:3","typeDescriptions":{"typeIdentifier":"t_rational_61850824141875340645484003952679861077730695310785076753205161524670616061184_by_1","typeString":"int_const 6185...(69 digits omitted)...1184"},"value":"0x88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500"},"visibility":"private"},{"body":{"id":881,"nodeType":"Block","src":"1989:81:3","statements":[{"AST":{"nativeSrc":"2008:56:3","nodeType":"YulBlock","src":"2008:56:3","statements":[{"nativeSrc":"2022:32:3","nodeType":"YulAssignment","src":"2022:32:3","value":{"name":"ERC1155StorageLocation","nativeSrc":"2032:22:3","nodeType":"YulIdentifier","src":"2032:22:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2022:6:3","nodeType":"YulIdentifier","src":"2022:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":878,"isOffset":false,"isSlot":true,"src":"2022:6:3","suffix":"slot","valueSize":1},{"declaration":874,"isOffset":false,"isSlot":false,"src":"2032:22:3","valueSize":1}],"id":880,"nodeType":"InlineAssembly","src":"1999:65:3"}]},"id":882,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC1155Storage","nameLocation":"1920:18:3","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"1938:2:3"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"$","nameLocation":"1986:1:3","nodeType":"VariableDeclaration","scope":882,"src":"1963:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":877,"nodeType":"UserDefinedTypeName","pathNode":{"id":876,"name":"ERC1155Storage","nameLocations":["1963:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":871,"src":"1963:14:3"},"referencedDeclaration":871,"src":"1963:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"src":"1962:26:3"},"scope":1811,"src":"1911:159:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":894,"nodeType":"Block","src":"2189:47:3","statements":[{"expression":{"arguments":[{"id":891,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2224:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":890,"name":"__ERC1155_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"2199:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2199:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"2199:30:3"}]},"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"2076:38:3","text":" @dev See {_setURI}."},"id":895,"implemented":true,"kind":"function","modifiers":[{"id":888,"kind":"modifierInvocation","modifierName":{"id":887,"name":"onlyInitializing","nameLocations":["2172:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2172:16:3"},"nodeType":"ModifierInvocation","src":"2172:16:3"}],"name":"__ERC1155_init","nameLocation":"2128:14:3","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"uri_","nameLocation":"2157:4:3","nodeType":"VariableDeclaration","scope":895,"src":"2143:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":884,"name":"string","nodeType":"ElementaryTypeName","src":"2143:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2142:20:3"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2189:0:3"},"scope":1811,"src":"2119:117:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":906,"nodeType":"Block","src":"2322:30:3","statements":[{"expression":{"arguments":[{"id":903,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"2340:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":902,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"2332:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":905,"nodeType":"ExpressionStatement","src":"2332:13:3"}]},"id":907,"implemented":true,"kind":"function","modifiers":[{"id":900,"kind":"modifierInvocation","modifierName":{"id":899,"name":"onlyInitializing","nameLocations":["2305:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2305:16:3"},"nodeType":"ModifierInvocation","src":"2305:16:3"}],"name":"__ERC1155_init_unchained","nameLocation":"2251:24:3","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"uri_","nameLocation":"2290:4:3","nodeType":"VariableDeclaration","scope":907,"src":"2276:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":896,"name":"string","nodeType":"ElementaryTypeName","src":"2276:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2275:20:3"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[],"src":"2322:0:3"},"scope":1811,"src":"2242:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2135,6037],"body":{"id":937,"nodeType":"Block","src":"2505:197:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":918,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"2534:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":920,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"2554:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$2814_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$2814_$","typeString":"type(contract IERC1155)"}],"id":919,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2549:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2549:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$2814","typeString":"type(contract IERC1155)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2564:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2549:26:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2534:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"2591:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":926,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"2611:19:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$2872_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$2872_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":925,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2606:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$2872","typeString":"type(contract IERC1155MetadataURI)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2632:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2606:37:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2591:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2534:109:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":933,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"2683:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":931,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2659:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Upgradeable_$1811_$","typeString":"type(contract super ERC1155Upgradeable)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2665:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2135,"src":"2659:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2534:161:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":917,"id":936,"nodeType":"Return","src":"2515:180:3"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"2358:23:3","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":938,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2395:17:3","nodeType":"FunctionDefinition","overrides":{"id":914,"nodeType":"OverrideSpecifier","overrides":[{"id":912,"name":"ERC165Upgradeable","nameLocations":["2462:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"2462:17:3"},{"id":913,"name":"IERC165","nameLocations":["2481:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":6038,"src":"2481:7:3"}],"src":"2453:36:3"},"parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"interfaceId","nameLocation":"2420:11:3","nodeType":"VariableDeclaration","scope":938,"src":"2413:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":909,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2413:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2412:20:3"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":938,"src":"2499:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":915,"name":"bool","nodeType":"ElementaryTypeName","src":"2499:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2498:6:3"},"scope":1811,"src":"2386:316:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2871],"body":{"id":955,"nodeType":"Block","src":"3176:87:3","statements":[{"assignments":[948],"declarations":[{"constant":false,"id":948,"mutability":"mutable","name":"$","nameLocation":"3209:1:3","nodeType":"VariableDeclaration","scope":955,"src":"3186:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":947,"nodeType":"UserDefinedTypeName","pathNode":{"id":946,"name":"ERC1155Storage","nameLocations":["3186:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":871,"src":"3186:14:3"},"referencedDeclaration":871,"src":"3186:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":951,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":949,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"3213:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$871_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3213:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3186:47:3"},{"expression":{"expression":{"id":952,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"3250:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3252:4:3","memberName":"_uri","nodeType":"MemberAccess","referencedDeclaration":870,"src":"3250:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":945,"id":954,"nodeType":"Return","src":"3243:13:3"}]},"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"2708:388:3","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":956,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"3110:3:3","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"3114:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3113:18:3"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"3161:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":943,"name":"string","nodeType":"ElementaryTypeName","src":"3161:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3160:15:3"},"scope":1811,"src":"3101:162:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2752],"body":{"id":979,"nodeType":"Block","src":"3384:105:3","statements":[{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"$","nameLocation":"3417:1:3","nodeType":"VariableDeclaration","scope":979,"src":"3394:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":967,"nodeType":"UserDefinedTypeName","pathNode":{"id":966,"name":"ERC1155Storage","nameLocations":["3394:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":871,"src":"3394:14:3"},"referencedDeclaration":871,"src":"3394:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":971,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":969,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"3421:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$871_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3421:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3394:47:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":972,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"3458:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3460:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":862,"src":"3458:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":975,"indexExpression":{"id":974,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"3470:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3458:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":977,"indexExpression":{"id":976,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"3474:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3458:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":965,"id":978,"nodeType":"Return","src":"3451:31:3"}]},"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"3269:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"00fdd58e","id":980,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3307:9:3","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"account","nameLocation":"3325:7:3","nodeType":"VariableDeclaration","scope":980,"src":"3317:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"id","nameLocation":"3342:2:3","nodeType":"VariableDeclaration","scope":980,"src":"3334:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3316:29:3"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"3375:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3374:9:3"},"scope":1811,"src":"3298:191:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2765],"body":{"id":1049,"nodeType":"Block","src":"3788:410:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":993,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3802:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3811:6:3","memberName":"length","nodeType":"MemberAccess","src":"3802:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":995,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3821:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3825:6:3","memberName":"length","nodeType":"MemberAccess","src":"3821:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3802:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1006,"nodeType":"IfStatement","src":"3798:121:3","trueBody":{"id":1005,"nodeType":"Block","src":"3833:86:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":999,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3880:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3884:6:3","memberName":"length","nodeType":"MemberAccess","src":"3880:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1001,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3892:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3901:6:3","memberName":"length","nodeType":"MemberAccess","src":"3892:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":998,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"3854:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"RevertStatement","src":"3847:61:3"}]}},{"assignments":[1011],"declarations":[{"constant":false,"id":1011,"mutability":"mutable","name":"batchBalances","nameLocation":"3946:13:3","nodeType":"VariableDeclaration","scope":1049,"src":"3929:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"3929:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ArrayTypeName","src":"3929:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1018,"initialValue":{"arguments":[{"expression":{"id":1015,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3976:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:6:3","memberName":"length","nodeType":"MemberAccess","src":"3976:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3962:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"3966:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1013,"nodeType":"ArrayTypeName","src":"3966:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3962:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3929:63:3"},{"body":{"id":1045,"nodeType":"Block","src":"4049:112:3","statements":[{"expression":{"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1030,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"4063:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1032,"indexExpression":{"id":1031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4077:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4063:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4120:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1034,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4092:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4101:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4156,"src":"4092:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4092:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1040,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4147:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1038,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"4124:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4128:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"4124:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4124:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1033,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"4082:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4082:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4063:87:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1044,"nodeType":"ExpressionStatement","src":"4063:87:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4023:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1024,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4027:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4036:6:3","memberName":"length","nodeType":"MemberAccess","src":"4027:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4023:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1046,"initializationExpression":{"assignments":[1020],"declarations":[{"constant":false,"id":1020,"mutability":"mutable","name":"i","nameLocation":"4016:1:3","nodeType":"VariableDeclaration","scope":1046,"src":"4008:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"4008:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1022,"initialValue":{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4020:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4008:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4044:3:3","subExpression":{"id":1027,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4046:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1029,"nodeType":"ExpressionStatement","src":"4044:3:3"},"nodeType":"ForStatement","src":"4003:158:3"},{"expression":{"id":1047,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"4178:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":992,"id":1048,"nodeType":"Return","src":"4171:20:3"}]},"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"3495:146:3","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1050,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"3655:14:3","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"accounts","nameLocation":"3696:8:3","nodeType":"VariableDeclaration","scope":1050,"src":"3679:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":982,"name":"address","nodeType":"ElementaryTypeName","src":"3679:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":983,"nodeType":"ArrayTypeName","src":"3679:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"ids","nameLocation":"3731:3:3","nodeType":"VariableDeclaration","scope":1050,"src":"3714:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":986,"nodeType":"ArrayTypeName","src":"3714:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3669:71:3"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1050,"src":"3770:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":990,"nodeType":"ArrayTypeName","src":"3770:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3769:18:3"},"scope":1811,"src":"3646:552:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2773],"body":{"id":1065,"nodeType":"Block","src":"4308:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1059,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"4337:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1061,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4351:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1062,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4361:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1058,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"4318:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"ExpressionStatement","src":"4318:52:3"}]},"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"4204:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"a22cb465","id":1066,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4242:17:3","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"operator","nameLocation":"4268:8:3","nodeType":"VariableDeclaration","scope":1066,"src":"4260:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"4260:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"approved","nameLocation":"4283:8:3","nodeType":"VariableDeclaration","scope":1066,"src":"4278:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1054,"name":"bool","nodeType":"ElementaryTypeName","src":"4278:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4259:33:3"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"4308:0:3"},"scope":1811,"src":"4233:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2783],"body":{"id":1089,"nodeType":"Block","src":"4508:120:3","statements":[{"assignments":[1078],"declarations":[{"constant":false,"id":1078,"mutability":"mutable","name":"$","nameLocation":"4541:1:3","nodeType":"VariableDeclaration","scope":1089,"src":"4518:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1077,"nodeType":"UserDefinedTypeName","pathNode":{"id":1076,"name":"ERC1155Storage","nameLocations":["4518:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":871,"src":"4518:14:3"},"referencedDeclaration":871,"src":"4518:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1081,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1079,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4545:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$871_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4545:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4518:47:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1082,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"4582:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4584:18:3","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":868,"src":"4582:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1085,"indexExpression":{"id":1084,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"4603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4582:29:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1087,"indexExpression":{"id":1086,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"4612:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4582:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1075,"id":1088,"nodeType":"Return","src":"4575:46:3"}]},"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"4383:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"e985e9c5","id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4421:16:3","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"account","nameLocation":"4446:7:3","nodeType":"VariableDeclaration","scope":1090,"src":"4438:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"4438:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"operator","nameLocation":"4463:8:3","nodeType":"VariableDeclaration","scope":1090,"src":"4455:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"4455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4437:35:3"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"4502:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1073,"name":"bool","nodeType":"ElementaryTypeName","src":"4502:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4501:6:3"},"scope":1811,"src":"4412:216:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2797],"body":{"id":1133,"nodeType":"Block","src":"4776:238:3","statements":[{"assignments":[1105],"declarations":[{"constant":false,"id":1105,"mutability":"mutable","name":"sender","nameLocation":"4794:6:3","nodeType":"VariableDeclaration","scope":1133,"src":"4786:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"4786:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1108,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1106,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"4803:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4803:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4786:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1109,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4829:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1110,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4837:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4829:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4847:31:3","subExpression":{"arguments":[{"id":1113,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4865:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4871:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1112,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"4848:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4848:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4829:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1124,"nodeType":"IfStatement","src":"4825:129:3","trueBody":{"id":1123,"nodeType":"Block","src":"4880:74:3","statements":[{"errorCall":{"arguments":[{"id":1119,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4930:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1120,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4938:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1118,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"4901:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4901:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1122,"nodeType":"RevertStatement","src":"4894:49:3"}]}},{"expression":{"arguments":[{"id":1126,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4981:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1127,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"4987:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1128,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"4991:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4995:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1130,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"5002:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1125,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"4963:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4963:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1132,"nodeType":"ExpressionStatement","src":"4963:44:3"}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"4634:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"f242432a","id":1134,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4672:16:3","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"from","nameLocation":"4697:4:3","nodeType":"VariableDeclaration","scope":1134,"src":"4689:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"to","nameLocation":"4711:2:3","nodeType":"VariableDeclaration","scope":1134,"src":"4703:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"4703:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"id","nameLocation":"4723:2:3","nodeType":"VariableDeclaration","scope":1134,"src":"4715:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"4715:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"value","nameLocation":"4735:5:3","nodeType":"VariableDeclaration","scope":1134,"src":"4727:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"data","nameLocation":"4755:4:3","nodeType":"VariableDeclaration","scope":1134,"src":"4742:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1100,"name":"bytes","nodeType":"ElementaryTypeName","src":"4742:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4688:72:3"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[],"src":"4776:0:3"},"scope":1811,"src":"4663:351:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2813],"body":{"id":1179,"nodeType":"Block","src":"5233:245:3","statements":[{"assignments":[1151],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"sender","nameLocation":"5251:6:3","nodeType":"VariableDeclaration","scope":1179,"src":"5243:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1154,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1152,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"5260:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5260:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5243:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"5286:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1156,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"5294:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5286:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5304:31:3","subExpression":{"arguments":[{"id":1159,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"5322:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"5328:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1158,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"5305:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5305:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5286:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1170,"nodeType":"IfStatement","src":"5282:129:3","trueBody":{"id":1169,"nodeType":"Block","src":"5337:74:3","statements":[{"errorCall":{"arguments":[{"id":1165,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"5387:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"5395:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1164,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"5358:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5358:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"RevertStatement","src":"5351:49:3"}]}},{"expression":{"arguments":[{"id":1172,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"5443:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1173,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"5449:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1174,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5453:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1175,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"5458:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1176,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"5466:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1171,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"5420:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1178,"nodeType":"ExpressionStatement","src":"5420:51:3"}]},"documentation":{"id":1135,"nodeType":"StructuredDocumentation","src":"5020:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"2eb2c2d6","id":1180,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"5058:21:3","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"from","nameLocation":"5097:4:3","nodeType":"VariableDeclaration","scope":1180,"src":"5089:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"5089:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"to","nameLocation":"5119:2:3","nodeType":"VariableDeclaration","scope":1180,"src":"5111:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"5111:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"ids","nameLocation":"5148:3:3","nodeType":"VariableDeclaration","scope":1180,"src":"5131:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"5131:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1141,"nodeType":"ArrayTypeName","src":"5131:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"values","nameLocation":"5178:6:3","nodeType":"VariableDeclaration","scope":1180,"src":"5161:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"5161:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1144,"nodeType":"ArrayTypeName","src":"5161:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"data","nameLocation":"5207:4:3","nodeType":"VariableDeclaration","scope":1180,"src":"5194:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1146,"name":"bytes","nodeType":"ElementaryTypeName","src":"5194:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5079:138:3"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"5233:0:3"},"scope":1811,"src":"5049:429:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1343,"nodeType":"Block","src":"6286:1237:3","statements":[{"assignments":[1196],"declarations":[{"constant":false,"id":1196,"mutability":"mutable","name":"$","nameLocation":"6319:1:3","nodeType":"VariableDeclaration","scope":1343,"src":"6296:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1195,"nodeType":"UserDefinedTypeName","pathNode":{"id":1194,"name":"ERC1155Storage","nameLocations":["6296:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":871,"src":"6296:14:3"},"referencedDeclaration":871,"src":"6296:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1199,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1197,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6323:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$871_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6323:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6296:47:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1200,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6357:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6361:6:3","memberName":"length","nodeType":"MemberAccess","src":"6357:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1202,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6371:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6378:6:3","memberName":"length","nodeType":"MemberAccess","src":"6371:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6357:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1213,"nodeType":"IfStatement","src":"6353:117:3","trueBody":{"id":1212,"nodeType":"Block","src":"6386:84:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":1206,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6433:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6437:6:3","memberName":"length","nodeType":"MemberAccess","src":"6433:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1208,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6445:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6452:6:3","memberName":"length","nodeType":"MemberAccess","src":"6445:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1205,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"6407:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"RevertStatement","src":"6400:59:3"}]}},{"assignments":[1215],"declarations":[{"constant":false,"id":1215,"mutability":"mutable","name":"operator","nameLocation":"6488:8:3","nodeType":"VariableDeclaration","scope":1343,"src":"6480:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"6480:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1218,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1216,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"6499:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6499:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6480:31:3"},{"body":{"id":1304,"nodeType":"Block","src":"6563:656:3","statements":[{"assignments":[1231],"declarations":[{"constant":false,"id":1231,"mutability":"mutable","name":"id","nameLocation":"6585:2:3","nodeType":"VariableDeclaration","scope":1304,"src":"6577:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1236,"initialValue":{"arguments":[{"id":1234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"6613:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1232,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6590:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6594:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"6590:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6590:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6577:38:3"},{"assignments":[1238],"declarations":[{"constant":false,"id":1238,"mutability":"mutable","name":"value","nameLocation":"6637:5:3","nodeType":"VariableDeclaration","scope":1304,"src":"6629:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"6629:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1243,"initialValue":{"arguments":[{"id":1241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"6671:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1239,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6645:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"6645:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6645:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6629:44:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"6692:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6708:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6700:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"6700:7:3","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6692:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1285,"nodeType":"IfStatement","src":"6688:424:3","trueBody":{"id":1284,"nodeType":"Block","src":"6712:400:3","statements":[{"assignments":[1251],"declarations":[{"constant":false,"id":1251,"mutability":"mutable","name":"fromBalance","nameLocation":"6738:11:3","nodeType":"VariableDeclaration","scope":1284,"src":"6730:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"6730:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1258,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"id":1252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"6752:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6754:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":862,"src":"6752:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1255,"indexExpression":{"id":1254,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"6764:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6752:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1257,"indexExpression":{"id":1256,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"6768:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6752:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6730:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1259,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6795:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"6809:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6795:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1270,"nodeType":"IfStatement","src":"6791:129:3","trueBody":{"id":1269,"nodeType":"Block","src":"6816:104:3","statements":[{"errorCall":{"arguments":[{"id":1263,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"6872:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6878:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"6891:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1266,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"6898:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1262,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"6845:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6845:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"RevertStatement","src":"6838:63:3"}]}},{"id":1283,"nodeType":"UncheckedBlock","src":"6937:161:3","statements":[{"expression":{"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1271,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"7036:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7038:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":862,"src":"7036:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1276,"indexExpression":{"id":1273,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"7048:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7036:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1277,"indexExpression":{"id":1274,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7052:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7036:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7060:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"7074:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7060:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7036:43:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1282,"nodeType":"ExpressionStatement","src":"7036:43:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1286,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"7130:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7136:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"7136:7:3","typeDescriptions":{}}},"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7136:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7130:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1303,"nodeType":"IfStatement","src":"7126:83:3","trueBody":{"id":1302,"nodeType":"Block","src":"7148:61:3","statements":[{"expression":{"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1292,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"7166:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7168:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":862,"src":"7166:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1297,"indexExpression":{"id":1294,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"7178:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7166:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1298,"indexExpression":{"id":1295,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"7182:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7166:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"7189:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7166:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1301,"nodeType":"ExpressionStatement","src":"7166:28:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1223,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"6542:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1224,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6546:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6550:6:3","memberName":"length","nodeType":"MemberAccess","src":"6546:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6542:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1305,"initializationExpression":{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"i","nameLocation":"6535:1:3","nodeType":"VariableDeclaration","scope":1305,"src":"6527:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"6527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1222,"initialValue":{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6539:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6527:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6558:3:3","subExpression":{"id":1227,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"6560:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1229,"nodeType":"ExpressionStatement","src":"6558:3:3"},"nodeType":"ForStatement","src":"6522:697:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1306,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"7233:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7237:6:3","memberName":"length","nodeType":"MemberAccess","src":"7233:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7247:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7233:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1341,"nodeType":"Block","src":"7441:76:3","statements":[{"eventCall":{"arguments":[{"id":1334,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"7474:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1335,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7484:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1336,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"7490:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1337,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"7494:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1338,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"7499:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1333,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7460:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7460:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1340,"nodeType":"EmitStatement","src":"7455:51:3"}]},"id":1342,"nodeType":"IfStatement","src":"7229:288:3","trueBody":{"id":1332,"nodeType":"Block","src":"7250:185:3","statements":[{"assignments":[1311],"declarations":[{"constant":false,"id":1311,"mutability":"mutable","name":"id","nameLocation":"7272:2:3","nodeType":"VariableDeclaration","scope":1332,"src":"7264:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"7264:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1316,"initialValue":{"arguments":[{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7300:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1312,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"7277:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7281:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"7277:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7277:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7264:38:3"},{"assignments":[1318],"declarations":[{"constant":false,"id":1318,"mutability":"mutable","name":"value","nameLocation":"7324:5:3","nodeType":"VariableDeclaration","scope":1332,"src":"7316:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"7316:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1323,"initialValue":{"arguments":[{"hexValue":"30","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7358:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1319,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"7332:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7339:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"7332:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7332:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7316:44:3"},{"eventCall":{"arguments":[{"id":1325,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"7394:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7404:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"7410:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"7414:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7418:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1324,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"7379:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7379:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"EmitStatement","src":"7374:50:3"}]}}]},"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"5484:690:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":1344,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6188:7:3","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"from","nameLocation":"6204:4:3","nodeType":"VariableDeclaration","scope":1344,"src":"6196:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"to","nameLocation":"6218:2:3","nodeType":"VariableDeclaration","scope":1344,"src":"6210:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"6210:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"ids","nameLocation":"6239:3:3","nodeType":"VariableDeclaration","scope":1344,"src":"6222:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"6222:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"nodeType":"ArrayTypeName","src":"6222:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"values","nameLocation":"6261:6:3","nodeType":"VariableDeclaration","scope":1344,"src":"6244:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"6244:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1190,"nodeType":"ArrayTypeName","src":"6244:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6195:73:3"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[],"src":"6286:0:3"},"scope":1811,"src":"6179:1344:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1423,"nodeType":"Block","src":"8293:509:3","statements":[{"expression":{"arguments":[{"id":1361,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"8311:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1362,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"8317:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1363,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"8321:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1364,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8326:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1360,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"8303:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8303:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"ExpressionStatement","src":"8303:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1367,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"8347:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8361:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8353:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:3","typeDescriptions":{}}},"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8353:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8347:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1422,"nodeType":"IfStatement","src":"8343:453:3","trueBody":{"id":1421,"nodeType":"Block","src":"8365:431:3","statements":[{"assignments":[1374],"declarations":[{"constant":false,"id":1374,"mutability":"mutable","name":"operator","nameLocation":"8387:8:3","nodeType":"VariableDeclaration","scope":1421,"src":"8379:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"8379:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1377,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1375,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"8398:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8379:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1378,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"8428:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8432:6:3","memberName":"length","nodeType":"MemberAccess","src":"8428:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8442:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8428:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1419,"nodeType":"Block","src":"8674:112:3","statements":[{"expression":{"arguments":[{"id":1411,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"8733:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"8743:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1413,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"8749:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1414,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"8753:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1415,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8758:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1416,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8766:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1408,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"8692:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$3026_$","typeString":"type(library ERC1155Utils)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8705:27:3","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":3025,"src":"8692:40:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1418,"nodeType":"ExpressionStatement","src":"8692:79:3"}]},"id":1420,"nodeType":"IfStatement","src":"8424:362:3","trueBody":{"id":1407,"nodeType":"Block","src":"8445:223:3","statements":[{"assignments":[1383],"declarations":[{"constant":false,"id":1383,"mutability":"mutable","name":"id","nameLocation":"8471:2:3","nodeType":"VariableDeclaration","scope":1407,"src":"8463:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"8463:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"initialValue":{"arguments":[{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8499:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1384,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"8476:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8480:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"8476:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8476:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8463:38:3"},{"assignments":[1390],"declarations":[{"constant":false,"id":1390,"mutability":"mutable","name":"value","nameLocation":"8527:5:3","nodeType":"VariableDeclaration","scope":1407,"src":"8519:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"8519:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1395,"initialValue":{"arguments":[{"hexValue":"30","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8561:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1391,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8535:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8542:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"8535:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8535:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8519:44:3"},{"expression":{"arguments":[{"id":1399,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"8617:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1400,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"8627:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1401,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"8633:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1402,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"8637:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"8641:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1404,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8648:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1396,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"8581:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$3026_$","typeString":"type(library ERC1155Utils)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:22:3","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2951,"src":"8581:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1406,"nodeType":"ExpressionStatement","src":"8581:72:3"}]}}]}}]},"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"7529:568:3","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1424,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"8111:26:3","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"from","nameLocation":"8155:4:3","nodeType":"VariableDeclaration","scope":1424,"src":"8147:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"8147:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"to","nameLocation":"8177:2:3","nodeType":"VariableDeclaration","scope":1424,"src":"8169:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"8169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"ids","nameLocation":"8206:3:3","nodeType":"VariableDeclaration","scope":1424,"src":"8189:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8189:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1351,"nodeType":"ArrayTypeName","src":"8189:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"values","nameLocation":"8236:6:3","nodeType":"VariableDeclaration","scope":1424,"src":"8219:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"8219:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1354,"nodeType":"ArrayTypeName","src":"8219:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"data","nameLocation":"8265:4:3","nodeType":"VariableDeclaration","scope":1424,"src":"8252:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1356,"name":"bytes","nodeType":"ElementaryTypeName","src":"8252:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8137:138:3"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[],"src":"8293:0:3"},"scope":1811,"src":"8102:700:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"9367:355:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1438,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"9381:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9387:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"9387:7:3","typeDescriptions":{}}},"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9381:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1452,"nodeType":"IfStatement","src":"9377:88:3","trueBody":{"id":1451,"nodeType":"Block","src":"9399:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9451:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9443:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"9443:7:3","typeDescriptions":{}}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9443:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1444,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"9420:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9420:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"RevertStatement","src":"9413:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9478:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9494:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9486:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"9486:7:3","typeDescriptions":{}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9486:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9478:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1467,"nodeType":"IfStatement","src":"9474:88:3","trueBody":{"id":1466,"nodeType":"Block","src":"9498:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9548:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9540:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"9540:7:3","typeDescriptions":{}}},"id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9540:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1459,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"9519:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9519:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"RevertStatement","src":"9512:39:3"}]}},{"assignments":[1472,1475],"declarations":[{"constant":false,"id":1472,"mutability":"mutable","name":"ids","nameLocation":"9589:3:3","nodeType":"VariableDeclaration","scope":1489,"src":"9572:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"9572:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1471,"nodeType":"ArrayTypeName","src":"9572:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"values","nameLocation":"9611:6:3","nodeType":"VariableDeclaration","scope":1489,"src":"9594:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1474,"nodeType":"ArrayTypeName","src":"9594:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1480,"initialValue":{"arguments":[{"id":1477,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"9640:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"9644:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1476,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"9621:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9621:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"9571:79:3"},{"expression":{"arguments":[{"id":1482,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9687:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1483,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"9693:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1484,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"9697:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1485,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"9702:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1486,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"9710:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1481,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"9660:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9660:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"9660:55:3"}]},"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"8808:446:3","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"9268:17:3","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"from","nameLocation":"9294:4:3","nodeType":"VariableDeclaration","scope":1490,"src":"9286:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"to","nameLocation":"9308:2:3","nodeType":"VariableDeclaration","scope":1490,"src":"9300:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"9300:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"id","nameLocation":"9320:2:3","nodeType":"VariableDeclaration","scope":1490,"src":"9312:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9312:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"value","nameLocation":"9332:5:3","nodeType":"VariableDeclaration","scope":1490,"src":"9324:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"9324:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"data","nameLocation":"9352:4:3","nodeType":"VariableDeclaration","scope":1490,"src":"9339:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1434,"name":"bytes","nodeType":"ElementaryTypeName","src":"9339:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9285:72:3"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"9367:0:3"},"scope":1811,"src":"9259:463:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1544,"nodeType":"Block","src":"10302:266:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"10316:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10322:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1507,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:3","typeDescriptions":{}}},"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10322:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10316:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1520,"nodeType":"IfStatement","src":"10312:88:3","trueBody":{"id":1519,"nodeType":"Block","src":"10334:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10386:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10378:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"10378:7:3","typeDescriptions":{}}},"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10378:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1512,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"10355:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10355:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1518,"nodeType":"RevertStatement","src":"10348:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10413:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10421:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:3","typeDescriptions":{}}},"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10421:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10413:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1535,"nodeType":"IfStatement","src":"10409:88:3","trueBody":{"id":1534,"nodeType":"Block","src":"10433:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10483:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10475:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:3","typeDescriptions":{}}},"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10475:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1527,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"10454:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10454:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"RevertStatement","src":"10447:39:3"}]}},{"expression":{"arguments":[{"id":1537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10533:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1538,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"10539:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1539,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"10543:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1540,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10548:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1541,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"10556:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1536,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"10506:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10506:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1543,"nodeType":"ExpressionStatement","src":"10506:55:3"}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"9728:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1545,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"10132:22:3","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"from","nameLocation":"10172:4:3","nodeType":"VariableDeclaration","scope":1545,"src":"10164:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"10164:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"to","nameLocation":"10194:2:3","nodeType":"VariableDeclaration","scope":1545,"src":"10186:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"10186:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1498,"mutability":"mutable","name":"ids","nameLocation":"10223:3:3","nodeType":"VariableDeclaration","scope":1545,"src":"10206:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"10206:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1497,"nodeType":"ArrayTypeName","src":"10206:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"values","nameLocation":"10253:6:3","nodeType":"VariableDeclaration","scope":1545,"src":"10236:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"10236:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1500,"nodeType":"ArrayTypeName","src":"10236:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"data","nameLocation":"10282:4:3","nodeType":"VariableDeclaration","scope":1545,"src":"10269:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1502,"name":"bytes","nodeType":"ElementaryTypeName","src":"10269:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10154:138:3"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"10302:0:3"},"scope":1811,"src":"10123:445:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1563,"nodeType":"Block","src":"11446:89:3","statements":[{"assignments":[1553],"declarations":[{"constant":false,"id":1553,"mutability":"mutable","name":"$","nameLocation":"11479:1:3","nodeType":"VariableDeclaration","scope":1563,"src":"11456:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1552,"nodeType":"UserDefinedTypeName","pathNode":{"id":1551,"name":"ERC1155Storage","nameLocations":["11456:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":871,"src":"11456:14:3"},"referencedDeclaration":871,"src":"11456:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1556,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1554,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"11483:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$871_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11483:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11456:47:3"},{"expression":{"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1557,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"11513:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11515:4:3","memberName":"_uri","nodeType":"MemberAccess","referencedDeclaration":870,"src":"11513:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1560,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"11522:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11513:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1562,"nodeType":"ExpressionStatement","src":"11513:15:3"}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"10574:811:3","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"11399:7:3","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"newuri","nameLocation":"11421:6:3","nodeType":"VariableDeclaration","scope":1564,"src":"11407:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1547,"name":"string","nodeType":"ElementaryTypeName","src":"11407:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11406:22:3"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[],"src":"11446:0:3"},"scope":1811,"src":"11390:145:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1615,"nodeType":"Block","src":"11995:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"12009:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12015:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"12015:7:3","typeDescriptions":{}}},"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12015:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12009:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1590,"nodeType":"IfStatement","src":"12005:88:3","trueBody":{"id":1589,"nodeType":"Block","src":"12027:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12079:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12071:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"12071:7:3","typeDescriptions":{}}},"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12071:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1582,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"12048:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12048:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"RevertStatement","src":"12041:41:3"}]}},{"assignments":[1595,1598],"declarations":[{"constant":false,"id":1595,"mutability":"mutable","name":"ids","nameLocation":"12120:3:3","nodeType":"VariableDeclaration","scope":1615,"src":"12103:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"12103:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1594,"nodeType":"ArrayTypeName","src":"12103:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"values","nameLocation":"12142:6:3","nodeType":"VariableDeclaration","scope":1615,"src":"12125:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"12125:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1597,"nodeType":"ArrayTypeName","src":"12125:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1603,"initialValue":{"arguments":[{"id":1600,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"12171:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"12175:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1599,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"12152:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12102:79:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12226:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12218:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"12218:7:3","typeDescriptions":{}}},"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12218:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1609,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"12230:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1610,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"12234:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1611,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"12239:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1612,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"12247:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1604,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"12191:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12191:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1614,"nodeType":"ExpressionStatement","src":"12191:61:3"}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"11541:367:3","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11922:5:3","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"to","nameLocation":"11936:2:3","nodeType":"VariableDeclaration","scope":1616,"src":"11928:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"11928:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"id","nameLocation":"11948:2:3","nodeType":"VariableDeclaration","scope":1616,"src":"11940:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"11940:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"value","nameLocation":"11960:5:3","nodeType":"VariableDeclaration","scope":1616,"src":"11952:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"11952:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"data","nameLocation":"11980:4:3","nodeType":"VariableDeclaration","scope":1616,"src":"11967:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1572,"name":"bytes","nodeType":"ElementaryTypeName","src":"11967:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11927:58:3"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"11995:0:3"},"scope":1811,"src":"11913:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"12797:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"12811:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12825:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12817:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"12817:7:3","typeDescriptions":{}}},"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12817:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12811:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1644,"nodeType":"IfStatement","src":"12807:88:3","trueBody":{"id":1643,"nodeType":"Block","src":"12829:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12881:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12873:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"12873:7:3","typeDescriptions":{}}},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12873:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1636,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"12850:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12850:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1642,"nodeType":"RevertStatement","src":"12843:41:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12939:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12931:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1646,"name":"address","nodeType":"ElementaryTypeName","src":"12931:7:3","typeDescriptions":{}}},"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12931:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1650,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"12943:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1651,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"12947:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1652,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"12952:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1653,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"12960:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1645,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"12904:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"ExpressionStatement","src":"12904:61:3"}]},"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"12265:420:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"12699:10:3","nodeType":"FunctionDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"to","nameLocation":"12718:2:3","nodeType":"VariableDeclaration","scope":1657,"src":"12710:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"12710:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"ids","nameLocation":"12739:3:3","nodeType":"VariableDeclaration","scope":1657,"src":"12722:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"nodeType":"ArrayTypeName","src":"12722:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"values","nameLocation":"12761:6:3","nodeType":"VariableDeclaration","scope":1657,"src":"12744:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"12744:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1624,"nodeType":"ArrayTypeName","src":"12744:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"data","nameLocation":"12782:4:3","nodeType":"VariableDeclaration","scope":1657,"src":"12769:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1626,"name":"bytes","nodeType":"ElementaryTypeName","src":"12769:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12709:78:3"},"returnParameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"12797:0:3"},"scope":1811,"src":"12690:282:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"13331:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"13345:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13361:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13353:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"13353:7:3","typeDescriptions":{}}},"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13353:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13345:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1681,"nodeType":"IfStatement","src":"13341:88:3","trueBody":{"id":1680,"nodeType":"Block","src":"13365:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13415:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13407:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"13407:7:3","typeDescriptions":{}}},"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13407:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1673,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"13386:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13386:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1679,"nodeType":"RevertStatement","src":"13379:39:3"}]}},{"assignments":[1686,1689],"declarations":[{"constant":false,"id":1686,"mutability":"mutable","name":"ids","nameLocation":"13456:3:3","nodeType":"VariableDeclaration","scope":1706,"src":"13439:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"13439:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1685,"nodeType":"ArrayTypeName","src":"13439:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"values","nameLocation":"13478:6:3","nodeType":"VariableDeclaration","scope":1706,"src":"13461:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"13461:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1688,"nodeType":"ArrayTypeName","src":"13461:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1694,"initialValue":{"arguments":[{"id":1691,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"13507:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"13511:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1690,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"13488:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13488:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13438:79:3"},{"expression":{"arguments":[{"id":1696,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"13554:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13568:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13560:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"13560:7:3","typeDescriptions":{}}},"id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13560:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1701,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"13572:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1702,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"13577:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13585:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1695,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"13527:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13527:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1705,"nodeType":"ExpressionStatement","src":"13527:61:3"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"12978:283:3","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"13275:5:3","nodeType":"FunctionDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"from","nameLocation":"13289:4:3","nodeType":"VariableDeclaration","scope":1707,"src":"13281:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"13281:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"id","nameLocation":"13303:2:3","nodeType":"VariableDeclaration","scope":1707,"src":"13295:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"13295:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"value","nameLocation":"13315:5:3","nodeType":"VariableDeclaration","scope":1707,"src":"13307:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"13307:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13280:41:3"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[],"src":"13331:0:3"},"scope":1811,"src":"13266:329:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1745,"nodeType":"Block","src":"14041:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1719,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"14055:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14071:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14063:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"14063:7:3","typeDescriptions":{}}},"id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14063:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14055:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1733,"nodeType":"IfStatement","src":"14051:88:3","trueBody":{"id":1732,"nodeType":"Block","src":"14075:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14125:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14117:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1726,"name":"address","nodeType":"ElementaryTypeName","src":"14117:7:3","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14117:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1725,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"14096:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14096:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"RevertStatement","src":"14089:39:3"}]}},{"expression":{"arguments":[{"id":1735,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"14175:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14189:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14181:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"14181:7:3","typeDescriptions":{}}},"id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14181:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1740,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"14193:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1741,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"14198:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14206:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1734,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"14148:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14148:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"ExpressionStatement","src":"14148:61:3"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"13601:345:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"13960:10:3","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"from","nameLocation":"13979:4:3","nodeType":"VariableDeclaration","scope":1746,"src":"13971:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1709,"name":"address","nodeType":"ElementaryTypeName","src":"13971:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1713,"mutability":"mutable","name":"ids","nameLocation":"14002:3:3","nodeType":"VariableDeclaration","scope":1746,"src":"13985:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"13985:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1712,"nodeType":"ArrayTypeName","src":"13985:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"values","nameLocation":"14024:6:3","nodeType":"VariableDeclaration","scope":1746,"src":"14007:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"14007:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1715,"nodeType":"ArrayTypeName","src":"14007:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13970:61:3"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"14041:0:3"},"scope":1811,"src":"13951:265:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1793,"nodeType":"Block","src":"14528:281:3","statements":[{"assignments":[1758],"declarations":[{"constant":false,"id":1758,"mutability":"mutable","name":"$","nameLocation":"14561:1:3","nodeType":"VariableDeclaration","scope":1793,"src":"14538:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1757,"nodeType":"UserDefinedTypeName","pathNode":{"id":1756,"name":"ERC1155Storage","nameLocations":["14538:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":871,"src":"14538:14:3"},"referencedDeclaration":871,"src":"14538:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1761,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1759,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"14565:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$871_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14565:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"14538:47:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1762,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"14599:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14619:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14611:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"14611:7:3","typeDescriptions":{}}},"id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14611:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14599:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1776,"nodeType":"IfStatement","src":"14595:94:3","trueBody":{"id":1775,"nodeType":"Block","src":"14623:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14675:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14667:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"14667:7:3","typeDescriptions":{}}},"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14667:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1768,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"14644:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14644:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1774,"nodeType":"RevertStatement","src":"14637:41:3"}]}},{"expression":{"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1777,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"14698:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$871_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14700:18:3","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":868,"src":"14698:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1782,"indexExpression":{"id":1779,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"14719:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14698:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1783,"indexExpression":{"id":1780,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"14726:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14698:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1784,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"14738:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14698:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1786,"nodeType":"ExpressionStatement","src":"14698:48:3"},{"eventCall":{"arguments":[{"id":1788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"14776:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1789,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"14783:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1790,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"14793:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1787,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"14761:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14761:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"EmitStatement","src":"14756:46:3"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"14222:208:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1794,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"14444:18:3","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"owner","nameLocation":"14471:5:3","nodeType":"VariableDeclaration","scope":1794,"src":"14463:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"operator","nameLocation":"14486:8:3","nodeType":"VariableDeclaration","scope":1794,"src":"14478:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"14478:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"approved","nameLocation":"14501:8:3","nodeType":"VariableDeclaration","scope":1794,"src":"14496:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1752,"name":"bool","nodeType":"ElementaryTypeName","src":"14496:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14462:48:3"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[],"src":"14528:0:3"},"scope":1811,"src":"14435:374:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1809,"nodeType":"Block","src":"15083:664:3","statements":[{"AST":{"nativeSrc":"15118:623:3","nodeType":"YulBlock","src":"15118:623:3","statements":[{"nativeSrc":"15176:21:3","nodeType":"YulAssignment","src":"15176:21:3","value":{"arguments":[{"kind":"number","nativeSrc":"15192:4:3","nodeType":"YulLiteral","src":"15192:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"15186:5:3","nodeType":"YulIdentifier","src":"15186:5:3"},"nativeSrc":"15186:11:3","nodeType":"YulFunctionCall","src":"15186:11:3"},"variableNames":[{"name":"array1","nativeSrc":"15176:6:3","nodeType":"YulIdentifier","src":"15176:6:3"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"15254:6:3","nodeType":"YulIdentifier","src":"15254:6:3"},{"kind":"number","nativeSrc":"15262:1:3","nodeType":"YulLiteral","src":"15262:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"15247:6:3","nodeType":"YulIdentifier","src":"15247:6:3"},"nativeSrc":"15247:17:3","nodeType":"YulFunctionCall","src":"15247:17:3"},"nativeSrc":"15247:17:3","nodeType":"YulExpressionStatement","src":"15247:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"15385:6:3","nodeType":"YulIdentifier","src":"15385:6:3"},{"kind":"number","nativeSrc":"15393:4:3","nodeType":"YulLiteral","src":"15393:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15381:3:3","nodeType":"YulIdentifier","src":"15381:3:3"},"nativeSrc":"15381:17:3","nodeType":"YulFunctionCall","src":"15381:17:3"},{"name":"element1","nativeSrc":"15400:8:3","nodeType":"YulIdentifier","src":"15400:8:3"}],"functionName":{"name":"mstore","nativeSrc":"15374:6:3","nodeType":"YulIdentifier","src":"15374:6:3"},"nativeSrc":"15374:35:3","nodeType":"YulFunctionCall","src":"15374:35:3"},"nativeSrc":"15374:35:3","nodeType":"YulExpressionStatement","src":"15374:35:3"},{"nativeSrc":"15500:27:3","nodeType":"YulAssignment","src":"15500:27:3","value":{"arguments":[{"name":"array1","nativeSrc":"15514:6:3","nodeType":"YulIdentifier","src":"15514:6:3"},{"kind":"number","nativeSrc":"15522:4:3","nodeType":"YulLiteral","src":"15522:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15510:3:3","nodeType":"YulIdentifier","src":"15510:3:3"},"nativeSrc":"15510:17:3","nodeType":"YulFunctionCall","src":"15510:17:3"},"variableNames":[{"name":"array2","nativeSrc":"15500:6:3","nodeType":"YulIdentifier","src":"15500:6:3"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"15547:6:3","nodeType":"YulIdentifier","src":"15547:6:3"},{"kind":"number","nativeSrc":"15555:1:3","nodeType":"YulLiteral","src":"15555:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"15540:6:3","nodeType":"YulIdentifier","src":"15540:6:3"},"nativeSrc":"15540:17:3","nodeType":"YulFunctionCall","src":"15540:17:3"},"nativeSrc":"15540:17:3","nodeType":"YulExpressionStatement","src":"15540:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"15581:6:3","nodeType":"YulIdentifier","src":"15581:6:3"},{"kind":"number","nativeSrc":"15589:4:3","nodeType":"YulLiteral","src":"15589:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15577:3:3","nodeType":"YulIdentifier","src":"15577:3:3"},"nativeSrc":"15577:17:3","nodeType":"YulFunctionCall","src":"15577:17:3"},{"name":"element2","nativeSrc":"15596:8:3","nodeType":"YulIdentifier","src":"15596:8:3"}],"functionName":{"name":"mstore","nativeSrc":"15570:6:3","nodeType":"YulIdentifier","src":"15570:6:3"},"nativeSrc":"15570:35:3","nodeType":"YulFunctionCall","src":"15570:35:3"},"nativeSrc":"15570:35:3","nodeType":"YulExpressionStatement","src":"15570:35:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15707:4:3","nodeType":"YulLiteral","src":"15707:4:3","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"15717:6:3","nodeType":"YulIdentifier","src":"15717:6:3"},{"kind":"number","nativeSrc":"15725:4:3","nodeType":"YulLiteral","src":"15725:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15713:3:3","nodeType":"YulIdentifier","src":"15713:3:3"},"nativeSrc":"15713:17:3","nodeType":"YulFunctionCall","src":"15713:17:3"}],"functionName":{"name":"mstore","nativeSrc":"15700:6:3","nodeType":"YulIdentifier","src":"15700:6:3"},"nativeSrc":"15700:31:3","nodeType":"YulFunctionCall","src":"15700:31:3"},"nativeSrc":"15700:31:3","nodeType":"YulExpressionStatement","src":"15700:31:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":1803,"isOffset":false,"isSlot":false,"src":"15176:6:3","valueSize":1},{"declaration":1803,"isOffset":false,"isSlot":false,"src":"15254:6:3","valueSize":1},{"declaration":1803,"isOffset":false,"isSlot":false,"src":"15385:6:3","valueSize":1},{"declaration":1803,"isOffset":false,"isSlot":false,"src":"15514:6:3","valueSize":1},{"declaration":1806,"isOffset":false,"isSlot":false,"src":"15500:6:3","valueSize":1},{"declaration":1806,"isOffset":false,"isSlot":false,"src":"15547:6:3","valueSize":1},{"declaration":1806,"isOffset":false,"isSlot":false,"src":"15581:6:3","valueSize":1},{"declaration":1806,"isOffset":false,"isSlot":false,"src":"15717:6:3","valueSize":1},{"declaration":1797,"isOffset":false,"isSlot":false,"src":"15400:8:3","valueSize":1},{"declaration":1799,"isOffset":false,"isSlot":false,"src":"15596:8:3","valueSize":1}],"flags":["memory-safe"],"id":1808,"nodeType":"InlineAssembly","src":"15093:648:3"}]},"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"14815:105:3","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"14934:18:3","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"element1","nameLocation":"14970:8:3","nodeType":"VariableDeclaration","scope":1810,"src":"14962:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"14962:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"element2","nameLocation":"14996:8:3","nodeType":"VariableDeclaration","scope":1810,"src":"14988:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"14988:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14952:58:3"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"array1","nameLocation":"15050:6:3","nodeType":"VariableDeclaration","scope":1810,"src":"15033:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"15033:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1802,"nodeType":"ArrayTypeName","src":"15033:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"array2","nameLocation":"15075:6:3","nodeType":"VariableDeclaration","scope":1810,"src":"15058:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"15058:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1805,"nodeType":"ArrayTypeName","src":"15058:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15032:50:3"},"scope":1811,"src":"14925:822:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1812,"src":"1052:14697:3","usedErrors":[381,384,2352,2357,2362,2369,2374,2379,2386],"usedEvents":[389,2711,2726,2735,2742]}],"src":"109:15641:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","exportedSymbols":{"Arrays":[4264],"ERC1155SupplyUpgradeable":[2050],"ERC1155Upgradeable":[1811],"Initializable":[632]},"id":2051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1813,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"../ERC1155Upgradeable.sol","id":1815,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2051,"sourceUnit":1812,"src":"152:61:4","symbolAliases":[{"foreign":{"id":1814,"name":"ERC1155Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"160:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"@openzeppelin/contracts/utils/Arrays.sol","id":1817,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2051,"sourceUnit":4265,"src":"214:64:4","symbolAliases":[{"foreign":{"id":1816,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"222:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1819,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2051,"sourceUnit":633,"src":"279:69:4","symbolAliases":[{"foreign":{"id":1818,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"287:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1821,"name":"Initializable","nameLocations":["949:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"949:13:4"},"id":1822,"nodeType":"InheritanceSpecifier","src":"949:13:4"},{"baseName":{"id":1823,"name":"ERC1155Upgradeable","nameLocations":["964:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1811,"src":"964:18:4"},"id":1824,"nodeType":"InheritanceSpecifier","src":"964:18:4"}],"canonicalName":"ERC1155SupplyUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"350:552:4","text":" @dev Extension of ERC-1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted.\n NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n that can be minted.\n CAUTION: This extension should not be added in an upgrade to an already deployed contract."},"fullyImplemented":true,"id":2050,"linearizedBaseContracts":[2050,1811,2387,2872,2814,2136,6038,2096,632],"name":"ERC1155SupplyUpgradeable","nameLocation":"921:24:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1828,"libraryName":{"id":1825,"name":"Arrays","nameLocations":["995:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":4264,"src":"995:6:4"},"nodeType":"UsingForDirective","src":"989:27:4","typeName":{"baseType":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"1006:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1827,"nodeType":"ArrayTypeName","src":"1006:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"canonicalName":"ERC1155SupplyUpgradeable.ERC1155SupplyStorage","documentation":{"id":1829,"nodeType":"StructuredDocumentation","src":"1022:71:4","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC1155Supply"},"id":1836,"members":[{"constant":false,"id":1833,"mutability":"mutable","name":"_totalSupply","nameLocation":"1167:12:4","nodeType":"VariableDeclaration","scope":1836,"src":"1136:43:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1832,"keyName":"id","keyNameLocation":"1152:2:4","keyType":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1136:30:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1158:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"_totalSupplyAll","nameLocation":"1197:15:4","nodeType":"VariableDeclaration","scope":1836,"src":"1189:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1189:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ERC1155SupplyStorage","nameLocation":"1105:20:4","nodeType":"StructDefinition","scope":2050,"src":"1098:121:4","visibility":"public"},{"constant":true,"id":1839,"mutability":"constant","name":"ERC1155SupplyStorageLocation","nameLocation":"1367:28:4","nodeType":"VariableDeclaration","scope":2050,"src":"1342:122:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1342:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834613539333636326565303464323762366130306562623331626537666530633130326332616465383261376335643736346632646630356463346532383030","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1398:66:4","typeDescriptions":{"typeIdentifier":"t_rational_33628775545370798169512062789505411687485904666574391101151478347969820764160_by_1","typeString":"int_const 3362...(69 digits omitted)...4160"},"value":"0x4a593662ee04d27b6a00ebb31be7fe0c102c2ade82a7c5d764f2df05dc4e2800"},"visibility":"private"},{"body":{"id":1846,"nodeType":"Block","src":"1561:87:4","statements":[{"AST":{"nativeSrc":"1580:62:4","nodeType":"YulBlock","src":"1580:62:4","statements":[{"nativeSrc":"1594:38:4","nodeType":"YulAssignment","src":"1594:38:4","value":{"name":"ERC1155SupplyStorageLocation","nativeSrc":"1604:28:4","nodeType":"YulIdentifier","src":"1604:28:4"},"variableNames":[{"name":"$.slot","nativeSrc":"1594:6:4","nodeType":"YulIdentifier","src":"1594:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1843,"isOffset":false,"isSlot":true,"src":"1594:6:4","suffix":"slot","valueSize":1},{"declaration":1839,"isOffset":false,"isSlot":false,"src":"1604:28:4","valueSize":1}],"id":1845,"nodeType":"InlineAssembly","src":"1571:71:4"}]},"id":1847,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC1155SupplyStorage","nameLocation":"1480:24:4","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"1504:2:4"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"$","nameLocation":"1558:1:4","nodeType":"VariableDeclaration","scope":1847,"src":"1529:30:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"},"typeName":{"id":1842,"nodeType":"UserDefinedTypeName","pathNode":{"id":1841,"name":"ERC1155SupplyStorage","nameLocations":["1529:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"1529:20:4"},"referencedDeclaration":1836,"src":"1529:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"}},"visibility":"internal"}],"src":"1528:32:4"},"scope":2050,"src":"1471:177:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1852,"nodeType":"Block","src":"1712:7:4","statements":[]},"id":1853,"implemented":true,"kind":"function","modifiers":[{"id":1850,"kind":"modifierInvocation","modifierName":{"id":1849,"name":"onlyInitializing","nameLocations":["1695:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1695:16:4"},"nodeType":"ModifierInvocation","src":"1695:16:4"}],"name":"__ERC1155Supply_init","nameLocation":"1663:20:4","nodeType":"FunctionDefinition","parameters":{"id":1848,"nodeType":"ParameterList","parameters":[],"src":"1683:2:4"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"1712:0:4"},"scope":2050,"src":"1654:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1858,"nodeType":"Block","src":"1793:7:4","statements":[]},"id":1859,"implemented":true,"kind":"function","modifiers":[{"id":1856,"kind":"modifierInvocation","modifierName":{"id":1855,"name":"onlyInitializing","nameLocations":["1776:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1776:16:4"},"nodeType":"ModifierInvocation","src":"1776:16:4"}],"name":"__ERC1155Supply_init_unchained","nameLocation":"1734:30:4","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"1764:2:4"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"1793:0:4"},"scope":2050,"src":"1725:75:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1878,"nodeType":"Block","src":"1946:111:4","statements":[{"assignments":[1869],"declarations":[{"constant":false,"id":1869,"mutability":"mutable","name":"$","nameLocation":"1985:1:4","nodeType":"VariableDeclaration","scope":1878,"src":"1956:30:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"},"typeName":{"id":1868,"nodeType":"UserDefinedTypeName","pathNode":{"id":1867,"name":"ERC1155SupplyStorage","nameLocations":["1956:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"1956:20:4"},"referencedDeclaration":1836,"src":"1956:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"}},"visibility":"internal"}],"id":1872,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1870,"name":"_getERC1155SupplyStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"1989:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155SupplyStorage_$1836_storage_ptr_$","typeString":"function () pure returns (struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1956:59:4"},{"expression":{"baseExpression":{"expression":{"id":1873,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"2032:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":1874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2034:12:4","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":1833,"src":"2032:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1876,"indexExpression":{"id":1875,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"2047:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2032:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1866,"id":1877,"nodeType":"Return","src":"2025:25:4"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"1805:65:4","text":" @dev Total value of tokens in with a given id."},"functionSelector":"bd85b039","id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1884:11:4","nodeType":"FunctionDefinition","parameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"id","nameLocation":"1904:2:4","nodeType":"VariableDeclaration","scope":1879,"src":"1896:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1896:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1895:12:4"},"returnParameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1879,"src":"1937:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1937:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1936:9:4"},"scope":2050,"src":"1875:182:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1894,"nodeType":"Block","src":"2175:110:4","statements":[{"assignments":[1887],"declarations":[{"constant":false,"id":1887,"mutability":"mutable","name":"$","nameLocation":"2214:1:4","nodeType":"VariableDeclaration","scope":1894,"src":"2185:30:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"},"typeName":{"id":1886,"nodeType":"UserDefinedTypeName","pathNode":{"id":1885,"name":"ERC1155SupplyStorage","nameLocations":["2185:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"2185:20:4"},"referencedDeclaration":1836,"src":"2185:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"}},"visibility":"internal"}],"id":1890,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1888,"name":"_getERC1155SupplyStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2218:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155SupplyStorage_$1836_storage_ptr_$","typeString":"function () pure returns (struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2218:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2185:59:4"},{"expression":{"expression":{"id":1891,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"2261:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":1892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2263:15:4","memberName":"_totalSupplyAll","nodeType":"MemberAccess","referencedDeclaration":1835,"src":"2261:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1884,"id":1893,"nodeType":"Return","src":"2254:24:4"}]},"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"2063:46:4","text":" @dev Total value of tokens."},"functionSelector":"18160ddd","id":1895,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2123:11:4","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[],"src":"2134:2:4"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"2166:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:9:4"},"scope":2050,"src":"2114:171:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1909,"nodeType":"Block","src":"2441:43:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1904,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"2470:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1903,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[1879,1895],"referencedDeclaration":1879,"src":"2458:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2458:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2476:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1902,"id":1908,"nodeType":"Return","src":"2451:26:4"}]},"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"2291:82:4","text":" @dev Indicates whether any token exist with a given id, or not."},"functionSelector":"4f558e79","id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"2387:6:4","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"id","nameLocation":"2402:2:4","nodeType":"VariableDeclaration","scope":1910,"src":"2394:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2394:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2393:12:4"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"2435:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1900,"name":"bool","nodeType":"ElementaryTypeName","src":"2435:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2434:6:4"},"scope":2050,"src":"2378:106:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1344],"body":{"id":2048,"nodeType":"Block","src":"2683:1517:4","statements":[{"assignments":[1927],"declarations":[{"constant":false,"id":1927,"mutability":"mutable","name":"$","nameLocation":"2722:1:4","nodeType":"VariableDeclaration","scope":2048,"src":"2693:30:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"},"typeName":{"id":1926,"nodeType":"UserDefinedTypeName","pathNode":{"id":1925,"name":"ERC1155SupplyStorage","nameLocations":["2693:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"2693:20:4"},"referencedDeclaration":1836,"src":"2693:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"}},"visibility":"internal"}],"id":1930,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1928,"name":"_getERC1155SupplyStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2726:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155SupplyStorage_$1836_storage_ptr_$","typeString":"function () pure returns (struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2726:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2693:59:4"},{"expression":{"arguments":[{"id":1934,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"2776:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1935,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2782:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1936,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2786:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1937,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2791:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1931,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2762:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155SupplyUpgradeable_$2050_$","typeString":"type(contract super ERC1155SupplyUpgradeable)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2768:7:4","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1344,"src":"2762:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2762:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1939,"nodeType":"ExpressionStatement","src":"2762:36:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1940,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"2813:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2829:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2821:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"2821:7:4","typeDescriptions":{}}},"id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2813:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1992,"nodeType":"IfStatement","src":"2809:575:4","trueBody":{"id":1991,"nodeType":"Block","src":"2833:551:4","statements":[{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"totalMintValue","nameLocation":"2855:14:4","nodeType":"VariableDeclaration","scope":1991,"src":"2847:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2847:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1949,"initialValue":{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2847:26:4"},{"body":{"id":1983,"nodeType":"Block","src":"2928:292:4","statements":[{"assignments":[1962],"declarations":[{"constant":false,"id":1962,"mutability":"mutable","name":"value","nameLocation":"2954:5:4","nodeType":"VariableDeclaration","scope":1983,"src":"2946:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2946:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1967,"initialValue":{"arguments":[{"id":1965,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"2988:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1963,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2962:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"2962:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2962:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2946:44:4"},{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1968,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3114:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":1974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3116:12:4","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":1833,"src":"3114:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1975,"indexExpression":{"arguments":[{"id":1972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"3152:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1970,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"3129:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3133:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"3129:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3129:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3114:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"3159:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3114:50:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1978,"nodeType":"ExpressionStatement","src":"3114:50:4"},{"expression":{"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1979,"name":"totalMintValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"3182:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"3200:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3182:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1982,"nodeType":"ExpressionStatement","src":"3182:23:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"2907:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1955,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2911:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2915:6:4","memberName":"length","nodeType":"MemberAccess","src":"2911:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2907:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1984,"initializationExpression":{"assignments":[1951],"declarations":[{"constant":false,"id":1951,"mutability":"mutable","name":"i","nameLocation":"2900:1:4","nodeType":"VariableDeclaration","scope":1984,"src":"2892:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"2892:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1953,"initialValue":{"hexValue":"30","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2904:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2892:13:4"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2923:3:4","subExpression":{"id":1958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"2925:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1960,"nodeType":"ExpressionStatement","src":"2923:3:4"},"nodeType":"ForStatement","src":"2887:333:4"},{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1985,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3338:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":1987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3340:15:4","memberName":"_totalSupplyAll","nodeType":"MemberAccess","referencedDeclaration":1835,"src":"3338:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1988,"name":"totalMintValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"3359:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3338:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1990,"nodeType":"ExpressionStatement","src":"3338:35:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1993,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3398:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3412:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"3404:7:4","typeDescriptions":{}}},"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3398:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"IfStatement","src":"3394:800:4","trueBody":{"id":2046,"nodeType":"Block","src":"3416:778:4","statements":[{"assignments":[2000],"declarations":[{"constant":false,"id":2000,"mutability":"mutable","name":"totalBurnValue","nameLocation":"3438:14:4","nodeType":"VariableDeclaration","scope":2046,"src":"3430:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1999,"name":"uint256","nodeType":"ElementaryTypeName","src":"3430:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2002,"initialValue":{"hexValue":"30","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3455:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3430:26:4"},{"body":{"id":2037,"nodeType":"Block","src":"3511:458:4","statements":[{"assignments":[2015],"declarations":[{"constant":false,"id":2015,"mutability":"mutable","name":"value","nameLocation":"3537:5:4","nodeType":"VariableDeclaration","scope":2037,"src":"3529:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"3529:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2020,"initialValue":{"arguments":[{"id":2018,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"3571:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2016,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"3545:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3552:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"3545:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3545:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3529:44:4"},{"id":2036,"nodeType":"UncheckedBlock","src":"3592:363:4","statements":[{"expression":{"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2021,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3730:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3732:12:4","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":1833,"src":"3730:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2028,"indexExpression":{"arguments":[{"id":2025,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"3768:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2023,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"3745:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3749:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"3745:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3745:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3730:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3775:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3730:50:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2031,"nodeType":"ExpressionStatement","src":"3730:50:4"},{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2032,"name":"totalBurnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"3913:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3931:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3913:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"3913:23:4"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"3490:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2008,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"3494:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3498:6:4","memberName":"length","nodeType":"MemberAccess","src":"3494:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3490:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2038,"initializationExpression":{"assignments":[2004],"declarations":[{"constant":false,"id":2004,"mutability":"mutable","name":"i","nameLocation":"3483:1:4","nodeType":"VariableDeclaration","scope":2038,"src":"3475:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2006,"initialValue":{"hexValue":"30","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3487:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3475:13:4"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3506:3:4","subExpression":{"id":2011,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"3508:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2013,"nodeType":"ExpressionStatement","src":"3506:3:4"},"nodeType":"ForStatement","src":"3470:499:4"},{"id":2045,"nodeType":"UncheckedBlock","src":"3982:202:4","statements":[{"expression":{"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2039,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"4134:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1836_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":2041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4136:15:4","memberName":"_totalSupplyAll","nodeType":"MemberAccess","referencedDeclaration":1835,"src":"4134:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2042,"name":"totalBurnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"4155:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4134:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2044,"nodeType":"ExpressionStatement","src":"4134:35:4"}]}]}}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"2490:34:4","text":"@inheritdoc ERC1155Upgradeable"},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2538:7:4","nodeType":"FunctionDefinition","overrides":{"id":1923,"nodeType":"OverrideSpecifier","overrides":[],"src":"2674:8:4"},"parameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"from","nameLocation":"2563:4:4","nodeType":"VariableDeclaration","scope":2049,"src":"2555:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"2555:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"to","nameLocation":"2585:2:4","nodeType":"VariableDeclaration","scope":2049,"src":"2577:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"ids","nameLocation":"2614:3:4","nodeType":"VariableDeclaration","scope":2049,"src":"2597:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1917,"nodeType":"ArrayTypeName","src":"2597:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1921,"mutability":"mutable","name":"values","nameLocation":"2644:6:4","nodeType":"VariableDeclaration","scope":2049,"src":"2627:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"2627:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ArrayTypeName","src":"2627:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2545:111:4"},"returnParameters":{"id":1924,"nodeType":"ParameterList","parameters":[],"src":"2683:0:4"},"scope":2050,"src":"2529:1671:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2051,"src":"903:3299:4","usedErrors":[381,384,2352,2357,2362,2369,2374,2379,2386],"usedEvents":[389,2711,2726,2735,2742]}],"src":"126:4077:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2096],"Initializable":[632]},"id":2097,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2052,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2054,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2097,"sourceUnit":633,"src":"126:63:5","symbolAliases":[{"foreign":{"id":2053,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"134:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2056,"name":"Initializable","nameLocations":["728:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"728:13:5"},"id":2057,"nodeType":"InheritanceSpecifier","src":"728:13:5"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"191:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2096,"linearizedBaseContracts":[2096,632],"name":"ContextUpgradeable","nameLocation":"706:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":2062,"nodeType":"Block","src":"800:7:5","statements":[]},"id":2063,"implemented":true,"kind":"function","modifiers":[{"id":2060,"kind":"modifierInvocation","modifierName":{"id":2059,"name":"onlyInitializing","nameLocations":["783:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"783:16:5"},"nodeType":"ModifierInvocation","src":"783:16:5"}],"name":"__Context_init","nameLocation":"757:14:5","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[],"src":"771:2:5"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[],"src":"800:0:5"},"scope":2096,"src":"748:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2068,"nodeType":"Block","src":"875:7:5","statements":[]},"id":2069,"implemented":true,"kind":"function","modifiers":[{"id":2066,"kind":"modifierInvocation","modifierName":{"id":2065,"name":"onlyInitializing","nameLocations":["858:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"858:16:5"},"nodeType":"ModifierInvocation","src":"858:16:5"}],"name":"__Context_init_unchained","nameLocation":"822:24:5","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[],"src":"846:2:5"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[],"src":"875:0:5"},"scope":2096,"src":"813:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2077,"nodeType":"Block","src":"949:34:5","statements":[{"expression":{"expression":{"id":2074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:5","memberName":"sender","nodeType":"MemberAccess","src":"966:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2073,"id":2076,"nodeType":"Return","src":"959:17:5"}]},"id":2078,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:5","nodeType":"FunctionDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[],"src":"906:2:5"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2078,"src":"940:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:5"},"scope":2096,"src":"887:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"1056:32:5","statements":[{"expression":{"expression":{"id":2083,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:5","memberName":"data","nodeType":"MemberAccess","src":"1073:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2082,"id":2085,"nodeType":"Return","src":"1066:15:5"}]},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:5","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[],"src":"1006:2:5"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"1040:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2080,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:5"},"scope":2096,"src":"989:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2094,"nodeType":"Block","src":"1166:25:5","statements":[{"expression":{"hexValue":"30","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2091,"id":2093,"nodeType":"Return","src":"1176:8:5"}]},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:5","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[],"src":"1123:2:5"},"returnParameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2095,"src":"1157:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:5"},"scope":2096,"src":"1094:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2097,"src":"688:505:5","usedErrors":[381,384],"usedEvents":[389]}],"src":"101:1093:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2136],"IERC165":[6038],"Initializable":[632]},"id":2137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2098,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2137,"sourceUnit":6039,"src":"140:80:6","symbolAliases":[{"foreign":{"id":2099,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2102,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2137,"sourceUnit":633,"src":"221:66:6","symbolAliases":[{"foreign":{"id":2101,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"229:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2104,"name":"Initializable","nameLocations":["808:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"808:13:6"},"id":2105,"nodeType":"InheritanceSpecifier","src":"808:13:6"},{"baseName":{"id":2106,"name":"IERC165","nameLocations":["823:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":6038,"src":"823:7:6"},"id":2107,"nodeType":"InheritanceSpecifier","src":"823:7:6"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"289:479:6","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2136,"linearizedBaseContracts":[2136,6038,632],"name":"ERC165Upgradeable","nameLocation":"787:17:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":2112,"nodeType":"Block","src":"888:7:6","statements":[]},"id":2113,"implemented":true,"kind":"function","modifiers":[{"id":2110,"kind":"modifierInvocation","modifierName":{"id":2109,"name":"onlyInitializing","nameLocations":["871:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"871:16:6"},"nodeType":"ModifierInvocation","src":"871:16:6"}],"name":"__ERC165_init","nameLocation":"846:13:6","nodeType":"FunctionDefinition","parameters":{"id":2108,"nodeType":"ParameterList","parameters":[],"src":"859:2:6"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[],"src":"888:0:6"},"scope":2136,"src":"837:58:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2118,"nodeType":"Block","src":"962:7:6","statements":[]},"id":2119,"implemented":true,"kind":"function","modifiers":[{"id":2116,"kind":"modifierInvocation","modifierName":{"id":2115,"name":"onlyInitializing","nameLocations":["945:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"945:16:6"},"nodeType":"ModifierInvocation","src":"945:16:6"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:6","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[],"src":"933:2:6"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[],"src":"962:0:6"},"scope":2136,"src":"901:68:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6037],"body":{"id":2134,"nodeType":"Block","src":"1084:64:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2127,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"1101:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2129,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"1121:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$6038_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$6038_$","typeString":"type(contract IERC165)"}],"id":2128,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1116:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$6038","typeString":"type(contract IERC165)"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1130:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1116:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1101:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2126,"id":2133,"nodeType":"Return","src":"1094:47:6"}]},"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"974:23:6","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1011:17:6","nodeType":"FunctionDefinition","parameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"interfaceId","nameLocation":"1036:11:6","nodeType":"VariableDeclaration","scope":2135,"src":"1029:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2121,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1029:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1028:20:6"},"returnParameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"1078:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2124,"name":"bool","nodeType":"ElementaryTypeName","src":"1078:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1077:6:6"},"scope":2136,"src":"1002:146:6","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2137,"src":"769:381:6","usedErrors":[381,384],"usedEvents":[389]}],"src":"114:1037:6"},"id":6},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[2219]},"id":2220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2138,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"135:90:7","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":2219,"linearizedBaseContracts":[2219],"name":"IAccessControl","nameLocation":"236:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"257:56:7","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":2146,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:7","nodeType":"ErrorDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"account","nameLocation":"365:7:7","nodeType":"VariableDeclaration","scope":2146,"src":"357:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2144,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:7","nodeType":"VariableDeclaration","scope":2146,"src":"374:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:7"},"src":"318:76:7"},{"documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"400:148:7","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":2149,"name":"AccessControlBadConfirmation","nameLocation":"559:28:7","nodeType":"ErrorDefinition","parameters":{"id":2148,"nodeType":"ParameterList","parameters":[],"src":"587:2:7"},"src":"553:37:7"},{"anonymous":false,"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"596:254:7","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":2158,"name":"RoleAdminChanged","nameLocation":"861:16:7","nodeType":"EventDefinition","parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:7","nodeType":"VariableDeclaration","scope":2158,"src":"878:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2154,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:7","nodeType":"VariableDeclaration","scope":2158,"src":"900:33:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2156,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:7","nodeType":"VariableDeclaration","scope":2158,"src":"935:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:7"},"src":"855:110:7"},{"anonymous":false,"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"971:295:7","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":2167,"name":"RoleGranted","nameLocation":"1277:11:7","nodeType":"EventDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:7","nodeType":"VariableDeclaration","scope":2167,"src":"1289:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2163,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:7","nodeType":"VariableDeclaration","scope":2167,"src":"1311:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2165,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:7","nodeType":"VariableDeclaration","scope":2167,"src":"1336:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:7"},"src":"1271:89:7"},{"anonymous":false,"documentation":{"id":2168,"nodeType":"StructuredDocumentation","src":"1366:275:7","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":2176,"name":"RoleRevoked","nameLocation":"1652:11:7","nodeType":"EventDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:7","nodeType":"VariableDeclaration","scope":2176,"src":"1664:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2172,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:7","nodeType":"VariableDeclaration","scope":2176,"src":"1686:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2174,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:7","nodeType":"VariableDeclaration","scope":2176,"src":"1711:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:7"},"src":"1646:89:7"},{"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"1741:76:7","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":2186,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:7","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"role","nameLocation":"1847:4:7","nodeType":"VariableDeclaration","scope":2186,"src":"1839:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"account","nameLocation":"1861:7:7","nodeType":"VariableDeclaration","scope":2186,"src":"1853:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"1893:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2183,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:7"},"scope":2219,"src":"1822:77:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"1905:184:7","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":2194,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:7","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"role","nameLocation":"2124:4:7","nodeType":"VariableDeclaration","scope":2194,"src":"2116:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:7"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2194,"src":"2153:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:7"},"scope":2219,"src":"2094:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"2168:239:7","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":2202,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:7","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"role","nameLocation":"2439:4:7","nodeType":"VariableDeclaration","scope":2202,"src":"2431:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"account","nameLocation":"2453:7:7","nodeType":"VariableDeclaration","scope":2202,"src":"2445:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:7"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[],"src":"2470:0:7"},"scope":2219,"src":"2412:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2203,"nodeType":"StructuredDocumentation","src":"2477:223:7","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":2210,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:7","nodeType":"FunctionDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2205,"mutability":"mutable","name":"role","nameLocation":"2733:4:7","nodeType":"VariableDeclaration","scope":2210,"src":"2725:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"account","nameLocation":"2747:7:7","nodeType":"VariableDeclaration","scope":2210,"src":"2739:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2206,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:7"},"returnParameters":{"id":2209,"nodeType":"ParameterList","parameters":[],"src":"2764:0:7"},"scope":2219,"src":"2705:60:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"2771:491:7","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":2218,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:7","nodeType":"FunctionDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"role","nameLocation":"3297:4:7","nodeType":"VariableDeclaration","scope":2218,"src":"3289:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:7","nodeType":"VariableDeclaration","scope":2218,"src":"3303:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2214,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:7"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[],"src":"3339:0:7"},"scope":2219,"src":"3267:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2220,"src":"226:3116:7","usedErrors":[2146,2149],"usedEvents":[2158,2167,2176]}],"src":"109:3234:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[2240]},"id":2241,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2221,"literals":["solidity",">=","0.4",".11"],"nodeType":"PragmaDirective","src":"107:25:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"134:101:8","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":2240,"linearizedBaseContracts":[2240],"name":"IERC1967","nameLocation":"246:8:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"261:68:8","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2227,"name":"Upgraded","nameLocation":"340:8:8","nodeType":"EventDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"365:14:8","nodeType":"VariableDeclaration","scope":2227,"src":"349:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2224,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:32:8"},"src":"334:47:8"},{"anonymous":false,"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"387:67:8","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":2234,"name":"AdminChanged","nameLocation":"465:12:8","nodeType":"EventDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"486:13:8","nodeType":"VariableDeclaration","scope":2234,"src":"478:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2229,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2232,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"509:8:8","nodeType":"VariableDeclaration","scope":2234,"src":"501:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2231,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:41:8"},"src":"459:60:8"},{"anonymous":false,"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"525:59:8","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":2239,"name":"BeaconUpgraded","nameLocation":"595:14:8","nodeType":"EventDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"626:6:8","nodeType":"VariableDeclaration","scope":2239,"src":"610:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"609:24:8"},"src":"589:45:8"}],"scope":2241,"src":"236:400:8","usedErrors":[],"usedEvents":[2227,2234,2239]}],"src":"107:530:8"},"id":8},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[2250]},"id":2251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2242,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"113:25:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"140:204:9","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":2250,"linearizedBaseContracts":[2250],"name":"IERC1822Proxiable","nameLocation":"355:17:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"379:438:9","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":2249,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"831:13:9","nodeType":"FunctionDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[],"src":"844:2:9"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2249,"src":"870:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"870:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"869:9:9"},"scope":2250,"src":"822:57:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2251,"src":"345:536:9","usedErrors":[],"usedEvents":[]}],"src":"113:769:9"},"id":9},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2387],"IERC20Errors":[2292],"IERC721Errors":[2340]},"id":2388,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2252,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"138:141:10","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":2292,"linearizedBaseContracts":[2292],"name":"IERC20Errors","nameLocation":"290:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"309:309:10","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2262,"name":"ERC20InsufficientBalance","nameLocation":"629:24:10","nodeType":"ErrorDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"sender","nameLocation":"662:6:10","nodeType":"VariableDeclaration","scope":2262,"src":"654:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"balance","nameLocation":"678:7:10","nodeType":"VariableDeclaration","scope":2262,"src":"670:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"needed","nameLocation":"695:6:10","nodeType":"VariableDeclaration","scope":2262,"src":"687:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:10"},"src":"623:80:10"},{"documentation":{"id":2263,"nodeType":"StructuredDocumentation","src":"709:152:10","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2267,"name":"ERC20InvalidSender","nameLocation":"872:18:10","nodeType":"ErrorDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"sender","nameLocation":"899:6:10","nodeType":"VariableDeclaration","scope":2267,"src":"891:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:10"},"src":"866:41:10"},{"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"913:159:10","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2272,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:10","nodeType":"ErrorDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:10","nodeType":"VariableDeclaration","scope":2272,"src":"1104:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:10"},"src":"1077:45:10"},{"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"1128:345:10","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2281,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:10","nodeType":"ErrorDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"spender","nameLocation":"1519:7:10","nodeType":"VariableDeclaration","scope":2281,"src":"1511:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2274,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:10","nodeType":"VariableDeclaration","scope":2281,"src":"1528:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"needed","nameLocation":"1555:6:10","nodeType":"VariableDeclaration","scope":2281,"src":"1547:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:10"},"src":"1478:85:10"},{"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"1569:174:10","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2286,"name":"ERC20InvalidApprover","nameLocation":"1754:20:10","nodeType":"ErrorDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"approver","nameLocation":"1783:8:10","nodeType":"VariableDeclaration","scope":2286,"src":"1775:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:10"},"src":"1748:45:10"},{"documentation":{"id":2287,"nodeType":"StructuredDocumentation","src":"1799:195:10","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2291,"name":"ERC20InvalidSpender","nameLocation":"2005:19:10","nodeType":"ErrorDefinition","parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"spender","nameLocation":"2033:7:10","nodeType":"VariableDeclaration","scope":2291,"src":"2025:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2288,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:10"},"src":"1999:43:10"}],"scope":2388,"src":"280:1764:10","usedErrors":[2262,2267,2272,2281,2286,2291],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"2046:143:10","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":2340,"linearizedBaseContracts":[2340],"name":"IERC721Errors","nameLocation":"2200:13:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"2220:219:10","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2298,"name":"ERC721InvalidOwner","nameLocation":"2450:18:10","nodeType":"ErrorDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"owner","nameLocation":"2477:5:10","nodeType":"VariableDeclaration","scope":2298,"src":"2469:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:10"},"src":"2444:40:10"},{"documentation":{"id":2299,"nodeType":"StructuredDocumentation","src":"2490:132:10","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2303,"name":"ERC721NonexistentToken","nameLocation":"2633:22:10","nodeType":"ErrorDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:10","nodeType":"VariableDeclaration","scope":2303,"src":"2656:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:10"},"src":"2627:46:10"},{"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"2679:289:10","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2312,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:10","nodeType":"ErrorDefinition","parameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"sender","nameLocation":"3008:6:10","nodeType":"VariableDeclaration","scope":2312,"src":"3000:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2305,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:10","nodeType":"VariableDeclaration","scope":2312,"src":"3016:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"owner","nameLocation":"3041:5:10","nodeType":"VariableDeclaration","scope":2312,"src":"3033:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2309,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:10"},"src":"2973:75:10"},{"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"3054:152:10","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2317,"name":"ERC721InvalidSender","nameLocation":"3217:19:10","nodeType":"ErrorDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"sender","nameLocation":"3245:6:10","nodeType":"VariableDeclaration","scope":2317,"src":"3237:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:10"},"src":"3211:42:10"},{"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"3259:159:10","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2322,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:10","nodeType":"ErrorDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:10","nodeType":"VariableDeclaration","scope":2322,"src":"3451:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:10"},"src":"3423:46:10"},{"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"3475:247:10","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2329,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:10","nodeType":"ErrorDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"operator","nameLocation":"3768:8:10","nodeType":"VariableDeclaration","scope":2329,"src":"3760:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:10","nodeType":"VariableDeclaration","scope":2329,"src":"3778:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:10"},"src":"3727:68:10"},{"documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"3801:174:10","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2334,"name":"ERC721InvalidApprover","nameLocation":"3986:21:10","nodeType":"ErrorDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"approver","nameLocation":"4016:8:10","nodeType":"VariableDeclaration","scope":2334,"src":"4008:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:10"},"src":"3980:46:10"},{"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"4032:197:10","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2339,"name":"ERC721InvalidOperator","nameLocation":"4240:21:10","nodeType":"ErrorDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"operator","nameLocation":"4270:8:10","nodeType":"VariableDeclaration","scope":2339,"src":"4262:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:10"},"src":"4234:46:10"}],"scope":2388,"src":"2190:2092:10","usedErrors":[2298,2303,2312,2317,2322,2329,2334,2339],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"4284:145:10","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":2387,"linearizedBaseContracts":[2387],"name":"IERC1155Errors","nameLocation":"4440:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"4461:361:10","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2352,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:10","nodeType":"ErrorDefinition","parameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"sender","nameLocation":"4868:6:10","nodeType":"VariableDeclaration","scope":2352,"src":"4860:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2343,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"balance","nameLocation":"4884:7:10","nodeType":"VariableDeclaration","scope":2352,"src":"4876:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2348,"mutability":"mutable","name":"needed","nameLocation":"4901:6:10","nodeType":"VariableDeclaration","scope":2352,"src":"4893:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2350,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:10","nodeType":"VariableDeclaration","scope":2352,"src":"4909:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:10"},"src":"4827:99:10"},{"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"4932:152:10","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2357,"name":"ERC1155InvalidSender","nameLocation":"5095:20:10","nodeType":"ErrorDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"sender","nameLocation":"5124:6:10","nodeType":"VariableDeclaration","scope":2357,"src":"5116:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:10"},"src":"5089:43:10"},{"documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"5138:159:10","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2362,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:10","nodeType":"ErrorDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:10","nodeType":"VariableDeclaration","scope":2362,"src":"5331:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2359,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:10"},"src":"5302:47:10"},{"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"5355:256:10","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2369,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:10","nodeType":"ErrorDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"operator","nameLocation":"5659:8:10","nodeType":"VariableDeclaration","scope":2369,"src":"5651:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2364,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"owner","nameLocation":"5677:5:10","nodeType":"VariableDeclaration","scope":2369,"src":"5669:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:10"},"src":"5616:68:10"},{"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"5690:174:10","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2374,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:10","nodeType":"ErrorDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"approver","nameLocation":"5906:8:10","nodeType":"VariableDeclaration","scope":2374,"src":"5898:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2371,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:10"},"src":"5869:47:10"},{"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"5922:197:10","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2379,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:10","nodeType":"ErrorDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"operator","nameLocation":"6161:8:10","nodeType":"VariableDeclaration","scope":2379,"src":"6153:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:10"},"src":"6124:47:10"},{"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"6177:280:10","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2386,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:10","nodeType":"ErrorDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:10","nodeType":"VariableDeclaration","scope":2386,"src":"6494:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:10","nodeType":"VariableDeclaration","scope":2386,"src":"6513:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:10"},"src":"6462:73:10"}],"scope":2388,"src":"4430:2107:10","usedErrors":[2352,2357,2362,2369,2374,2379,2386],"usedEvents":[]}],"src":"112:6426:10"},"id":10},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[3286],"ERC1967Utils":[2681],"IBeacon":[2691],"IERC1967":[2240],"StorageSlot":[4624]},"id":2682,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2389,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"114:24:11"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":2391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2682,"sourceUnit":2692,"src":"140:46:11","symbolAliases":[{"foreign":{"id":2390,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"148:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":2393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2682,"sourceUnit":2241,"src":"187:55:11","symbolAliases":[{"foreign":{"id":2392,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"195:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":2395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2682,"sourceUnit":3287,"src":"243:48:11","symbolAliases":[{"foreign":{"id":2394,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"251:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":2397,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2682,"sourceUnit":4625,"src":"292:56:11","symbolAliases":[{"foreign":{"id":2396,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"300:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"350:145:11","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":2681,"linearizedBaseContracts":[2681],"name":"ERC1967Utils","nameLocation":"504:12:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2399,"nodeType":"StructuredDocumentation","src":"523:170:11","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":2402,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:11","nodeType":"VariableDeclaration","scope":2681,"src":"763:114:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:11","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"884:69:11","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":2407,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:11","nodeType":"ErrorDefinition","parameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:11","nodeType":"VariableDeclaration","scope":2407,"src":"993:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2404,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:11"},"src":"958:59:11"},{"documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"1023:60:11","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":2412,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:11","nodeType":"ErrorDefinition","parameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"admin","nameLocation":"1122:5:11","nodeType":"VariableDeclaration","scope":2412,"src":"1114:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2409,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:11"},"src":"1088:41:11"},{"documentation":{"id":2413,"nodeType":"StructuredDocumentation","src":"1135:61:11","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":2417,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:11","nodeType":"ErrorDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:11","nodeType":"VariableDeclaration","scope":2417,"src":"1228:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:11"},"src":"1201:43:11"},{"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"1250:82:11","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":2420,"name":"ERC1967NonPayable","nameLocation":"1343:17:11","nodeType":"ErrorDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[],"src":"1360:2:11"},"src":"1337:26:11"},{"body":{"id":2432,"nodeType":"Block","src":"1502:77:11","statements":[{"expression":{"expression":{"arguments":[{"id":2428,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"1546:19:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2426,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"1519:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4624_$","typeString":"type(library StorageSlot)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4535,"src":"1519:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4506_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4505,"src":"1519:53:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2425,"id":2431,"nodeType":"Return","src":"1512:60:11"}]},"documentation":{"id":2421,"nodeType":"StructuredDocumentation","src":"1369:67:11","text":" @dev Returns the current implementation address."},"id":2433,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:11","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[],"src":"1467:2:11"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2433,"src":"1493:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2423,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:11"},"scope":2681,"src":"1441:138:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"1734:218:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2439,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"1748:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:11","memberName":"code","nodeType":"MemberAccess","src":"1748:22:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:11","memberName":"length","nodeType":"MemberAccess","src":"1748:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2449,"nodeType":"IfStatement","src":"1744:119:11","trueBody":{"id":2448,"nodeType":"Block","src":"1784:79:11","statements":[{"errorCall":{"arguments":[{"id":2445,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"1834:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2444,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1805:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2447,"nodeType":"RevertStatement","src":"1798:54:11"}]}},{"expression":{"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2453,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"1899:19:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2450,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"1872:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4624_$","typeString":"type(library StorageSlot)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4535,"src":"1872:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4506_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4505,"src":"1872:53:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2456,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"1928:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2458,"nodeType":"ExpressionStatement","src":"1872:73:11"}]},"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"1585:81:11","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:11","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:11","nodeType":"VariableDeclaration","scope":2460,"src":"1699:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:11"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[],"src":"1734:0:11"},"scope":2681,"src":"1671:281:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2495,"nodeType":"Block","src":"2345:263:11","statements":[{"expression":{"arguments":[{"id":2469,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"2374:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2468,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"2355:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2471,"nodeType":"ExpressionStatement","src":"2355:37:11"},{"eventCall":{"arguments":[{"id":2475,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"2425:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2472,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"2407:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2240_$","typeString":"type(contract IERC1967)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:11","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":2227,"src":"2407:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2477,"nodeType":"EmitStatement","src":"2402:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2478,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"2458:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:11","memberName":"length","nodeType":"MemberAccess","src":"2458:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2493,"nodeType":"Block","src":"2559:43:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2490,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"2573:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"ExpressionStatement","src":"2573:18:11"}]},"id":2494,"nodeType":"IfStatement","src":"2454:148:11","trueBody":{"id":2489,"nodeType":"Block","src":"2475:78:11","statements":[{"expression":{"arguments":[{"id":2485,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"2518:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2486,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"2537:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2482,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"2489:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3286_$","typeString":"type(library Address)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:11","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"2489:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2488,"nodeType":"ExpressionStatement","src":"2489:53:11"}]}}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"1958:301:11","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":2496,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:11","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:11","nodeType":"VariableDeclaration","scope":2496,"src":"2290:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2462,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"data","nameLocation":"2330:4:11","nodeType":"VariableDeclaration","scope":2496,"src":"2317:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2464,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:11"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[],"src":"2345:0:11"},"scope":2681,"src":"2264:344:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2497,"nodeType":"StructuredDocumentation","src":"2614:145:11","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":2500,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:11","nodeType":"VariableDeclaration","scope":2681,"src":"2829:105:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:11","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":2512,"nodeType":"Block","src":"3339:68:11","statements":[{"expression":{"expression":{"arguments":[{"id":2508,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3383:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2506,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"3356:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4624_$","typeString":"type(library StorageSlot)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4535,"src":"3356:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4506_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4505,"src":"3356:44:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2505,"id":2511,"nodeType":"Return","src":"3349:51:11"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"2941:341:11","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":2513,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:11","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[],"src":"3304:2:11"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2513,"src":"3330:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2503,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:11"},"scope":2681,"src":"3287:120:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2543,"nodeType":"Block","src":"3535:172:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"3549:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2520,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:11","typeDescriptions":{}}},"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2533,"nodeType":"IfStatement","src":"3545:91:11","trueBody":{"id":2532,"nodeType":"Block","src":"3573:63:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2526,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:11","typeDescriptions":{}}},"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2525,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"3594:19:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2531,"nodeType":"RevertStatement","src":"3587:38:11"}]}},{"expression":{"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2537,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3672:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2534,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"3645:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4624_$","typeString":"type(library StorageSlot)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4535,"src":"3645:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4506_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4505,"src":"3645:44:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2540,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"3692:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2542,"nodeType":"ExpressionStatement","src":"3645:55:11"}]},"documentation":{"id":2514,"nodeType":"StructuredDocumentation","src":"3413:72:11","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":2544,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:11","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:11","nodeType":"VariableDeclaration","scope":2544,"src":"3509:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2515,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:11"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[],"src":"3535:0:11"},"scope":2681,"src":"3490:217:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2562,"nodeType":"Block","src":"3875:94:11","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2553,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"3912:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2555,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"3924:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2550,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"3890:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2240_$","typeString":"type(contract IERC1967)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:11","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":2234,"src":"3890:21:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2557,"nodeType":"EmitStatement","src":"3885:48:11"},{"expression":{"arguments":[{"id":2559,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"3953:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2558,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"3943:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2561,"nodeType":"ExpressionStatement","src":"3943:19:11"}]},"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"3713:109:11","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:11","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:11","nodeType":"VariableDeclaration","scope":2563,"src":"3848:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:11"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[],"src":"3875:0:11"},"scope":2681,"src":"3827:142:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"3975:201:11","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":2567,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:11","nodeType":"VariableDeclaration","scope":2681,"src":"4246:106:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:11","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":2579,"nodeType":"Block","src":"4468:69:11","statements":[{"expression":{"expression":{"arguments":[{"id":2575,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4512:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2573,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"4485:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4624_$","typeString":"type(library StorageSlot)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4535,"src":"4485:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4506_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4505,"src":"4485:45:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2572,"id":2578,"nodeType":"Return","src":"4478:52:11"}]},"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"4359:51:11","text":" @dev Returns the current beacon."},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:11","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[],"src":"4433:2:11"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"4459:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:11"},"scope":2681,"src":"4415:122:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2625,"nodeType":"Block","src":"4667:390:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2586,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4681:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:11","memberName":"code","nodeType":"MemberAccess","src":"4681:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:11","memberName":"length","nodeType":"MemberAccess","src":"4681:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2596,"nodeType":"IfStatement","src":"4677:95:11","trueBody":{"id":2595,"nodeType":"Block","src":"4709:63:11","statements":[{"errorCall":{"arguments":[{"id":2592,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4751:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2591,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4730:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2594,"nodeType":"RevertStatement","src":"4723:38:11"}]}},{"expression":{"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2600,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4809:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2597,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"4782:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4624_$","typeString":"type(library StorageSlot)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4535,"src":"4782:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4506_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4505,"src":"4782:45:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2603,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4830:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2605,"nodeType":"ExpressionStatement","src":"4782:57:11"},{"assignments":[2607],"declarations":[{"constant":false,"id":2607,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:11","nodeType":"VariableDeclaration","scope":2625,"src":"4850:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2613,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2609,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4889:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2608,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"4881:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2691_$","typeString":"type(contract IBeacon)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2691","typeString":"contract IBeacon"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:11","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2690,"src":"4881:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2614,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4930:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:11","memberName":"code","nodeType":"MemberAccess","src":"4930:25:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:11","memberName":"length","nodeType":"MemberAccess","src":"4930:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2624,"nodeType":"IfStatement","src":"4926:125:11","trueBody":{"id":2623,"nodeType":"Block","src":"4969:82:11","statements":[{"errorCall":{"arguments":[{"id":2620,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"5019:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2619,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4990:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2622,"nodeType":"RevertStatement","src":"4983:57:11"}]}}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"4543:72:11","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":2626,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:11","nodeType":"FunctionDefinition","parameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:11","nodeType":"VariableDeclaration","scope":2626,"src":"4640:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2582,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:11"},"returnParameters":{"id":2585,"nodeType":"ParameterList","parameters":[],"src":"4667:0:11"},"scope":2681,"src":"4620:437:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2665,"nodeType":"Block","src":"5661:263:11","statements":[{"expression":{"arguments":[{"id":2635,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"5682:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2634,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"5671:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2637,"nodeType":"ExpressionStatement","src":"5671:21:11"},{"eventCall":{"arguments":[{"id":2641,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"5731:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2638,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"5707:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2240_$","typeString":"type(contract IERC1967)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:11","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"5707:23:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2643,"nodeType":"EmitStatement","src":"5702:39:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2644,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"5756:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:11","memberName":"length","nodeType":"MemberAccess","src":"5756:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2663,"nodeType":"Block","src":"5875:43:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2660,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"5889:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2662,"nodeType":"ExpressionStatement","src":"5889:18:11"}]},"id":2664,"nodeType":"IfStatement","src":"5752:166:11","trueBody":{"id":2659,"nodeType":"Block","src":"5773:96:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2652,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"5824:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2651,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"5816:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2691_$","typeString":"type(contract IBeacon)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2691","typeString":"contract IBeacon"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:11","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2690,"src":"5816:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2656,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"5853:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2648,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"5787:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3286_$","typeString":"type(library Address)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:11","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"5787:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2658,"nodeType":"ExpressionStatement","src":"5787:71:11"}]}}]},"documentation":{"id":2627,"nodeType":"StructuredDocumentation","src":"5063:514:11","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:11","nodeType":"FunctionDefinition","parameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:11","nodeType":"VariableDeclaration","scope":2666,"src":"5614:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2628,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"data","nameLocation":"5646:4:11","nodeType":"VariableDeclaration","scope":2666,"src":"5633:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2630,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:11"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[],"src":"5661:0:11"},"scope":2681,"src":"5582:342:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2679,"nodeType":"Block","src":"6149:86:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2670,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:11","memberName":"value","nodeType":"MemberAccess","src":"6163:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2678,"nodeType":"IfStatement","src":"6159:70:11","trueBody":{"id":2677,"nodeType":"Block","src":"6178:51:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2674,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"6199:17:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2676,"nodeType":"RevertStatement","src":"6192:26:11"}]}}]},"documentation":{"id":2667,"nodeType":"StructuredDocumentation","src":"5930:178:11","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":2680,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:11","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[],"src":"6138:2:11"},"returnParameters":{"id":2669,"nodeType":"ParameterList","parameters":[],"src":"6149:0:11"},"scope":2681,"src":"6113:122:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2682,"src":"496:5741:11","usedErrors":[2407,2412,2417,2420],"usedEvents":[]}],"src":"114:6124:11"},"id":11},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[2691]},"id":2692,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2683,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"108:25:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":2684,"nodeType":"StructuredDocumentation","src":"135:79:12","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":2691,"linearizedBaseContracts":[2691],"name":"IBeacon","nameLocation":"225:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2685,"nodeType":"StructuredDocumentation","src":"239:168:12","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":2690,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"421:14:12","nodeType":"FunctionDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[],"src":"435:2:12"},"returnParameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2690,"src":"461:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"460:9:12"},"scope":2691,"src":"412:58:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2692,"src":"215:257:12","usedErrors":[],"usedEvents":[]}],"src":"108:365:12"},"id":12},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[2814],"IERC165":[6038]},"id":2815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2693,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"110:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2695,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2815,"sourceUnit":6039,"src":"136:62:13","symbolAliases":[{"foreign":{"id":2694,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"144:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2697,"name":"IERC165","nameLocations":["359:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":6038,"src":"359:7:13"},"id":2698,"nodeType":"InheritanceSpecifier","src":"359:7:13"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"200:136:13","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":2814,"linearizedBaseContracts":[2814,6038],"name":"IERC1155","nameLocation":"347:8:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"373:125:13","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":2711,"name":"TransferSingle","nameLocation":"509:14:13","nodeType":"EventDefinition","parameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:13","nodeType":"VariableDeclaration","scope":2711,"src":"524:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2703,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:13","nodeType":"VariableDeclaration","scope":2711,"src":"550:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2702,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2705,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:13","nodeType":"VariableDeclaration","scope":2711,"src":"572:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2704,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2707,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:13","nodeType":"VariableDeclaration","scope":2711,"src":"592:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2709,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:13","nodeType":"VariableDeclaration","scope":2711,"src":"604:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:13"},"src":"503:116:13"},{"anonymous":false,"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"625:144:13","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":2726,"name":"TransferBatch","nameLocation":"780:13:13","nodeType":"EventDefinition","parameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:13","nodeType":"VariableDeclaration","scope":2726,"src":"803:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2713,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2716,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:13","nodeType":"VariableDeclaration","scope":2726,"src":"837:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2715,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2718,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:13","nodeType":"VariableDeclaration","scope":2726,"src":"867:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2717,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2721,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:13","nodeType":"VariableDeclaration","scope":2726,"src":"895:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"nodeType":"ArrayTypeName","src":"895:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2724,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:13","nodeType":"VariableDeclaration","scope":2726,"src":"918:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2723,"nodeType":"ArrayTypeName","src":"918:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:13"},"src":"774:167:13"},{"anonymous":false,"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"947:147:13","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2735,"name":"ApprovalForAll","nameLocation":"1105:14:13","nodeType":"EventDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:13","nodeType":"VariableDeclaration","scope":2735,"src":"1120:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2728,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2731,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:13","nodeType":"VariableDeclaration","scope":2735,"src":"1145:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2730,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2733,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:13","nodeType":"VariableDeclaration","scope":2735,"src":"1171:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2732,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:13"},"src":"1099:87:13"},{"anonymous":false,"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"1192:343:13","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":2742,"name":"URI","nameLocation":"1546:3:13","nodeType":"EventDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:13","nodeType":"VariableDeclaration","scope":2742,"src":"1550:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2737,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2740,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:13","nodeType":"VariableDeclaration","scope":2742,"src":"1564:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:13"},"src":"1540:44:13"},{"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"1590:90:13","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":2752,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:13","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"account","nameLocation":"1712:7:13","nodeType":"VariableDeclaration","scope":2752,"src":"1704:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"id","nameLocation":"1729:2:13","nodeType":"VariableDeclaration","scope":2752,"src":"1721:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:13"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2752,"src":"1756:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:13"},"scope":2814,"src":"1685:80:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"1771:188:13","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":2765,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:13","nodeType":"FunctionDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:13","nodeType":"VariableDeclaration","scope":2765,"src":"1997:27:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2754,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2755,"nodeType":"ArrayTypeName","src":"1997:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"ids","nameLocation":"2053:3:13","nodeType":"VariableDeclaration","scope":2765,"src":"2034:22:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2758,"nodeType":"ArrayTypeName","src":"2034:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:13"},"returnParameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2765,"src":"2086:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2762,"nodeType":"ArrayTypeName","src":"2086:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:13"},"scope":2814,"src":"1964:140:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"2110:254:13","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":2773,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:13","nodeType":"FunctionDefinition","parameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"operator","nameLocation":"2404:8:13","nodeType":"VariableDeclaration","scope":2773,"src":"2396:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"approved","nameLocation":"2419:8:13","nodeType":"VariableDeclaration","scope":2773,"src":"2414:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2769,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:13"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[],"src":"2437:0:13"},"scope":2814,"src":"2369:69:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2774,"nodeType":"StructuredDocumentation","src":"2444:135:13","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":2783,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:13","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"account","nameLocation":"2618:7:13","nodeType":"VariableDeclaration","scope":2783,"src":"2610:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2775,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"operator","nameLocation":"2635:8:13","nodeType":"VariableDeclaration","scope":2783,"src":"2627:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:13"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2783,"src":"2668:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2780,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:13"},"scope":2814,"src":"2584:90:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"2680:927:13","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":2797,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:13","nodeType":"FunctionDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"from","nameLocation":"3646:4:13","nodeType":"VariableDeclaration","scope":2797,"src":"3638:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"to","nameLocation":"3660:2:13","nodeType":"VariableDeclaration","scope":2797,"src":"3652:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2787,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2790,"mutability":"mutable","name":"id","nameLocation":"3672:2:13","nodeType":"VariableDeclaration","scope":2797,"src":"3664:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2789,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"value","nameLocation":"3684:5:13","nodeType":"VariableDeclaration","scope":2797,"src":"3676:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2794,"mutability":"mutable","name":"data","nameLocation":"3706:4:13","nodeType":"VariableDeclaration","scope":2797,"src":"3691:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2793,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:13"},"returnParameters":{"id":2796,"nodeType":"ParameterList","parameters":[],"src":"3720:0:13"},"scope":2814,"src":"3612:109:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"3727:831:13","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":2813,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:13","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"from","nameLocation":"4611:4:13","nodeType":"VariableDeclaration","scope":2813,"src":"4603:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2799,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"to","nameLocation":"4633:2:13","nodeType":"VariableDeclaration","scope":2813,"src":"4625:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2801,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"ids","nameLocation":"4664:3:13","nodeType":"VariableDeclaration","scope":2813,"src":"4645:22:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2804,"nodeType":"ArrayTypeName","src":"4645:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"values","nameLocation":"4696:6:13","nodeType":"VariableDeclaration","scope":2813,"src":"4677:25:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2807,"nodeType":"ArrayTypeName","src":"4677:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"data","nameLocation":"4727:4:13","nodeType":"VariableDeclaration","scope":2813,"src":"4712:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2809,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:13"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[],"src":"4746:0:13"},"scope":2814,"src":"4563:184:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2815,"src":"337:4412:13","usedErrors":[],"usedEvents":[2711,2726,2735,2742]}],"src":"110:4640:13"},"id":13},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[2856],"IERC165":[6038]},"id":2857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2816,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"118:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":6039,"src":"144:62:14","symbolAliases":[{"foreign":{"id":2817,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"152:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2820,"name":"IERC165","nameLocations":["357:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":6038,"src":"357:7:14"},"id":2821,"nodeType":"InheritanceSpecifier","src":"357:7:14"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2819,"nodeType":"StructuredDocumentation","src":"208:118:14","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":2856,"linearizedBaseContracts":[2856,6038],"name":"IERC1155Receiver","nameLocation":"337:16:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"371:827:14","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":2837,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:14","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"operator","nameLocation":"1247:8:14","nodeType":"VariableDeclaration","scope":2837,"src":"1239:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"from","nameLocation":"1273:4:14","nodeType":"VariableDeclaration","scope":2837,"src":"1265:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2825,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"id","nameLocation":"1295:2:14","nodeType":"VariableDeclaration","scope":2837,"src":"1287:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2830,"mutability":"mutable","name":"value","nameLocation":"1315:5:14","nodeType":"VariableDeclaration","scope":2837,"src":"1307:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"data","nameLocation":"1345:4:14","nodeType":"VariableDeclaration","scope":2837,"src":"1330:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2831,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:14"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2837,"src":"1374:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2834,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:14"},"scope":2856,"src":"1203:179:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"1388:995:14","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":2855,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:14","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"operator","nameLocation":"2437:8:14","nodeType":"VariableDeclaration","scope":2855,"src":"2429:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2839,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"from","nameLocation":"2463:4:14","nodeType":"VariableDeclaration","scope":2855,"src":"2455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"ids","nameLocation":"2496:3:14","nodeType":"VariableDeclaration","scope":2855,"src":"2477:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ArrayTypeName","src":"2477:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"values","nameLocation":"2528:6:14","nodeType":"VariableDeclaration","scope":2855,"src":"2509:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2847,"nodeType":"ArrayTypeName","src":"2509:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"data","nameLocation":"2559:4:14","nodeType":"VariableDeclaration","scope":2855,"src":"2544:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2849,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:14"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"2588:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2852,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:14"},"scope":2856,"src":"2388:208:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2857,"src":"327:2271:14","usedErrors":[],"usedEvents":[]}],"src":"118:2481:14"},"id":14},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[2814],"IERC1155MetadataURI":[2872]},"id":2873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2858,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"132:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":2860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2873,"sourceUnit":2815,"src":"158:41:15","symbolAliases":[{"foreign":{"id":2859,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"166:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2862,"name":"IERC1155","nameLocations":["399:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2814,"src":"399:8:15"},"id":2863,"nodeType":"InheritanceSpecifier","src":"399:8:15"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"201:164:15","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":2872,"linearizedBaseContracts":[2872,2814,6038],"name":"IERC1155MetadataURI","nameLocation":"376:19:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"414:192:15","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":2871,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:15","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"id","nameLocation":"632:2:15","nodeType":"VariableDeclaration","scope":2871,"src":"624:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:15"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2871,"src":"659:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2868,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:15"},"scope":2872,"src":"611:63:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2873,"src":"366:310:15","usedErrors":[],"usedEvents":[2711,2726,2735,2742]}],"src":"132:545:15"},"id":15},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[3026],"IERC1155Errors":[2387],"IERC1155Receiver":[2856]},"id":3027,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2874,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":2876,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3027,"sourceUnit":2857,"src":"146:57:16","symbolAliases":[{"foreign":{"id":2875,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"154:16:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2878,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3027,"sourceUnit":2388,"src":"204:70:16","symbolAliases":[{"foreign":{"id":2877,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"212:14:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"276:162:16","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":3026,"linearizedBaseContracts":[3026],"name":"ERC1155Utils","nameLocation":"447:12:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2950,"nodeType":"Block","src":"1191:776:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2895,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"1205:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:16","memberName":"code","nodeType":"MemberAccess","src":"1205:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:16","memberName":"length","nodeType":"MemberAccess","src":"1205:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2949,"nodeType":"IfStatement","src":"1201:760:16","trueBody":{"id":2948,"nodeType":"Block","src":"1225:736:16","statements":[{"clauses":[{"block":{"id":2926,"nodeType":"Block","src":"1341:221:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"1363:8:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2914,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"1375:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2856_$","typeString":"type(contract IERC1155Receiver)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:16","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2837,"src":"1375:34:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:16","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2925,"nodeType":"IfStatement","src":"1359:189:16","trueBody":{"id":2924,"nodeType":"Block","src":"1420:128:16","statements":[{"errorCall":{"arguments":[{"id":2921,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"1526:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2918,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"1488:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2387_$","typeString":"type(contract IERC1155Errors)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:16","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2362,"src":"1488:37:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2923,"nodeType":"RevertStatement","src":"1481:48:16"}]}}]},"errorName":"","id":2927,"nodeType":"TryCatchClause","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"response","nameLocation":"1331:8:16","nodeType":"VariableDeclaration","scope":2927,"src":"1324:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2910,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:16"},"src":"1315:247:16"},{"block":{"id":2945,"nodeType":"Block","src":"1591:360:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2931,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"1613:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:16","memberName":"length","nodeType":"MemberAccess","src":"1613:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2943,"nodeType":"Block","src":"1784:153:16","statements":[{"AST":{"nativeSrc":"1831:88:16","nodeType":"YulBlock","src":"1831:88:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1868:6:16","nodeType":"YulIdentifier","src":"1868:6:16"},{"kind":"number","nativeSrc":"1876:4:16","nodeType":"YulLiteral","src":"1876:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1864:3:16","nodeType":"YulIdentifier","src":"1864:3:16"},"nativeSrc":"1864:17:16","nodeType":"YulFunctionCall","src":"1864:17:16"},{"arguments":[{"name":"reason","nativeSrc":"1889:6:16","nodeType":"YulIdentifier","src":"1889:6:16"}],"functionName":{"name":"mload","nativeSrc":"1883:5:16","nodeType":"YulIdentifier","src":"1883:5:16"},"nativeSrc":"1883:13:16","nodeType":"YulFunctionCall","src":"1883:13:16"}],"functionName":{"name":"revert","nativeSrc":"1857:6:16","nodeType":"YulIdentifier","src":"1857:6:16"},"nativeSrc":"1857:40:16","nodeType":"YulFunctionCall","src":"1857:40:16"},"nativeSrc":"1857:40:16","nodeType":"YulExpressionStatement","src":"1857:40:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2929,"isOffset":false,"isSlot":false,"src":"1868:6:16","valueSize":1},{"declaration":2929,"isOffset":false,"isSlot":false,"src":"1889:6:16","valueSize":1}],"flags":["memory-safe"],"id":2942,"nodeType":"InlineAssembly","src":"1806:113:16"}]},"id":2944,"nodeType":"IfStatement","src":"1609:328:16","trueBody":{"id":2941,"nodeType":"Block","src":"1633:145:16","statements":[{"errorCall":{"arguments":[{"id":2938,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"1756:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2935,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"1718:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2387_$","typeString":"type(contract IERC1155Errors)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:16","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2362,"src":"1718:37:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2940,"nodeType":"RevertStatement","src":"1711:48:16"}]}}]},"errorName":"","id":2946,"nodeType":"TryCatchClause","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"reason","nameLocation":"1583:6:16","nodeType":"VariableDeclaration","scope":2946,"src":"1570:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2928,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:16"},"src":"1563:388:16"}],"externalCall":{"arguments":[{"id":2904,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"1282:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2905,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"1292:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2906,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1298:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"1302:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2908,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"1309:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"1260:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2900,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"1243:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2856_$","typeString":"type(contract IERC1155Receiver)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$2856","typeString":"contract IERC1155Receiver"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:16","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2837,"src":"1243:38:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:16","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2947,"nodeType":"TryStatement","src":"1239:712:16"}]}}]},"documentation":{"id":2880,"nodeType":"StructuredDocumentation","src":"466:535:16","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":2951,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:16","nodeType":"FunctionDefinition","parameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"operator","nameLocation":"1055:8:16","nodeType":"VariableDeclaration","scope":2951,"src":"1047:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2884,"mutability":"mutable","name":"from","nameLocation":"1081:4:16","nodeType":"VariableDeclaration","scope":2951,"src":"1073:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2883,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2886,"mutability":"mutable","name":"to","nameLocation":"1103:2:16","nodeType":"VariableDeclaration","scope":2951,"src":"1095:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2885,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2888,"mutability":"mutable","name":"id","nameLocation":"1123:2:16","nodeType":"VariableDeclaration","scope":2951,"src":"1115:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2890,"mutability":"mutable","name":"value","nameLocation":"1143:5:16","nodeType":"VariableDeclaration","scope":2951,"src":"1135:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"data","nameLocation":"1171:4:16","nodeType":"VariableDeclaration","scope":2951,"src":"1158:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2891,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:16"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[],"src":"1191:0:16"},"scope":3026,"src":"1006:961:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3024,"nodeType":"Block","src":"2733:818:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2969,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2747:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:4:16","memberName":"code","nodeType":"MemberAccess","src":"2747:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:6:16","memberName":"length","nodeType":"MemberAccess","src":"2747:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2747:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3023,"nodeType":"IfStatement","src":"2743:802:16","trueBody":{"id":3022,"nodeType":"Block","src":"2767:778:16","statements":[{"clauses":[{"block":{"id":3000,"nodeType":"Block","src":"2920:226:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2987,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"2942:8:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2988,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"2954:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2856_$","typeString":"type(contract IERC1155Receiver)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2971:22:16","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2855,"src":"2954:39:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2994:8:16","memberName":"selector","nodeType":"MemberAccess","src":"2954:48:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2942:60:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2999,"nodeType":"IfStatement","src":"2938:194:16","trueBody":{"id":2998,"nodeType":"Block","src":"3004:128:16","statements":[{"errorCall":{"arguments":[{"id":2995,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"3110:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2992,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"3072:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2387_$","typeString":"type(contract IERC1155Errors)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3087:22:16","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2362,"src":"3072:37:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2997,"nodeType":"RevertStatement","src":"3065:48:16"}]}}]},"errorName":"","id":3001,"nodeType":"TryCatchClause","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"response","nameLocation":"2897:8:16","nodeType":"VariableDeclaration","scope":3001,"src":"2890:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2984,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2890:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2872:47:16"},"src":"2864:282:16"},{"block":{"id":3019,"nodeType":"Block","src":"3175:360:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3005,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3197:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:6:16","memberName":"length","nodeType":"MemberAccess","src":"3197:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3197:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3017,"nodeType":"Block","src":"3368:153:16","statements":[{"AST":{"nativeSrc":"3415:88:16","nodeType":"YulBlock","src":"3415:88:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"3452:6:16","nodeType":"YulIdentifier","src":"3452:6:16"},{"kind":"number","nativeSrc":"3460:4:16","nodeType":"YulLiteral","src":"3460:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3448:3:16","nodeType":"YulIdentifier","src":"3448:3:16"},"nativeSrc":"3448:17:16","nodeType":"YulFunctionCall","src":"3448:17:16"},{"arguments":[{"name":"reason","nativeSrc":"3473:6:16","nodeType":"YulIdentifier","src":"3473:6:16"}],"functionName":{"name":"mload","nativeSrc":"3467:5:16","nodeType":"YulIdentifier","src":"3467:5:16"},"nativeSrc":"3467:13:16","nodeType":"YulFunctionCall","src":"3467:13:16"}],"functionName":{"name":"revert","nativeSrc":"3441:6:16","nodeType":"YulIdentifier","src":"3441:6:16"},"nativeSrc":"3441:40:16","nodeType":"YulFunctionCall","src":"3441:40:16"},"nativeSrc":"3441:40:16","nodeType":"YulExpressionStatement","src":"3441:40:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3003,"isOffset":false,"isSlot":false,"src":"3452:6:16","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"3473:6:16","valueSize":1}],"flags":["memory-safe"],"id":3016,"nodeType":"InlineAssembly","src":"3390:113:16"}]},"id":3018,"nodeType":"IfStatement","src":"3193:328:16","trueBody":{"id":3015,"nodeType":"Block","src":"3217:145:16","statements":[{"errorCall":{"arguments":[{"id":3012,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"3340:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3009,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"3302:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2387_$","typeString":"type(contract IERC1155Errors)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:22:16","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2362,"src":"3302:37:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3014,"nodeType":"RevertStatement","src":"3295:48:16"}]}}]},"errorName":"","id":3020,"nodeType":"TryCatchClause","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"reason","nameLocation":"3167:6:16","nodeType":"VariableDeclaration","scope":3020,"src":"3154:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3002,"name":"bytes","nodeType":"ElementaryTypeName","src":"3154:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3153:21:16"},"src":"3147:388:16"}],"externalCall":{"arguments":[{"id":2978,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2829:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2979,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2839:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2980,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"2845:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2981,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"2850:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2982,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2858:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2802:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2974,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"2785:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2856_$","typeString":"type(contract IERC1155Receiver)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$2856","typeString":"contract IERC1155Receiver"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:22:16","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2855,"src":"2785:43:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:78:16","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3021,"nodeType":"TryStatement","src":"2781:754:16"}]}}]},"documentation":{"id":2952,"nodeType":"StructuredDocumentation","src":"1973:545:16","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2532:27:16","nodeType":"FunctionDefinition","parameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"operator","nameLocation":"2577:8:16","nodeType":"VariableDeclaration","scope":3025,"src":"2569:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"from","nameLocation":"2603:4:16","nodeType":"VariableDeclaration","scope":3025,"src":"2595:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"to","nameLocation":"2625:2:16","nodeType":"VariableDeclaration","scope":3025,"src":"2617:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2961,"mutability":"mutable","name":"ids","nameLocation":"2654:3:16","nodeType":"VariableDeclaration","scope":3025,"src":"2637:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2960,"nodeType":"ArrayTypeName","src":"2637:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"values","nameLocation":"2684:6:16","nodeType":"VariableDeclaration","scope":3025,"src":"2667:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2963,"nodeType":"ArrayTypeName","src":"2667:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"data","nameLocation":"2713:4:16","nodeType":"VariableDeclaration","scope":3025,"src":"2700:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2965,"name":"bytes","nodeType":"ElementaryTypeName","src":"2700:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2559:164:16"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[],"src":"2733:0:16"},"scope":3026,"src":"2523:1028:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3027,"src":"439:3114:16","usedErrors":[],"usedEvents":[]}],"src":"120:3434:16"},"id":16},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3286],"Errors":[4318]},"id":3287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3028,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":3030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":4319,"src":"127:36:17","symbolAliases":[{"foreign":{"id":3029,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"135:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"165:67:17","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3286,"linearizedBaseContracts":[3286],"name":"Address","nameLocation":"241:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"255:75:17","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":3036,"name":"AddressEmptyCode","nameLocation":"341:16:17","nodeType":"ErrorDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"target","nameLocation":"366:6:17","nodeType":"VariableDeclaration","scope":3036,"src":"358:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:17"},"src":"335:39:17"},{"body":{"id":3083,"nodeType":"Block","src":"1361:294:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3046,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3286","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3286","typeString":"library Address"}],"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:17","typeDescriptions":{}}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:17","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3049,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"1399:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3063,"nodeType":"IfStatement","src":"1371:125:17","trueBody":{"id":3062,"nodeType":"Block","src":"1407:89:17","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3056,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3286","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3286","typeString":"library Address"}],"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3054,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:17","typeDescriptions":{}}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:17","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3059,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"1478:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3051,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"1428:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4318_$","typeString":"type(library Errors)"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:17","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4306,"src":"1428:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3061,"nodeType":"RevertStatement","src":"1421:64:17"}]}},{"assignments":[3065,3067],"declarations":[{"constant":false,"id":3065,"mutability":"mutable","name":"success","nameLocation":"1512:7:17","nodeType":"VariableDeclaration","scope":3083,"src":"1507:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3064,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3067,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:17","nodeType":"VariableDeclaration","scope":3083,"src":"1521:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3066,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3074,"initialValue":{"arguments":[{"hexValue":"","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3068,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"1548:9:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:17","memberName":"call","nodeType":"MemberAccess","src":"1548:14:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3070,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"1570:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:17"},{"condition":{"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:17","subExpression":{"id":3075,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"1596:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3082,"nodeType":"IfStatement","src":"1591:58:17","trueBody":{"id":3081,"nodeType":"Block","src":"1605:44:17","statements":[{"expression":{"arguments":[{"id":3078,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"1627:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3077,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"1619:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3080,"nodeType":"ExpressionStatement","src":"1619:19:17"}]}}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"380:905:17","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3084,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:17","nodeType":"FunctionDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:17","nodeType":"VariableDeclaration","scope":3084,"src":"1309:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3038,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3041,"mutability":"mutable","name":"amount","nameLocation":"1344:6:17","nodeType":"VariableDeclaration","scope":3084,"src":"1336:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:17"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[],"src":"1361:0:17"},"scope":3286,"src":"1290:365:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3100,"nodeType":"Block","src":"2589:62:17","statements":[{"expression":{"arguments":[{"id":3095,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"2628:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3096,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2636:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3094,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"2606:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3093,"id":3099,"nodeType":"Return","src":"2599:45:17"}]},"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"1661:834:17","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":3101,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:17","nodeType":"FunctionDefinition","parameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"target","nameLocation":"2530:6:17","nodeType":"VariableDeclaration","scope":3101,"src":"2522:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3086,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"data","nameLocation":"2551:4:17","nodeType":"VariableDeclaration","scope":3101,"src":"2538:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3088,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:17"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3101,"src":"2575:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3091,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:17"},"scope":3286,"src":"2500:151:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3150,"nodeType":"Block","src":"3088:294:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3115,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3286","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3286","typeString":"library Address"}],"id":3114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3113,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:17","typeDescriptions":{}}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:17","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3126:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3132,"nodeType":"IfStatement","src":"3098:123:17","trueBody":{"id":3131,"nodeType":"Block","src":"3133:88:17","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3125,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3286","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3286","typeString":"library Address"}],"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:17","typeDescriptions":{}}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:17","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3204:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3120,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"3154:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4318_$","typeString":"type(library Errors)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:17","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4306,"src":"3154:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3130,"nodeType":"RevertStatement","src":"3147:63:17"}]}},{"assignments":[3134,3136],"declarations":[{"constant":false,"id":3134,"mutability":"mutable","name":"success","nameLocation":"3236:7:17","nodeType":"VariableDeclaration","scope":3150,"src":"3231:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3133,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:17","nodeType":"VariableDeclaration","scope":3150,"src":"3245:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3135,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3143,"initialValue":{"arguments":[{"id":3141,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3298:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3137,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"3272:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:17","memberName":"call","nodeType":"MemberAccess","src":"3272:11:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3291:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:17"},{"expression":{"arguments":[{"id":3145,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"3347:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3146,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"3355:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3147,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"3364:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3144,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"3320:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3112,"id":3149,"nodeType":"Return","src":"3313:62:17"}]},"documentation":{"id":3102,"nodeType":"StructuredDocumentation","src":"2657:313:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":3151,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:17","nodeType":"FunctionDefinition","parameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"target","nameLocation":"3014:6:17","nodeType":"VariableDeclaration","scope":3151,"src":"3006:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3103,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3106,"mutability":"mutable","name":"data","nameLocation":"3035:4:17","nodeType":"VariableDeclaration","scope":3151,"src":"3022:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3105,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"value","nameLocation":"3049:5:17","nodeType":"VariableDeclaration","scope":3151,"src":"3041:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:17"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3151,"src":"3074:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3110,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:17"},"scope":3286,"src":"2975:407:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3176,"nodeType":"Block","src":"3621:154:17","statements":[{"assignments":[3162,3164],"declarations":[{"constant":false,"id":3162,"mutability":"mutable","name":"success","nameLocation":"3637:7:17","nodeType":"VariableDeclaration","scope":3176,"src":"3632:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3161,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:17","nodeType":"VariableDeclaration","scope":3176,"src":"3646:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3163,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3169,"initialValue":{"arguments":[{"id":3167,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"3691:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3165,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"3673:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:17","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:17","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:17"},{"expression":{"arguments":[{"id":3171,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"3740:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3172,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"3748:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3173,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"3757:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3170,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"3713:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3160,"id":3175,"nodeType":"Return","src":"3706:62:17"}]},"documentation":{"id":3152,"nodeType":"StructuredDocumentation","src":"3388:128:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":3177,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:17","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"target","nameLocation":"3557:6:17","nodeType":"VariableDeclaration","scope":3177,"src":"3549:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3153,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"data","nameLocation":"3578:4:17","nodeType":"VariableDeclaration","scope":3177,"src":"3565:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3155,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:17"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"3607:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3158,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:17"},"scope":3286,"src":"3521:254:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3202,"nodeType":"Block","src":"4013:156:17","statements":[{"assignments":[3188,3190],"declarations":[{"constant":false,"id":3188,"mutability":"mutable","name":"success","nameLocation":"4029:7:17","nodeType":"VariableDeclaration","scope":3202,"src":"4024:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3187,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:17","nodeType":"VariableDeclaration","scope":3202,"src":"4038:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3189,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3195,"initialValue":{"arguments":[{"id":3193,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4085:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3191,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"4065:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:17","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:17","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:17"},{"expression":{"arguments":[{"id":3197,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"4134:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3198,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"4142:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3199,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"4151:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3196,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"4107:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3186,"id":3201,"nodeType":"Return","src":"4100:62:17"}]},"documentation":{"id":3178,"nodeType":"StructuredDocumentation","src":"3781:130:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":3203,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:17","nodeType":"FunctionDefinition","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"target","nameLocation":"3954:6:17","nodeType":"VariableDeclaration","scope":3203,"src":"3946:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3179,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"data","nameLocation":"3975:4:17","nodeType":"VariableDeclaration","scope":3203,"src":"3962:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3181,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:17"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3203,"src":"3999:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3184,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:17"},"scope":3286,"src":"3916:253:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3242,"nodeType":"Block","src":"4595:424:17","statements":[{"condition":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:17","subExpression":{"id":3215,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"4610:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3240,"nodeType":"Block","src":"4669:344:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3222,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"4857:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:17","memberName":"length","nodeType":"MemberAccess","src":"4857:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3226,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"4883:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:17","memberName":"code","nodeType":"MemberAccess","src":"4883:11:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:17","memberName":"length","nodeType":"MemberAccess","src":"4883:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3237,"nodeType":"IfStatement","src":"4853:119:17","trueBody":{"id":3236,"nodeType":"Block","src":"4908:64:17","statements":[{"errorCall":{"arguments":[{"id":3233,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"4950:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3232,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"4933:16:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3235,"nodeType":"RevertStatement","src":"4926:31:17"}]}},{"expression":{"id":3238,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"4992:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3214,"id":3239,"nodeType":"Return","src":"4985:17:17"}]},"id":3241,"nodeType":"IfStatement","src":"4605:408:17","trueBody":{"id":3221,"nodeType":"Block","src":"4619:44:17","statements":[{"expression":{"arguments":[{"id":3218,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"4641:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3217,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"4633:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3220,"nodeType":"ExpressionStatement","src":"4633:19:17"}]}}]},"documentation":{"id":3204,"nodeType":"StructuredDocumentation","src":"4175:257:17","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":3243,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:17","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"target","nameLocation":"4490:6:17","nodeType":"VariableDeclaration","scope":3243,"src":"4482:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3208,"mutability":"mutable","name":"success","nameLocation":"4511:7:17","nodeType":"VariableDeclaration","scope":3243,"src":"4506:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3207,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:17","nodeType":"VariableDeclaration","scope":3243,"src":"4528:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3209,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:17"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3243,"src":"4581:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3212,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:17"},"scope":3286,"src":"4437:582:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3264,"nodeType":"Block","src":"5323:122:17","statements":[{"condition":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:17","subExpression":{"id":3253,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"5338:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3262,"nodeType":"Block","src":"5397:42:17","statements":[{"expression":{"id":3260,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"5418:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3252,"id":3261,"nodeType":"Return","src":"5411:17:17"}]},"id":3263,"nodeType":"IfStatement","src":"5333:106:17","trueBody":{"id":3259,"nodeType":"Block","src":"5347:44:17","statements":[{"expression":{"arguments":[{"id":3256,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"5369:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3255,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"5361:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3258,"nodeType":"ExpressionStatement","src":"5361:19:17"}]}}]},"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"5025:191:17","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:17","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"success","nameLocation":"5252:7:17","nodeType":"VariableDeclaration","scope":3265,"src":"5247:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3245,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:17","nodeType":"VariableDeclaration","scope":3265,"src":"5261:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3247,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:17"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"5309:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3250,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:17"},"scope":3286,"src":"5221:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3284,"nodeType":"Block","src":"5614:379:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3271,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"5690:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:17","memberName":"length","nodeType":"MemberAccess","src":"5690:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3282,"nodeType":"Block","src":"5936:51:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3277,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"5957:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4318_$","typeString":"type(library Errors)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:10:17","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":4309,"src":"5957:17:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5957:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"RevertStatement","src":"5950:26:17"}]},"id":3283,"nodeType":"IfStatement","src":"5686:301:17","trueBody":{"id":3276,"nodeType":"Block","src":"5713:217:17","statements":[{"AST":{"nativeSrc":"5840:80:17","nodeType":"YulBlock","src":"5840:80:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returndata","nativeSrc":"5869:10:17","nodeType":"YulIdentifier","src":"5869:10:17"},{"kind":"number","nativeSrc":"5881:4:17","nodeType":"YulLiteral","src":"5881:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5865:3:17","nodeType":"YulIdentifier","src":"5865:3:17"},"nativeSrc":"5865:21:17","nodeType":"YulFunctionCall","src":"5865:21:17"},{"arguments":[{"name":"returndata","nativeSrc":"5894:10:17","nodeType":"YulIdentifier","src":"5894:10:17"}],"functionName":{"name":"mload","nativeSrc":"5888:5:17","nodeType":"YulIdentifier","src":"5888:5:17"},"nativeSrc":"5888:17:17","nodeType":"YulFunctionCall","src":"5888:17:17"}],"functionName":{"name":"revert","nativeSrc":"5858:6:17","nodeType":"YulIdentifier","src":"5858:6:17"},"nativeSrc":"5858:48:17","nodeType":"YulFunctionCall","src":"5858:48:17"},"nativeSrc":"5858:48:17","nodeType":"YulExpressionStatement","src":"5858:48:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3268,"isOffset":false,"isSlot":false,"src":"5869:10:17","valueSize":1},{"declaration":3268,"isOffset":false,"isSlot":false,"src":"5894:10:17","valueSize":1}],"flags":["memory-safe"],"id":3275,"nodeType":"InlineAssembly","src":"5815:105:17"}]}}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"5451:103:17","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":3285,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:17","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:17","nodeType":"VariableDeclaration","scope":3285,"src":"5576:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3267,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:17"},"returnParameters":{"id":3270,"nodeType":"ParameterList","parameters":[],"src":"5614:0:17"},"scope":3286,"src":"5559:434:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3287,"src":"233:5762:17","usedErrors":[3036],"usedEvents":[]}],"src":"101:5895:17"},"id":17},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[4264],"Comparators":[4296],"Math":[7659],"SlotDerivation":[4500],"StorageSlot":[4624]},"id":4265,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3288,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":3290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4265,"sourceUnit":4297,"src":"209:46:18","symbolAliases":[{"foreign":{"id":3289,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"217:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":3292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4265,"sourceUnit":4501,"src":"256:52:18","symbolAliases":[{"foreign":{"id":3291,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"264:14:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4265,"sourceUnit":4625,"src":"309:46:18","symbolAliases":[{"foreign":{"id":3293,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"317:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4265,"sourceUnit":7660,"src":"356:37:18","symbolAliases":[{"foreign":{"id":3295,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"364:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":3297,"nodeType":"StructuredDocumentation","src":"395:63:18","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":4264,"linearizedBaseContracts":[4264],"name":"Arrays","nameLocation":"467:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3300,"libraryName":{"id":3298,"name":"SlotDerivation","nameLocations":["486:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":4500,"src":"486:14:18"},"nodeType":"UsingForDirective","src":"480:33:18","typeName":{"id":3299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":3303,"libraryName":{"id":3301,"name":"StorageSlot","nameLocations":["524:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":4624,"src":"524:11:18"},"nodeType":"UsingForDirective","src":"518:30:18","typeName":{"id":3302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":3335,"nodeType":"Block","src":"1628:83:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":3325,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"1656:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3324,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"1649:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3328,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"1669:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3327,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"1664:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3330,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"1677:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3323,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"1638:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3332,"nodeType":"ExpressionStatement","src":"1638:44:18"},{"expression":{"id":3333,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"1699:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3322,"id":3334,"nodeType":"Return","src":"1692:12:18"}]},"documentation":{"id":3304,"nodeType":"StructuredDocumentation","src":"554:915:18","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3336,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:18","nodeType":"FunctionDefinition","parameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"array","nameLocation":"1514:5:18","nodeType":"VariableDeclaration","scope":3336,"src":"1497:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3306,"nodeType":"ArrayTypeName","src":"1497:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"comp","nameLocation":"1576:4:18","nodeType":"VariableDeclaration","scope":3336,"src":"1529:51:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3316,"nodeType":"FunctionTypeName","parameterTypes":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3316,"src":"1538:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3316,"src":"1547:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:18"},"returnParameterTypes":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3316,"src":"1570:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3313,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:18"},"src":"1529:51:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:18"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3336,"src":"1610:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3320,"nodeType":"ArrayTypeName","src":"1610:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:18"},"scope":4264,"src":"1474:237:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3354,"nodeType":"Block","src":"1894:66:18","statements":[{"expression":{"arguments":[{"id":3347,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"1909:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3348,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"1916:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4296_$","typeString":"type(library Comparators)"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:18","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4281,"src":"1916:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3346,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3336,3355,3387,3408,3440,3461],"referencedDeclaration":3336,"src":"1904:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3351,"nodeType":"ExpressionStatement","src":"1904:27:18"},{"expression":{"id":3352,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"1948:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3345,"id":3353,"nodeType":"Return","src":"1941:12:18"}]},"documentation":{"id":3337,"nodeType":"StructuredDocumentation","src":"1717:93:18","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":3355,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:18","nodeType":"FunctionDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"array","nameLocation":"1846:5:18","nodeType":"VariableDeclaration","scope":3355,"src":"1829:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3339,"nodeType":"ArrayTypeName","src":"1829:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:18"},"returnParameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3355,"src":"1876:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ArrayTypeName","src":"1876:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:18"},"scope":4264,"src":"1815:145:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3386,"nodeType":"Block","src":"3040:97:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":3377,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"3075:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3376,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3612,3624],"referencedDeclaration":3612,"src":"3055:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3380,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"3102:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":3379,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3650,3676],"referencedDeclaration":3650,"src":"3083:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3375,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3336,3355,3387,3408,3440,3461],"referencedDeclaration":3336,"src":"3050:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3383,"nodeType":"ExpressionStatement","src":"3050:58:18"},{"expression":{"id":3384,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"3125:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3374,"id":3385,"nodeType":"Return","src":"3118:12:18"}]},"documentation":{"id":3356,"nodeType":"StructuredDocumentation","src":"1966:915:18","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3387,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:18","nodeType":"FunctionDefinition","parameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"array","nameLocation":"2926:5:18","nodeType":"VariableDeclaration","scope":3387,"src":"2909:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3357,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3358,"nodeType":"ArrayTypeName","src":"2909:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3369,"mutability":"mutable","name":"comp","nameLocation":"2988:4:18","nodeType":"VariableDeclaration","scope":3387,"src":"2941:51:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3368,"nodeType":"FunctionTypeName","parameterTypes":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3368,"src":"2950:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3360,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3368,"src":"2959:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3362,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:18"},"returnParameterTypes":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3368,"src":"2982:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3365,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:18"},"src":"2941:51:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:18"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3387,"src":"3022:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3371,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3372,"nodeType":"ArrayTypeName","src":"3022:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:18"},"scope":4264,"src":"2886:251:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3407,"nodeType":"Block","src":"3320:87:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":3399,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"3355:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3398,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3612,3624],"referencedDeclaration":3612,"src":"3335:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3401,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"3363:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4296_$","typeString":"type(library Comparators)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:18","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4281,"src":"3363:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3397,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3336,3355,3387,3408,3440,3461],"referencedDeclaration":3336,"src":"3330:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3404,"nodeType":"ExpressionStatement","src":"3330:48:18"},{"expression":{"id":3405,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"3395:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3396,"id":3406,"nodeType":"Return","src":"3388:12:18"}]},"documentation":{"id":3388,"nodeType":"StructuredDocumentation","src":"3143:93:18","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:18","nodeType":"FunctionDefinition","parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"array","nameLocation":"3272:5:18","nodeType":"VariableDeclaration","scope":3408,"src":"3255:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3389,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3390,"nodeType":"ArrayTypeName","src":"3255:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:18"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3408,"src":"3302:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3393,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3394,"nodeType":"ArrayTypeName","src":"3302:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:18"},"scope":4264,"src":"3241:166:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3439,"nodeType":"Block","src":"4487:97:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":3430,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"4522:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3429,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3612,3624],"referencedDeclaration":3624,"src":"4502:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3433,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"4549:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":3432,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3650,3676],"referencedDeclaration":3676,"src":"4530:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3428,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3336,3355,3387,3408,3440,3461],"referencedDeclaration":3336,"src":"4497:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3436,"nodeType":"ExpressionStatement","src":"4497:58:18"},{"expression":{"id":3437,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"4572:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3427,"id":3438,"nodeType":"Return","src":"4565:12:18"}]},"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"3413:915:18","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3440,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:18","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"array","nameLocation":"4373:5:18","nodeType":"VariableDeclaration","scope":3440,"src":"4356:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3411,"nodeType":"ArrayTypeName","src":"4356:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"comp","nameLocation":"4435:4:18","nodeType":"VariableDeclaration","scope":3440,"src":"4388:51:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3421,"nodeType":"FunctionTypeName","parameterTypes":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3421,"src":"4397:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3421,"src":"4406:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:18"},"returnParameterTypes":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3421,"src":"4429:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3418,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:18"},"src":"4388:51:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:18"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3440,"src":"4469:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3425,"nodeType":"ArrayTypeName","src":"4469:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:18"},"scope":4264,"src":"4333:251:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3460,"nodeType":"Block","src":"4767:87:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":3452,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"4802:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3451,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3612,3624],"referencedDeclaration":3624,"src":"4782:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3454,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"4810:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4296_$","typeString":"type(library Comparators)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:18","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4281,"src":"4810:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3450,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3336,3355,3387,3408,3440,3461],"referencedDeclaration":3336,"src":"4777:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3457,"nodeType":"ExpressionStatement","src":"4777:48:18"},{"expression":{"id":3458,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"4842:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3449,"id":3459,"nodeType":"Return","src":"4835:12:18"}]},"documentation":{"id":3441,"nodeType":"StructuredDocumentation","src":"4590:93:18","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":3461,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:18","nodeType":"FunctionDefinition","parameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3444,"mutability":"mutable","name":"array","nameLocation":"4719:5:18","nodeType":"VariableDeclaration","scope":3461,"src":"4702:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3443,"nodeType":"ArrayTypeName","src":"4702:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:18"},"returnParameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3461,"src":"4749:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3447,"nodeType":"ArrayTypeName","src":"4749:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:18"},"scope":4264,"src":"4688:166:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3548,"nodeType":"Block","src":"5470:889:18","statements":[{"id":3547,"nodeType":"UncheckedBlock","src":"5480:873:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3479,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"5508:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3480,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"5514:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3485,"nodeType":"IfStatement","src":"5504:31:18","trueBody":{"functionReturnParameters":3478,"id":3484,"nodeType":"Return","src":"5528:7:18"}},{"assignments":[3487],"declarations":[{"constant":false,"id":3487,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:18","nodeType":"VariableDeclaration","scope":3547,"src":"5591:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3491,"initialValue":{"arguments":[{"id":3489,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"5614:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3488,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"5607:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:18"},{"assignments":[3493],"declarations":[{"constant":false,"id":3493,"mutability":"mutable","name":"pos","nameLocation":"5715:3:18","nodeType":"VariableDeclaration","scope":3547,"src":"5707:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3495,"initialValue":{"id":3494,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"5721:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:18"},{"body":{"id":3526,"nodeType":"Block","src":"5795:331:18","statements":[{"condition":{"arguments":[{"arguments":[{"id":3511,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"5829:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3510,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"5822:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3513,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"5834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3509,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"5817:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3525,"nodeType":"IfStatement","src":"5813:299:18","trueBody":{"id":3524,"nodeType":"Block","src":"5842:270:18","statements":[{"expression":{"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3515,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"6046:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3518,"nodeType":"ExpressionStatement","src":"6046:11:18"},{"expression":{"arguments":[{"id":3520,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"6085:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3521,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"6090:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3519,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"6079:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3523,"nodeType":"ExpressionStatement","src":"6079:14:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"5773:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3503,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"5778:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3527,"initializationExpression":{"assignments":[3497],"declarations":[{"constant":false,"id":3497,"mutability":"mutable","name":"it","nameLocation":"5754:2:18","nodeType":"VariableDeclaration","scope":3527,"src":"5746:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3501,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"5759:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3505,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"5783:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3508,"nodeType":"ExpressionStatement","src":"5783:10:18"},"nodeType":"ForStatement","src":"5741:385:18"},{"expression":{"arguments":[{"id":3529,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"6146:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3530,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"6153:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3528,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"6140:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3532,"nodeType":"ExpressionStatement","src":"6140:17:18"},{"expression":{"arguments":[{"id":3534,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"6207:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3535,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"6214:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3536,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"6219:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3533,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"6196:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3538,"nodeType":"ExpressionStatement","src":"6196:28:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3540,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"6284:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3543,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"6296:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3544,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"6301:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3539,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"6273:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3546,"nodeType":"ExpressionStatement","src":"6273:33:18"}]}]},"documentation":{"id":3462,"nodeType":"StructuredDocumentation","src":"4860:491:18","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":3549,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:18","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"begin","nameLocation":"5384:5:18","nodeType":"VariableDeclaration","scope":3549,"src":"5376:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"end","nameLocation":"5399:3:18","nodeType":"VariableDeclaration","scope":3549,"src":"5391:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"comp","nameLocation":"5451:4:18","nodeType":"VariableDeclaration","scope":3549,"src":"5404:51:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3475,"nodeType":"FunctionTypeName","parameterTypes":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3475,"src":"5413:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3475,"src":"5422:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:18"},"returnParameterTypes":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3475,"src":"5445:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3472,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:18"},"src":"5404:51:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:18"},"returnParameters":{"id":3478,"nodeType":"ParameterList","parameters":[],"src":"5470:0:18"},"scope":4264,"src":"5356:1003:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3559,"nodeType":"Block","src":"6532:88:18","statements":[{"AST":{"nativeSrc":"6567:47:18","nodeType":"YulBlock","src":"6567:47:18","statements":[{"nativeSrc":"6581:23:18","nodeType":"YulAssignment","src":"6581:23:18","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:18","nodeType":"YulIdentifier","src":"6592:5:18"},{"kind":"number","nativeSrc":"6599:4:18","nodeType":"YulLiteral","src":"6599:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:18","nodeType":"YulIdentifier","src":"6588:3:18"},"nativeSrc":"6588:16:18","nodeType":"YulFunctionCall","src":"6588:16:18"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:18","nodeType":"YulIdentifier","src":"6581:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3553,"isOffset":false,"isSlot":false,"src":"6592:5:18","valueSize":1},{"declaration":3556,"isOffset":false,"isSlot":false,"src":"6581:3:18","valueSize":1}],"flags":["memory-safe"],"id":3558,"nodeType":"InlineAssembly","src":"6542:72:18"}]},"documentation":{"id":3550,"nodeType":"StructuredDocumentation","src":"6365:87:18","text":" @dev Pointer to the memory location of the first element of `array`."},"id":3560,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:18","nodeType":"FunctionDefinition","parameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"array","nameLocation":"6490:5:18","nodeType":"VariableDeclaration","scope":3560,"src":"6473:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3552,"nodeType":"ArrayTypeName","src":"6473:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:18"},"returnParameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:18","nodeType":"VariableDeclaration","scope":3560,"src":"6519:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3555,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:18"},"scope":4264,"src":"6457:163:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3579,"nodeType":"Block","src":"6892:93:18","statements":[{"id":3578,"nodeType":"UncheckedBlock","src":"6902:77:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3570,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"6940:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3569,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"6933:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3572,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"6949:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:18","memberName":"length","nodeType":"MemberAccess","src":"6949:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3568,"id":3577,"nodeType":"Return","src":"6926:42:18"}]}]},"documentation":{"id":3561,"nodeType":"StructuredDocumentation","src":"6626:188:18","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3580,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:18","nodeType":"FunctionDefinition","parameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"array","nameLocation":"6850:5:18","nodeType":"VariableDeclaration","scope":3580,"src":"6833:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3563,"nodeType":"ArrayTypeName","src":"6833:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:18"},"returnParameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3567,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:18","nodeType":"VariableDeclaration","scope":3580,"src":"6879:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:18"},"scope":4264,"src":"6819:166:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3589,"nodeType":"Block","src":"7136:68:18","statements":[{"AST":{"nativeSrc":"7155:43:18","nodeType":"YulBlock","src":"7155:43:18","statements":[{"nativeSrc":"7169:19:18","nodeType":"YulAssignment","src":"7169:19:18","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:18","nodeType":"YulIdentifier","src":"7184:3:18"}],"functionName":{"name":"mload","nativeSrc":"7178:5:18","nodeType":"YulIdentifier","src":"7178:5:18"},"nativeSrc":"7178:10:18","nodeType":"YulFunctionCall","src":"7178:10:18"},"variableNames":[{"name":"value","nativeSrc":"7169:5:18","nodeType":"YulIdentifier","src":"7169:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3583,"isOffset":false,"isSlot":false,"src":"7184:3:18","valueSize":1},{"declaration":3586,"isOffset":false,"isSlot":false,"src":"7169:5:18","valueSize":1}],"id":3588,"nodeType":"InlineAssembly","src":"7146:52:18"}]},"documentation":{"id":3581,"nodeType":"StructuredDocumentation","src":"6991:74:18","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3590,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:18","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:18","nodeType":"VariableDeclaration","scope":3590,"src":"7086:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:18"},"returnParameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"value","nameLocation":"7129:5:18","nodeType":"VariableDeclaration","scope":3590,"src":"7121:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:18"},"scope":4264,"src":"7070:134:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3599,"nodeType":"Block","src":"7348:178:18","statements":[{"AST":{"nativeSrc":"7367:153:18","nodeType":"YulBlock","src":"7367:153:18","statements":[{"nativeSrc":"7381:25:18","nodeType":"YulVariableDeclaration","src":"7381:25:18","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:18","nodeType":"YulIdentifier","src":"7401:4:18"}],"functionName":{"name":"mload","nativeSrc":"7395:5:18","nodeType":"YulIdentifier","src":"7395:5:18"},"nativeSrc":"7395:11:18","nodeType":"YulFunctionCall","src":"7395:11:18"},"variables":[{"name":"value1","nativeSrc":"7385:6:18","nodeType":"YulTypedName","src":"7385:6:18","type":""}]},{"nativeSrc":"7419:25:18","nodeType":"YulVariableDeclaration","src":"7419:25:18","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:18","nodeType":"YulIdentifier","src":"7439:4:18"}],"functionName":{"name":"mload","nativeSrc":"7433:5:18","nodeType":"YulIdentifier","src":"7433:5:18"},"nativeSrc":"7433:11:18","nodeType":"YulFunctionCall","src":"7433:11:18"},"variables":[{"name":"value2","nativeSrc":"7423:6:18","nodeType":"YulTypedName","src":"7423:6:18","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:18","nodeType":"YulIdentifier","src":"7464:4:18"},{"name":"value2","nativeSrc":"7470:6:18","nodeType":"YulIdentifier","src":"7470:6:18"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:18","nodeType":"YulIdentifier","src":"7457:6:18"},"nativeSrc":"7457:20:18","nodeType":"YulFunctionCall","src":"7457:20:18"},"nativeSrc":"7457:20:18","nodeType":"YulExpressionStatement","src":"7457:20:18"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:18","nodeType":"YulIdentifier","src":"7497:4:18"},{"name":"value1","nativeSrc":"7503:6:18","nodeType":"YulIdentifier","src":"7503:6:18"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:18","nodeType":"YulIdentifier","src":"7490:6:18"},"nativeSrc":"7490:20:18","nodeType":"YulFunctionCall","src":"7490:20:18"},"nativeSrc":"7490:20:18","nodeType":"YulExpressionStatement","src":"7490:20:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3593,"isOffset":false,"isSlot":false,"src":"7401:4:18","valueSize":1},{"declaration":3593,"isOffset":false,"isSlot":false,"src":"7464:4:18","valueSize":1},{"declaration":3595,"isOffset":false,"isSlot":false,"src":"7439:4:18","valueSize":1},{"declaration":3595,"isOffset":false,"isSlot":false,"src":"7497:4:18","valueSize":1}],"id":3598,"nodeType":"InlineAssembly","src":"7358:162:18"}]},"documentation":{"id":3591,"nodeType":"StructuredDocumentation","src":"7210:77:18","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3600,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:18","nodeType":"FunctionDefinition","parameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:18","nodeType":"VariableDeclaration","scope":3600,"src":"7307:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3595,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:18","nodeType":"VariableDeclaration","scope":3600,"src":"7321:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:18"},"returnParameters":{"id":3597,"nodeType":"ParameterList","parameters":[],"src":"7348:0:18"},"scope":4264,"src":"7292:234:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3611,"nodeType":"Block","src":"7713:64:18","statements":[{"AST":{"nativeSrc":"7732:39:18","nodeType":"YulBlock","src":"7732:39:18","statements":[{"nativeSrc":"7746:15:18","nodeType":"YulAssignment","src":"7746:15:18","value":{"name":"input","nativeSrc":"7756:5:18","nodeType":"YulIdentifier","src":"7756:5:18"},"variableNames":[{"name":"output","nativeSrc":"7746:6:18","nodeType":"YulIdentifier","src":"7746:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3604,"isOffset":false,"isSlot":false,"src":"7756:5:18","valueSize":1},{"declaration":3608,"isOffset":false,"isSlot":false,"src":"7746:6:18","valueSize":1}],"id":3610,"nodeType":"InlineAssembly","src":"7723:48:18"}]},"documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"7532:76:18","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3612,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:18","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"input","nameLocation":"7659:5:18","nodeType":"VariableDeclaration","scope":3612,"src":"7642:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3602,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3603,"nodeType":"ArrayTypeName","src":"7642:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:18"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"output","nameLocation":"7705:6:18","nodeType":"VariableDeclaration","scope":3612,"src":"7688:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3607,"nodeType":"ArrayTypeName","src":"7688:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:18"},"scope":4264,"src":"7613:164:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3623,"nodeType":"Block","src":"7964:64:18","statements":[{"AST":{"nativeSrc":"7983:39:18","nodeType":"YulBlock","src":"7983:39:18","statements":[{"nativeSrc":"7997:15:18","nodeType":"YulAssignment","src":"7997:15:18","value":{"name":"input","nativeSrc":"8007:5:18","nodeType":"YulIdentifier","src":"8007:5:18"},"variableNames":[{"name":"output","nativeSrc":"7997:6:18","nodeType":"YulIdentifier","src":"7997:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3616,"isOffset":false,"isSlot":false,"src":"8007:5:18","valueSize":1},{"declaration":3620,"isOffset":false,"isSlot":false,"src":"7997:6:18","valueSize":1}],"id":3622,"nodeType":"InlineAssembly","src":"7974:48:18"}]},"documentation":{"id":3613,"nodeType":"StructuredDocumentation","src":"7783:76:18","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3624,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:18","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"input","nameLocation":"7910:5:18","nodeType":"VariableDeclaration","scope":3624,"src":"7893:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3615,"nodeType":"ArrayTypeName","src":"7893:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:18"},"returnParameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"output","nameLocation":"7956:6:18","nodeType":"VariableDeclaration","scope":3624,"src":"7939:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3618,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3619,"nodeType":"ArrayTypeName","src":"7939:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:18"},"scope":4264,"src":"7864:164:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3649,"nodeType":"Block","src":"8290:64:18","statements":[{"AST":{"nativeSrc":"8309:39:18","nodeType":"YulBlock","src":"8309:39:18","statements":[{"nativeSrc":"8323:15:18","nodeType":"YulAssignment","src":"8323:15:18","value":{"name":"input","nativeSrc":"8333:5:18","nodeType":"YulIdentifier","src":"8333:5:18"},"variableNames":[{"name":"output","nativeSrc":"8323:6:18","nodeType":"YulIdentifier","src":"8323:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3635,"isOffset":false,"isSlot":false,"src":"8333:5:18","valueSize":1},{"declaration":3646,"isOffset":false,"isSlot":false,"src":"8323:6:18","valueSize":1}],"id":3648,"nodeType":"InlineAssembly","src":"8300:48:18"}]},"documentation":{"id":3625,"nodeType":"StructuredDocumentation","src":"8034:78:18","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3650,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:18","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"input","nameLocation":"8201:5:18","nodeType":"VariableDeclaration","scope":3650,"src":"8154:52:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3634,"nodeType":"FunctionTypeName","parameterTypes":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3634,"src":"8163:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3626,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3634,"src":"8172:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3628,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:18"},"returnParameterTypes":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3634,"src":"8195:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3631,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:18"},"src":"8154:52:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:18"},"returnParameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"output","nameLocation":"8282:6:18","nodeType":"VariableDeclaration","scope":3650,"src":"8235:53:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3645,"nodeType":"FunctionTypeName","parameterTypes":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3645,"src":"8244:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3645,"src":"8253:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:18"},"returnParameterTypes":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3645,"src":"8276:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3642,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:18"},"src":"8235:53:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:18"},"scope":4264,"src":"8117:237:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3675,"nodeType":"Block","src":"8616:64:18","statements":[{"AST":{"nativeSrc":"8635:39:18","nodeType":"YulBlock","src":"8635:39:18","statements":[{"nativeSrc":"8649:15:18","nodeType":"YulAssignment","src":"8649:15:18","value":{"name":"input","nativeSrc":"8659:5:18","nodeType":"YulIdentifier","src":"8659:5:18"},"variableNames":[{"name":"output","nativeSrc":"8649:6:18","nodeType":"YulIdentifier","src":"8649:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3661,"isOffset":false,"isSlot":false,"src":"8659:5:18","valueSize":1},{"declaration":3672,"isOffset":false,"isSlot":false,"src":"8649:6:18","valueSize":1}],"id":3674,"nodeType":"InlineAssembly","src":"8626:48:18"}]},"documentation":{"id":3651,"nodeType":"StructuredDocumentation","src":"8360:78:18","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3676,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:18","nodeType":"FunctionDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3661,"mutability":"mutable","name":"input","nameLocation":"8527:5:18","nodeType":"VariableDeclaration","scope":3676,"src":"8480:52:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3660,"nodeType":"FunctionTypeName","parameterTypes":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3660,"src":"8489:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3660,"src":"8498:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:18"},"returnParameterTypes":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3660,"src":"8521:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3657,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:18"},"src":"8480:52:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:18"},"returnParameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"output","nameLocation":"8608:6:18","nodeType":"VariableDeclaration","scope":3676,"src":"8561:53:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3671,"nodeType":"FunctionTypeName","parameterTypes":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3671,"src":"8570:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3671,"src":"8579:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:18"},"returnParameterTypes":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3671,"src":"8602:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3668,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:18"},"src":"8561:53:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:18"},"scope":4264,"src":"8443:237:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3758,"nodeType":"Block","src":"9405:834:18","statements":[{"assignments":[3688],"declarations":[{"constant":false,"id":3688,"mutability":"mutable","name":"low","nameLocation":"9423:3:18","nodeType":"VariableDeclaration","scope":3758,"src":"9415:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3690,"initialValue":{"hexValue":"30","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:18"},{"assignments":[3692],"declarations":[{"constant":false,"id":3692,"mutability":"mutable","name":"high","nameLocation":"9448:4:18","nodeType":"VariableDeclaration","scope":3758,"src":"9440:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3695,"initialValue":{"expression":{"id":3693,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"9455:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:18","memberName":"length","nodeType":"MemberAccess","src":"9455:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3696,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"9482:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3702,"nodeType":"IfStatement","src":"9478:48:18","trueBody":{"id":3701,"nodeType":"Block","src":"9493:33:18","statements":[{"expression":{"hexValue":"30","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3686,"id":3700,"nodeType":"Return","src":"9507:8:18"}]}},{"body":{"id":3734,"nodeType":"Block","src":"9555:423:18","statements":[{"assignments":[3707],"declarations":[{"constant":false,"id":3707,"mutability":"mutable","name":"mid","nameLocation":"9577:3:18","nodeType":"VariableDeclaration","scope":3734,"src":"9569:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3713,"initialValue":{"arguments":[{"id":3710,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9596:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3711,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"9601:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3708,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"9583:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7659_$","typeString":"type(library Math)"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:18","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6388,"src":"9583:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3715,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"9844:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3716,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"9851:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3714,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4039,4065,4091,4117,4143],"referencedDeclaration":4091,"src":"9831:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4515_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4515_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4514,"src":"9831:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3719,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9864:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3732,"nodeType":"Block","src":"9922:46:18","statements":[{"expression":{"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9940:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3727,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"9946:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"nodeType":"ExpressionStatement","src":"9940:13:18"}]},"id":3733,"nodeType":"IfStatement","src":"9827:141:18","trueBody":{"id":3725,"nodeType":"Block","src":"9873:43:18","statements":[{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3721,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"9891:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3722,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"9898:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3724,"nodeType":"ExpressionStatement","src":"9891:10:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9543:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3704,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"9549:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3735,"nodeType":"WhileStatement","src":"9536:442:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"10095:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3740,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"10119:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3741,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"10126:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3739,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4039,4065,4091,4117,4143],"referencedDeclaration":4091,"src":"10106:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4515_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4515_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4514,"src":"10106:34:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3746,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"10144:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3756,"nodeType":"Block","src":"10198:35:18","statements":[{"expression":{"id":3754,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"10219:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3686,"id":3755,"nodeType":"Return","src":"10212:10:18"}]},"id":3757,"nodeType":"IfStatement","src":"10091:142:18","trueBody":{"id":3753,"nodeType":"Block","src":"10153:39:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"10174:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3686,"id":3752,"nodeType":"Return","src":"10167:14:18"}]}}]},"documentation":{"id":3677,"nodeType":"StructuredDocumentation","src":"8686:616:18","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:18","nodeType":"FunctionDefinition","parameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"array","nameLocation":"9349:5:18","nodeType":"VariableDeclaration","scope":3759,"src":"9331:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3679,"nodeType":"ArrayTypeName","src":"9331:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3682,"mutability":"mutable","name":"element","nameLocation":"9364:7:18","nodeType":"VariableDeclaration","scope":3759,"src":"9356:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:18"},"returnParameters":{"id":3686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3759,"src":"9396:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:18"},"scope":4264,"src":"9307:932:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3822,"nodeType":"Block","src":"10756:709:18","statements":[{"assignments":[3771],"declarations":[{"constant":false,"id":3771,"mutability":"mutable","name":"low","nameLocation":"10774:3:18","nodeType":"VariableDeclaration","scope":3822,"src":"10766:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3773,"initialValue":{"hexValue":"30","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:18"},{"assignments":[3775],"declarations":[{"constant":false,"id":3775,"mutability":"mutable","name":"high","nameLocation":"10799:4:18","nodeType":"VariableDeclaration","scope":3822,"src":"10791:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3778,"initialValue":{"expression":{"id":3776,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"10806:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:18","memberName":"length","nodeType":"MemberAccess","src":"10806:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"10833:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3785,"nodeType":"IfStatement","src":"10829:48:18","trueBody":{"id":3784,"nodeType":"Block","src":"10844:33:18","statements":[{"expression":{"hexValue":"30","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3769,"id":3783,"nodeType":"Return","src":"10858:8:18"}]}},{"body":{"id":3818,"nodeType":"Block","src":"10906:532:18","statements":[{"assignments":[3790],"declarations":[{"constant":false,"id":3790,"mutability":"mutable","name":"mid","nameLocation":"10928:3:18","nodeType":"VariableDeclaration","scope":3818,"src":"10920:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3796,"initialValue":{"arguments":[{"id":3793,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10947:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3794,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"10952:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3791,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"10934:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7659_$","typeString":"type(library Math)"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:18","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6388,"src":"10934:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3798,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"11195:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3799,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"11202:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3797,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4039,4065,4091,4117,4143],"referencedDeclaration":4091,"src":"11182:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4515_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4515_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4514,"src":"11182:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3802,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"11215:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3816,"nodeType":"Block","src":"11385:43:18","statements":[{"expression":{"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3812,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"11403:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3813,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"11410:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3815,"nodeType":"ExpressionStatement","src":"11403:10:18"}]},"id":3817,"nodeType":"IfStatement","src":"11178:250:18","trueBody":{"id":3811,"nodeType":"Block","src":"11224:155:18","statements":[{"id":3810,"nodeType":"UncheckedBlock","src":"11301:64:18","statements":[{"expression":{"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3804,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"11333:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"11339:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3809,"nodeType":"ExpressionStatement","src":"11333:13:18"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3786,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10894:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3787,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"10900:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3819,"nodeType":"WhileStatement","src":"10887:551:18"},{"expression":{"id":3820,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"11455:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3769,"id":3821,"nodeType":"Return","src":"11448:10:18"}]},"documentation":{"id":3760,"nodeType":"StructuredDocumentation","src":"10245:412:18","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3823,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:18","nodeType":"FunctionDefinition","parameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"array","nameLocation":"10700:5:18","nodeType":"VariableDeclaration","scope":3823,"src":"10682:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3762,"nodeType":"ArrayTypeName","src":"10682:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3765,"mutability":"mutable","name":"element","nameLocation":"10715:7:18","nodeType":"VariableDeclaration","scope":3823,"src":"10707:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:18"},"returnParameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3823,"src":"10747:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:18"},"scope":4264,"src":"10662:803:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3886,"nodeType":"Block","src":"11982:709:18","statements":[{"assignments":[3835],"declarations":[{"constant":false,"id":3835,"mutability":"mutable","name":"low","nameLocation":"12000:3:18","nodeType":"VariableDeclaration","scope":3886,"src":"11992:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3837,"initialValue":{"hexValue":"30","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:18"},{"assignments":[3839],"declarations":[{"constant":false,"id":3839,"mutability":"mutable","name":"high","nameLocation":"12025:4:18","nodeType":"VariableDeclaration","scope":3886,"src":"12017:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3842,"initialValue":{"expression":{"id":3840,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"12032:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:18","memberName":"length","nodeType":"MemberAccess","src":"12032:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"12059:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3849,"nodeType":"IfStatement","src":"12055:48:18","trueBody":{"id":3848,"nodeType":"Block","src":"12070:33:18","statements":[{"expression":{"hexValue":"30","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3833,"id":3847,"nodeType":"Return","src":"12084:8:18"}]}},{"body":{"id":3882,"nodeType":"Block","src":"12132:532:18","statements":[{"assignments":[3854],"declarations":[{"constant":false,"id":3854,"mutability":"mutable","name":"mid","nameLocation":"12154:3:18","nodeType":"VariableDeclaration","scope":3882,"src":"12146:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3860,"initialValue":{"arguments":[{"id":3857,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"12173:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3858,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"12178:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3855,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"12160:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7659_$","typeString":"type(library Math)"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:18","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6388,"src":"12160:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3862,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"12421:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3863,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"12428:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3861,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4039,4065,4091,4117,4143],"referencedDeclaration":4091,"src":"12408:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4515_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4515_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4514,"src":"12408:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3866,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"12441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3880,"nodeType":"Block","src":"12499:155:18","statements":[{"id":3879,"nodeType":"UncheckedBlock","src":"12576:64:18","statements":[{"expression":{"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3873,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"12608:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3874,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"12614:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3878,"nodeType":"ExpressionStatement","src":"12608:13:18"}]}]},"id":3881,"nodeType":"IfStatement","src":"12404:250:18","trueBody":{"id":3872,"nodeType":"Block","src":"12450:43:18","statements":[{"expression":{"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3868,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"12468:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3869,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"12475:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3871,"nodeType":"ExpressionStatement","src":"12468:10:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"12120:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3851,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"12126:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3883,"nodeType":"WhileStatement","src":"12113:551:18"},{"expression":{"id":3884,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"12681:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3833,"id":3885,"nodeType":"Return","src":"12674:10:18"}]},"documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"11471:412:18","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3887,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:18","nodeType":"FunctionDefinition","parameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"array","nameLocation":"11926:5:18","nodeType":"VariableDeclaration","scope":3887,"src":"11908:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3826,"nodeType":"ArrayTypeName","src":"11908:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"element","nameLocation":"11941:7:18","nodeType":"VariableDeclaration","scope":3887,"src":"11933:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:18"},"returnParameters":{"id":3833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3887,"src":"11973:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:18"},"scope":4264,"src":"11888:803:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3949,"nodeType":"Block","src":"12875:709:18","statements":[{"assignments":[3899],"declarations":[{"constant":false,"id":3899,"mutability":"mutable","name":"low","nameLocation":"12893:3:18","nodeType":"VariableDeclaration","scope":3949,"src":"12885:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3901,"initialValue":{"hexValue":"30","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:18"},{"assignments":[3903],"declarations":[{"constant":false,"id":3903,"mutability":"mutable","name":"high","nameLocation":"12918:4:18","nodeType":"VariableDeclaration","scope":3949,"src":"12910:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3906,"initialValue":{"expression":{"id":3904,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"12925:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:18","memberName":"length","nodeType":"MemberAccess","src":"12925:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3907,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"12952:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3913,"nodeType":"IfStatement","src":"12948:48:18","trueBody":{"id":3912,"nodeType":"Block","src":"12963:33:18","statements":[{"expression":{"hexValue":"30","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3897,"id":3911,"nodeType":"Return","src":"12977:8:18"}]}},{"body":{"id":3945,"nodeType":"Block","src":"13025:532:18","statements":[{"assignments":[3918],"declarations":[{"constant":false,"id":3918,"mutability":"mutable","name":"mid","nameLocation":"13047:3:18","nodeType":"VariableDeclaration","scope":3945,"src":"13039:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3924,"initialValue":{"arguments":[{"id":3921,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"13066:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3922,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"13071:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3919,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"13053:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7659_$","typeString":"type(library Math)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:18","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6388,"src":"13053:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3926,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"13320:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3927,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"13327:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3925,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4156,4169,4182,4195,4208],"referencedDeclaration":4182,"src":"13301:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3929,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"13334:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3943,"nodeType":"Block","src":"13504:43:18","statements":[{"expression":{"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3939,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"13522:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3940,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"13529:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3942,"nodeType":"ExpressionStatement","src":"13522:10:18"}]},"id":3944,"nodeType":"IfStatement","src":"13297:250:18","trueBody":{"id":3938,"nodeType":"Block","src":"13343:155:18","statements":[{"id":3937,"nodeType":"UncheckedBlock","src":"13420:64:18","statements":[{"expression":{"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3931,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"13452:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"13458:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3936,"nodeType":"ExpressionStatement","src":"13452:13:18"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"13013:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3915,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"13019:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3946,"nodeType":"WhileStatement","src":"13006:551:18"},{"expression":{"id":3947,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"13574:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3897,"id":3948,"nodeType":"Return","src":"13567:10:18"}]},"documentation":{"id":3888,"nodeType":"StructuredDocumentation","src":"12697:74:18","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3950,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:18","nodeType":"FunctionDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"array","nameLocation":"12819:5:18","nodeType":"VariableDeclaration","scope":3950,"src":"12802:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3890,"nodeType":"ArrayTypeName","src":"12802:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"element","nameLocation":"12834:7:18","nodeType":"VariableDeclaration","scope":3950,"src":"12826:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:18"},"returnParameters":{"id":3897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3950,"src":"12866:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:18"},"scope":4264,"src":"12776:808:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4012,"nodeType":"Block","src":"13768:709:18","statements":[{"assignments":[3962],"declarations":[{"constant":false,"id":3962,"mutability":"mutable","name":"low","nameLocation":"13786:3:18","nodeType":"VariableDeclaration","scope":4012,"src":"13778:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3964,"initialValue":{"hexValue":"30","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:18"},{"assignments":[3966],"declarations":[{"constant":false,"id":3966,"mutability":"mutable","name":"high","nameLocation":"13811:4:18","nodeType":"VariableDeclaration","scope":4012,"src":"13803:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3969,"initialValue":{"expression":{"id":3967,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"13818:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:18","memberName":"length","nodeType":"MemberAccess","src":"13818:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"13845:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3976,"nodeType":"IfStatement","src":"13841:48:18","trueBody":{"id":3975,"nodeType":"Block","src":"13856:33:18","statements":[{"expression":{"hexValue":"30","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3960,"id":3974,"nodeType":"Return","src":"13870:8:18"}]}},{"body":{"id":4008,"nodeType":"Block","src":"13918:532:18","statements":[{"assignments":[3981],"declarations":[{"constant":false,"id":3981,"mutability":"mutable","name":"mid","nameLocation":"13940:3:18","nodeType":"VariableDeclaration","scope":4008,"src":"13932:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3987,"initialValue":{"arguments":[{"id":3984,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"13959:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3985,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"13964:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3982,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"13946:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7659_$","typeString":"type(library Math)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:18","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6388,"src":"13946:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3989,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"14213:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3990,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"14220:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3988,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4156,4169,4182,4195,4208],"referencedDeclaration":4182,"src":"14194:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3992,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"14227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4006,"nodeType":"Block","src":"14285:155:18","statements":[{"id":4005,"nodeType":"UncheckedBlock","src":"14362:64:18","statements":[{"expression":{"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3999,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"14394:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4000,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"14400:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4004,"nodeType":"ExpressionStatement","src":"14394:13:18"}]}]},"id":4007,"nodeType":"IfStatement","src":"14190:250:18","trueBody":{"id":3998,"nodeType":"Block","src":"14236:43:18","statements":[{"expression":{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3994,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"14254:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3995,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"14261:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3997,"nodeType":"ExpressionStatement","src":"14254:10:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3977,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"13906:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3978,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"13912:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4009,"nodeType":"WhileStatement","src":"13899:551:18"},{"expression":{"id":4010,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"14467:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3960,"id":4011,"nodeType":"Return","src":"14460:10:18"}]},"documentation":{"id":3951,"nodeType":"StructuredDocumentation","src":"13590:74:18","text":" @dev Same as {upperBound}, but with an array in memory."},"id":4013,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:18","nodeType":"FunctionDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"array","nameLocation":"13712:5:18","nodeType":"VariableDeclaration","scope":4013,"src":"13695:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3953,"nodeType":"ArrayTypeName","src":"13695:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"element","nameLocation":"13727:7:18","nodeType":"VariableDeclaration","scope":4013,"src":"13719:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:18"},"returnParameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4013,"src":"13759:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:18"},"scope":4264,"src":"13669:808:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4038,"nodeType":"Block","src":"14793:167:18","statements":[{"assignments":[4026],"declarations":[{"constant":false,"id":4026,"mutability":"mutable","name":"slot","nameLocation":"14811:4:18","nodeType":"VariableDeclaration","scope":4038,"src":"14803:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4027,"nodeType":"VariableDeclarationStatement","src":"14803:12:18"},{"AST":{"nativeSrc":"14850:40:18","nodeType":"YulBlock","src":"14850:40:18","statements":[{"nativeSrc":"14864:16:18","nodeType":"YulAssignment","src":"14864:16:18","value":{"name":"arr.slot","nativeSrc":"14872:8:18","nodeType":"YulIdentifier","src":"14872:8:18"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:18","nodeType":"YulIdentifier","src":"14864:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4017,"isOffset":false,"isSlot":true,"src":"14872:8:18","suffix":"slot","valueSize":1},{"declaration":4026,"isOffset":false,"isSlot":false,"src":"14864:4:18","valueSize":1}],"flags":["memory-safe"],"id":4028,"nodeType":"InlineAssembly","src":"14825:65:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4033,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"14932:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4029,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"14906:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:18","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"14906:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:18","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4405,"src":"14906:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:18","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4535,"src":"14906:45:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4506_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":4024,"id":4037,"nodeType":"Return","src":"14899:54:18"}]},"documentation":{"id":4014,"nodeType":"StructuredDocumentation","src":"14483:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4039,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:18","nodeType":"FunctionDefinition","parameters":{"id":4020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"arr","nameLocation":"14719:3:18","nodeType":"VariableDeclaration","scope":4039,"src":"14701:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4015,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4016,"nodeType":"ArrayTypeName","src":"14701:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4019,"mutability":"mutable","name":"pos","nameLocation":"14732:3:18","nodeType":"VariableDeclaration","scope":4039,"src":"14724:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:18"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4039,"src":"14760:31:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4022,"nodeType":"UserDefinedTypeName","pathNode":{"id":4021,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:18","14772:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":4506,"src":"14760:23:18"},"referencedDeclaration":4506,"src":"14760:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:18"},"scope":4264,"src":"14679:281:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4064,"nodeType":"Block","src":"15276:167:18","statements":[{"assignments":[4052],"declarations":[{"constant":false,"id":4052,"mutability":"mutable","name":"slot","nameLocation":"15294:4:18","nodeType":"VariableDeclaration","scope":4064,"src":"15286:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4053,"nodeType":"VariableDeclarationStatement","src":"15286:12:18"},{"AST":{"nativeSrc":"15333:40:18","nodeType":"YulBlock","src":"15333:40:18","statements":[{"nativeSrc":"15347:16:18","nodeType":"YulAssignment","src":"15347:16:18","value":{"name":"arr.slot","nativeSrc":"15355:8:18","nodeType":"YulIdentifier","src":"15355:8:18"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:18","nodeType":"YulIdentifier","src":"15347:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4043,"isOffset":false,"isSlot":true,"src":"15355:8:18","suffix":"slot","valueSize":1},{"declaration":4052,"isOffset":false,"isSlot":false,"src":"15347:4:18","valueSize":1}],"flags":["memory-safe"],"id":4054,"nodeType":"InlineAssembly","src":"15308:65:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4059,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"15415:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4055,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"15389:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:18","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"15389:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:18","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4405,"src":"15389:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:18","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4557,"src":"15389:45:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4512_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4512_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":4050,"id":4063,"nodeType":"Return","src":"15382:54:18"}]},"documentation":{"id":4040,"nodeType":"StructuredDocumentation","src":"14966:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4065,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:18","nodeType":"FunctionDefinition","parameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"arr","nameLocation":"15202:3:18","nodeType":"VariableDeclaration","scope":4065,"src":"15184:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4042,"nodeType":"ArrayTypeName","src":"15184:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"pos","nameLocation":"15215:3:18","nodeType":"VariableDeclaration","scope":4065,"src":"15207:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:18"},"returnParameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4065,"src":"15243:31:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4512_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4048,"nodeType":"UserDefinedTypeName","pathNode":{"id":4047,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:18","15255:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":4512,"src":"15243:23:18"},"referencedDeclaration":4512,"src":"15243:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4512_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:18"},"scope":4264,"src":"15162:281:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4090,"nodeType":"Block","src":"15759:167:18","statements":[{"assignments":[4078],"declarations":[{"constant":false,"id":4078,"mutability":"mutable","name":"slot","nameLocation":"15777:4:18","nodeType":"VariableDeclaration","scope":4090,"src":"15769:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4079,"nodeType":"VariableDeclarationStatement","src":"15769:12:18"},{"AST":{"nativeSrc":"15816:40:18","nodeType":"YulBlock","src":"15816:40:18","statements":[{"nativeSrc":"15830:16:18","nodeType":"YulAssignment","src":"15830:16:18","value":{"name":"arr.slot","nativeSrc":"15838:8:18","nodeType":"YulIdentifier","src":"15838:8:18"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:18","nodeType":"YulIdentifier","src":"15830:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4069,"isOffset":false,"isSlot":true,"src":"15838:8:18","suffix":"slot","valueSize":1},{"declaration":4078,"isOffset":false,"isSlot":false,"src":"15830:4:18","valueSize":1}],"flags":["memory-safe"],"id":4080,"nodeType":"InlineAssembly","src":"15791:65:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4085,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"15898:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4081,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"15872:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:18","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"15872:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:18","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4405,"src":"15872:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:18","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4568,"src":"15872:45:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4515_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4515_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":4076,"id":4089,"nodeType":"Return","src":"15865:54:18"}]},"documentation":{"id":4066,"nodeType":"StructuredDocumentation","src":"15449:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4091,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:18","nodeType":"FunctionDefinition","parameters":{"id":4072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4069,"mutability":"mutable","name":"arr","nameLocation":"15685:3:18","nodeType":"VariableDeclaration","scope":4091,"src":"15667:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4067,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4068,"nodeType":"ArrayTypeName","src":"15667:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4071,"mutability":"mutable","name":"pos","nameLocation":"15698:3:18","nodeType":"VariableDeclaration","scope":4091,"src":"15690:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:18"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4091,"src":"15726:31:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4515_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4074,"nodeType":"UserDefinedTypeName","pathNode":{"id":4073,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:18","15738:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":4515,"src":"15726:23:18"},"referencedDeclaration":4515,"src":"15726:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4515_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:18"},"scope":4264,"src":"15645:281:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4116,"nodeType":"Block","src":"16238:165:18","statements":[{"assignments":[4104],"declarations":[{"constant":false,"id":4104,"mutability":"mutable","name":"slot","nameLocation":"16256:4:18","nodeType":"VariableDeclaration","scope":4116,"src":"16248:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16248:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4105,"nodeType":"VariableDeclarationStatement","src":"16248:12:18"},{"AST":{"nativeSrc":"16295:40:18","nodeType":"YulBlock","src":"16295:40:18","statements":[{"nativeSrc":"16309:16:18","nodeType":"YulAssignment","src":"16309:16:18","value":{"name":"arr.slot","nativeSrc":"16317:8:18","nodeType":"YulIdentifier","src":"16317:8:18"},"variableNames":[{"name":"slot","nativeSrc":"16309:4:18","nodeType":"YulIdentifier","src":"16309:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4095,"isOffset":false,"isSlot":true,"src":"16317:8:18","suffix":"slot","valueSize":1},{"declaration":4104,"isOffset":false,"isSlot":false,"src":"16309:4:18","valueSize":1}],"flags":["memory-safe"],"id":4106,"nodeType":"InlineAssembly","src":"16270:65:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4111,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"16377:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4107,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"16351:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16356:11:18","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"16351:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16370:6:18","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4405,"src":"16351:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16382:12:18","memberName":"getBytesSlot","nodeType":"MemberAccess","referencedDeclaration":4612,"src":"16351:43:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BytesSlot_$4524_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BytesSlot storage pointer)"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4524_storage_ptr","typeString":"struct StorageSlot.BytesSlot storage pointer"}},"functionReturnParameters":4102,"id":4115,"nodeType":"Return","src":"16344:52:18"}]},"documentation":{"id":4092,"nodeType":"StructuredDocumentation","src":"15932:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4117,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16137:12:18","nodeType":"FunctionDefinition","parameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"arr","nameLocation":"16166:3:18","nodeType":"VariableDeclaration","scope":4117,"src":"16150:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4093,"name":"bytes","nodeType":"ElementaryTypeName","src":"16150:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4094,"nodeType":"ArrayTypeName","src":"16150:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4097,"mutability":"mutable","name":"pos","nameLocation":"16179:3:18","nodeType":"VariableDeclaration","scope":4117,"src":"16171:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"16171:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16149:34:18"},"returnParameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"16207:29:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4524_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4100,"nodeType":"UserDefinedTypeName","pathNode":{"id":4099,"name":"StorageSlot.BytesSlot","nameLocations":["16207:11:18","16219:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":4524,"src":"16207:21:18"},"referencedDeclaration":4524,"src":"16207:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4524_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"16206:31:18"},"scope":4264,"src":"16128:275:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4142,"nodeType":"Block","src":"16717:166:18","statements":[{"assignments":[4130],"declarations":[{"constant":false,"id":4130,"mutability":"mutable","name":"slot","nameLocation":"16735:4:18","nodeType":"VariableDeclaration","scope":4142,"src":"16727:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16727:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4131,"nodeType":"VariableDeclarationStatement","src":"16727:12:18"},{"AST":{"nativeSrc":"16774:40:18","nodeType":"YulBlock","src":"16774:40:18","statements":[{"nativeSrc":"16788:16:18","nodeType":"YulAssignment","src":"16788:16:18","value":{"name":"arr.slot","nativeSrc":"16796:8:18","nodeType":"YulIdentifier","src":"16796:8:18"},"variableNames":[{"name":"slot","nativeSrc":"16788:4:18","nodeType":"YulIdentifier","src":"16788:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4121,"isOffset":false,"isSlot":true,"src":"16796:8:18","suffix":"slot","valueSize":1},{"declaration":4130,"isOffset":false,"isSlot":false,"src":"16788:4:18","valueSize":1}],"flags":["memory-safe"],"id":4132,"nodeType":"InlineAssembly","src":"16749:65:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4137,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"16856:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4133,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"16830:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16835:11:18","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"16830:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16849:6:18","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4405,"src":"16830:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16861:13:18","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"16830:44:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_StringSlot_$4521_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4521_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"functionReturnParameters":4128,"id":4141,"nodeType":"Return","src":"16823:53:18"}]},"documentation":{"id":4118,"nodeType":"StructuredDocumentation","src":"16409:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16614:12:18","nodeType":"FunctionDefinition","parameters":{"id":4124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4121,"mutability":"mutable","name":"arr","nameLocation":"16644:3:18","nodeType":"VariableDeclaration","scope":4143,"src":"16627:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4119,"name":"string","nodeType":"ElementaryTypeName","src":"16627:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4120,"nodeType":"ArrayTypeName","src":"16627:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4123,"mutability":"mutable","name":"pos","nameLocation":"16657:3:18","nodeType":"VariableDeclaration","scope":4143,"src":"16649:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4122,"name":"uint256","nodeType":"ElementaryTypeName","src":"16649:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16626:35:18"},"returnParameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4143,"src":"16685:30:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4521_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4126,"nodeType":"UserDefinedTypeName","pathNode":{"id":4125,"name":"StorageSlot.StringSlot","nameLocations":["16685:11:18","16697:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":4521,"src":"16685:22:18"},"referencedDeclaration":4521,"src":"16685:22:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4521_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"16684:32:18"},"scope":4264,"src":"16605:278:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4155,"nodeType":"Block","src":"17184:98:18","statements":[{"AST":{"nativeSrc":"17203:73:18","nodeType":"YulBlock","src":"17203:73:18","statements":[{"nativeSrc":"17217:49:18","nodeType":"YulAssignment","src":"17217:49:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17238:3:18","nodeType":"YulIdentifier","src":"17238:3:18"},{"kind":"number","nativeSrc":"17243:4:18","nodeType":"YulLiteral","src":"17243:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17234:3:18","nodeType":"YulIdentifier","src":"17234:3:18"},"nativeSrc":"17234:14:18","nodeType":"YulFunctionCall","src":"17234:14:18"},{"arguments":[{"name":"pos","nativeSrc":"17254:3:18","nodeType":"YulIdentifier","src":"17254:3:18"},{"kind":"number","nativeSrc":"17259:4:18","nodeType":"YulLiteral","src":"17259:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17250:3:18","nodeType":"YulIdentifier","src":"17250:3:18"},"nativeSrc":"17250:14:18","nodeType":"YulFunctionCall","src":"17250:14:18"}],"functionName":{"name":"add","nativeSrc":"17230:3:18","nodeType":"YulIdentifier","src":"17230:3:18"},"nativeSrc":"17230:35:18","nodeType":"YulFunctionCall","src":"17230:35:18"}],"functionName":{"name":"mload","nativeSrc":"17224:5:18","nodeType":"YulIdentifier","src":"17224:5:18"},"nativeSrc":"17224:42:18","nodeType":"YulFunctionCall","src":"17224:42:18"},"variableNames":[{"name":"res","nativeSrc":"17217:3:18","nodeType":"YulIdentifier","src":"17217:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4147,"isOffset":false,"isSlot":false,"src":"17238:3:18","valueSize":1},{"declaration":4149,"isOffset":false,"isSlot":false,"src":"17254:3:18","valueSize":1},{"declaration":4152,"isOffset":false,"isSlot":false,"src":"17217:3:18","valueSize":1}],"id":4154,"nodeType":"InlineAssembly","src":"17194:82:18"}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"16889:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4156,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17094:18:18","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"arr","nameLocation":"17130:3:18","nodeType":"VariableDeclaration","scope":4156,"src":"17113:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4145,"name":"address","nodeType":"ElementaryTypeName","src":"17113:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4146,"nodeType":"ArrayTypeName","src":"17113:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"pos","nameLocation":"17143:3:18","nodeType":"VariableDeclaration","scope":4156,"src":"17135:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"17135:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17112:35:18"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"res","nameLocation":"17179:3:18","nodeType":"VariableDeclaration","scope":4156,"src":"17171:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4151,"name":"address","nodeType":"ElementaryTypeName","src":"17171:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17170:13:18"},"scope":4264,"src":"17085:197:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4168,"nodeType":"Block","src":"17583:98:18","statements":[{"AST":{"nativeSrc":"17602:73:18","nodeType":"YulBlock","src":"17602:73:18","statements":[{"nativeSrc":"17616:49:18","nodeType":"YulAssignment","src":"17616:49:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17637:3:18","nodeType":"YulIdentifier","src":"17637:3:18"},{"kind":"number","nativeSrc":"17642:4:18","nodeType":"YulLiteral","src":"17642:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17633:3:18","nodeType":"YulIdentifier","src":"17633:3:18"},"nativeSrc":"17633:14:18","nodeType":"YulFunctionCall","src":"17633:14:18"},{"arguments":[{"name":"pos","nativeSrc":"17653:3:18","nodeType":"YulIdentifier","src":"17653:3:18"},{"kind":"number","nativeSrc":"17658:4:18","nodeType":"YulLiteral","src":"17658:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17649:3:18","nodeType":"YulIdentifier","src":"17649:3:18"},"nativeSrc":"17649:14:18","nodeType":"YulFunctionCall","src":"17649:14:18"}],"functionName":{"name":"add","nativeSrc":"17629:3:18","nodeType":"YulIdentifier","src":"17629:3:18"},"nativeSrc":"17629:35:18","nodeType":"YulFunctionCall","src":"17629:35:18"}],"functionName":{"name":"mload","nativeSrc":"17623:5:18","nodeType":"YulIdentifier","src":"17623:5:18"},"nativeSrc":"17623:42:18","nodeType":"YulFunctionCall","src":"17623:42:18"},"variableNames":[{"name":"res","nativeSrc":"17616:3:18","nodeType":"YulIdentifier","src":"17616:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4160,"isOffset":false,"isSlot":false,"src":"17637:3:18","valueSize":1},{"declaration":4162,"isOffset":false,"isSlot":false,"src":"17653:3:18","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":false,"src":"17616:3:18","valueSize":1}],"id":4167,"nodeType":"InlineAssembly","src":"17593:82:18"}]},"documentation":{"id":4157,"nodeType":"StructuredDocumentation","src":"17288:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4169,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17493:18:18","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"arr","nameLocation":"17529:3:18","nodeType":"VariableDeclaration","scope":4169,"src":"17512:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17512:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4159,"nodeType":"ArrayTypeName","src":"17512:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"pos","nameLocation":"17542:3:18","nodeType":"VariableDeclaration","scope":4169,"src":"17534:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17511:35:18"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"res","nameLocation":"17578:3:18","nodeType":"VariableDeclaration","scope":4169,"src":"17570:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17570:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17569:13:18"},"scope":4264,"src":"17484:197:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4181,"nodeType":"Block","src":"17982:98:18","statements":[{"AST":{"nativeSrc":"18001:73:18","nodeType":"YulBlock","src":"18001:73:18","statements":[{"nativeSrc":"18015:49:18","nodeType":"YulAssignment","src":"18015:49:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18036:3:18","nodeType":"YulIdentifier","src":"18036:3:18"},{"kind":"number","nativeSrc":"18041:4:18","nodeType":"YulLiteral","src":"18041:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18032:3:18","nodeType":"YulIdentifier","src":"18032:3:18"},"nativeSrc":"18032:14:18","nodeType":"YulFunctionCall","src":"18032:14:18"},{"arguments":[{"name":"pos","nativeSrc":"18052:3:18","nodeType":"YulIdentifier","src":"18052:3:18"},{"kind":"number","nativeSrc":"18057:4:18","nodeType":"YulLiteral","src":"18057:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18048:3:18","nodeType":"YulIdentifier","src":"18048:3:18"},"nativeSrc":"18048:14:18","nodeType":"YulFunctionCall","src":"18048:14:18"}],"functionName":{"name":"add","nativeSrc":"18028:3:18","nodeType":"YulIdentifier","src":"18028:3:18"},"nativeSrc":"18028:35:18","nodeType":"YulFunctionCall","src":"18028:35:18"}],"functionName":{"name":"mload","nativeSrc":"18022:5:18","nodeType":"YulIdentifier","src":"18022:5:18"},"nativeSrc":"18022:42:18","nodeType":"YulFunctionCall","src":"18022:42:18"},"variableNames":[{"name":"res","nativeSrc":"18015:3:18","nodeType":"YulIdentifier","src":"18015:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4173,"isOffset":false,"isSlot":false,"src":"18036:3:18","valueSize":1},{"declaration":4175,"isOffset":false,"isSlot":false,"src":"18052:3:18","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"18015:3:18","valueSize":1}],"id":4180,"nodeType":"InlineAssembly","src":"17992:82:18"}]},"documentation":{"id":4170,"nodeType":"StructuredDocumentation","src":"17687:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4182,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17892:18:18","nodeType":"FunctionDefinition","parameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"arr","nameLocation":"17928:3:18","nodeType":"VariableDeclaration","scope":4182,"src":"17911:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"17911:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4172,"nodeType":"ArrayTypeName","src":"17911:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4175,"mutability":"mutable","name":"pos","nameLocation":"17941:3:18","nodeType":"VariableDeclaration","scope":4182,"src":"17933:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17910:35:18"},"returnParameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4178,"mutability":"mutable","name":"res","nameLocation":"17977:3:18","nodeType":"VariableDeclaration","scope":4182,"src":"17969:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"17969:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17968:13:18"},"scope":4264,"src":"17883:197:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4194,"nodeType":"Block","src":"18384:98:18","statements":[{"AST":{"nativeSrc":"18403:73:18","nodeType":"YulBlock","src":"18403:73:18","statements":[{"nativeSrc":"18417:49:18","nodeType":"YulAssignment","src":"18417:49:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18438:3:18","nodeType":"YulIdentifier","src":"18438:3:18"},{"kind":"number","nativeSrc":"18443:4:18","nodeType":"YulLiteral","src":"18443:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18434:3:18","nodeType":"YulIdentifier","src":"18434:3:18"},"nativeSrc":"18434:14:18","nodeType":"YulFunctionCall","src":"18434:14:18"},{"arguments":[{"name":"pos","nativeSrc":"18454:3:18","nodeType":"YulIdentifier","src":"18454:3:18"},{"kind":"number","nativeSrc":"18459:4:18","nodeType":"YulLiteral","src":"18459:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18450:3:18","nodeType":"YulIdentifier","src":"18450:3:18"},"nativeSrc":"18450:14:18","nodeType":"YulFunctionCall","src":"18450:14:18"}],"functionName":{"name":"add","nativeSrc":"18430:3:18","nodeType":"YulIdentifier","src":"18430:3:18"},"nativeSrc":"18430:35:18","nodeType":"YulFunctionCall","src":"18430:35:18"}],"functionName":{"name":"mload","nativeSrc":"18424:5:18","nodeType":"YulIdentifier","src":"18424:5:18"},"nativeSrc":"18424:42:18","nodeType":"YulFunctionCall","src":"18424:42:18"},"variableNames":[{"name":"res","nativeSrc":"18417:3:18","nodeType":"YulIdentifier","src":"18417:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4186,"isOffset":false,"isSlot":false,"src":"18438:3:18","valueSize":1},{"declaration":4188,"isOffset":false,"isSlot":false,"src":"18454:3:18","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"18417:3:18","valueSize":1}],"id":4193,"nodeType":"InlineAssembly","src":"18394:82:18"}]},"documentation":{"id":4183,"nodeType":"StructuredDocumentation","src":"18086:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4195,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18291:18:18","nodeType":"FunctionDefinition","parameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"arr","nameLocation":"18325:3:18","nodeType":"VariableDeclaration","scope":4195,"src":"18310:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4184,"name":"bytes","nodeType":"ElementaryTypeName","src":"18310:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4185,"nodeType":"ArrayTypeName","src":"18310:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4188,"mutability":"mutable","name":"pos","nameLocation":"18338:3:18","nodeType":"VariableDeclaration","scope":4195,"src":"18330:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"18330:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18309:33:18"},"returnParameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"res","nameLocation":"18379:3:18","nodeType":"VariableDeclaration","scope":4195,"src":"18366:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4190,"name":"bytes","nodeType":"ElementaryTypeName","src":"18366:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18365:18:18"},"scope":4264,"src":"18282:200:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4207,"nodeType":"Block","src":"18788:98:18","statements":[{"AST":{"nativeSrc":"18807:73:18","nodeType":"YulBlock","src":"18807:73:18","statements":[{"nativeSrc":"18821:49:18","nodeType":"YulAssignment","src":"18821:49:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18842:3:18","nodeType":"YulIdentifier","src":"18842:3:18"},{"kind":"number","nativeSrc":"18847:4:18","nodeType":"YulLiteral","src":"18847:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18838:3:18","nodeType":"YulIdentifier","src":"18838:3:18"},"nativeSrc":"18838:14:18","nodeType":"YulFunctionCall","src":"18838:14:18"},{"arguments":[{"name":"pos","nativeSrc":"18858:3:18","nodeType":"YulIdentifier","src":"18858:3:18"},{"kind":"number","nativeSrc":"18863:4:18","nodeType":"YulLiteral","src":"18863:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18854:3:18","nodeType":"YulIdentifier","src":"18854:3:18"},"nativeSrc":"18854:14:18","nodeType":"YulFunctionCall","src":"18854:14:18"}],"functionName":{"name":"add","nativeSrc":"18834:3:18","nodeType":"YulIdentifier","src":"18834:3:18"},"nativeSrc":"18834:35:18","nodeType":"YulFunctionCall","src":"18834:35:18"}],"functionName":{"name":"mload","nativeSrc":"18828:5:18","nodeType":"YulIdentifier","src":"18828:5:18"},"nativeSrc":"18828:42:18","nodeType":"YulFunctionCall","src":"18828:42:18"},"variableNames":[{"name":"res","nativeSrc":"18821:3:18","nodeType":"YulIdentifier","src":"18821:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4199,"isOffset":false,"isSlot":false,"src":"18842:3:18","valueSize":1},{"declaration":4201,"isOffset":false,"isSlot":false,"src":"18858:3:18","valueSize":1},{"declaration":4204,"isOffset":false,"isSlot":false,"src":"18821:3:18","valueSize":1}],"id":4206,"nodeType":"InlineAssembly","src":"18798:82:18"}]},"documentation":{"id":4196,"nodeType":"StructuredDocumentation","src":"18488:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4208,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18693:18:18","nodeType":"FunctionDefinition","parameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"arr","nameLocation":"18728:3:18","nodeType":"VariableDeclaration","scope":4208,"src":"18712:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4197,"name":"string","nodeType":"ElementaryTypeName","src":"18712:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4198,"nodeType":"ArrayTypeName","src":"18712:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"pos","nameLocation":"18741:3:18","nodeType":"VariableDeclaration","scope":4208,"src":"18733:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"18733:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18711:34:18"},"returnParameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"res","nameLocation":"18783:3:18","nodeType":"VariableDeclaration","scope":4208,"src":"18769:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4203,"name":"string","nodeType":"ElementaryTypeName","src":"18769:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18768:19:18"},"scope":4264,"src":"18684:202:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4218,"nodeType":"Block","src":"19202:88:18","statements":[{"AST":{"nativeSrc":"19237:47:18","nodeType":"YulBlock","src":"19237:47:18","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19258:10:18","nodeType":"YulIdentifier","src":"19258:10:18"},{"name":"len","nativeSrc":"19270:3:18","nodeType":"YulIdentifier","src":"19270:3:18"}],"functionName":{"name":"sstore","nativeSrc":"19251:6:18","nodeType":"YulIdentifier","src":"19251:6:18"},"nativeSrc":"19251:23:18","nodeType":"YulFunctionCall","src":"19251:23:18"},"nativeSrc":"19251:23:18","nodeType":"YulExpressionStatement","src":"19251:23:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4212,"isOffset":false,"isSlot":true,"src":"19258:10:18","suffix":"slot","valueSize":1},{"declaration":4214,"isOffset":false,"isSlot":false,"src":"19270:3:18","valueSize":1}],"flags":["memory-safe"],"id":4217,"nodeType":"InlineAssembly","src":"19212:72:18"}]},"documentation":{"id":4209,"nodeType":"StructuredDocumentation","src":"18892:233:18","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4219,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19139:15:18","nodeType":"FunctionDefinition","parameters":{"id":4215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"array","nameLocation":"19173:5:18","nodeType":"VariableDeclaration","scope":4219,"src":"19155:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4210,"name":"address","nodeType":"ElementaryTypeName","src":"19155:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4211,"nodeType":"ArrayTypeName","src":"19155:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4214,"mutability":"mutable","name":"len","nameLocation":"19188:3:18","nodeType":"VariableDeclaration","scope":4219,"src":"19180:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4213,"name":"uint256","nodeType":"ElementaryTypeName","src":"19180:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19154:38:18"},"returnParameters":{"id":4216,"nodeType":"ParameterList","parameters":[],"src":"19202:0:18"},"scope":4264,"src":"19130:160:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4229,"nodeType":"Block","src":"19606:88:18","statements":[{"AST":{"nativeSrc":"19641:47:18","nodeType":"YulBlock","src":"19641:47:18","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19662:10:18","nodeType":"YulIdentifier","src":"19662:10:18"},{"name":"len","nativeSrc":"19674:3:18","nodeType":"YulIdentifier","src":"19674:3:18"}],"functionName":{"name":"sstore","nativeSrc":"19655:6:18","nodeType":"YulIdentifier","src":"19655:6:18"},"nativeSrc":"19655:23:18","nodeType":"YulFunctionCall","src":"19655:23:18"},"nativeSrc":"19655:23:18","nodeType":"YulExpressionStatement","src":"19655:23:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4223,"isOffset":false,"isSlot":true,"src":"19662:10:18","suffix":"slot","valueSize":1},{"declaration":4225,"isOffset":false,"isSlot":false,"src":"19674:3:18","valueSize":1}],"flags":["memory-safe"],"id":4228,"nodeType":"InlineAssembly","src":"19616:72:18"}]},"documentation":{"id":4220,"nodeType":"StructuredDocumentation","src":"19296:233:18","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4230,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19543:15:18","nodeType":"FunctionDefinition","parameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"array","nameLocation":"19577:5:18","nodeType":"VariableDeclaration","scope":4230,"src":"19559:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19559:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4222,"nodeType":"ArrayTypeName","src":"19559:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4225,"mutability":"mutable","name":"len","nameLocation":"19592:3:18","nodeType":"VariableDeclaration","scope":4230,"src":"19584:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"19584:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19558:38:18"},"returnParameters":{"id":4227,"nodeType":"ParameterList","parameters":[],"src":"19606:0:18"},"scope":4264,"src":"19534:160:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4240,"nodeType":"Block","src":"20010:88:18","statements":[{"AST":{"nativeSrc":"20045:47:18","nodeType":"YulBlock","src":"20045:47:18","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20066:10:18","nodeType":"YulIdentifier","src":"20066:10:18"},{"name":"len","nativeSrc":"20078:3:18","nodeType":"YulIdentifier","src":"20078:3:18"}],"functionName":{"name":"sstore","nativeSrc":"20059:6:18","nodeType":"YulIdentifier","src":"20059:6:18"},"nativeSrc":"20059:23:18","nodeType":"YulFunctionCall","src":"20059:23:18"},"nativeSrc":"20059:23:18","nodeType":"YulExpressionStatement","src":"20059:23:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4234,"isOffset":false,"isSlot":true,"src":"20066:10:18","suffix":"slot","valueSize":1},{"declaration":4236,"isOffset":false,"isSlot":false,"src":"20078:3:18","valueSize":1}],"flags":["memory-safe"],"id":4239,"nodeType":"InlineAssembly","src":"20020:72:18"}]},"documentation":{"id":4231,"nodeType":"StructuredDocumentation","src":"19700:233:18","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4241,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19947:15:18","nodeType":"FunctionDefinition","parameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4234,"mutability":"mutable","name":"array","nameLocation":"19981:5:18","nodeType":"VariableDeclaration","scope":4241,"src":"19963:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"19963:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4233,"nodeType":"ArrayTypeName","src":"19963:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4236,"mutability":"mutable","name":"len","nameLocation":"19996:3:18","nodeType":"VariableDeclaration","scope":4241,"src":"19988:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"19988:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19962:38:18"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[],"src":"20010:0:18"},"scope":4264,"src":"19938:160:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4251,"nodeType":"Block","src":"20412:88:18","statements":[{"AST":{"nativeSrc":"20447:47:18","nodeType":"YulBlock","src":"20447:47:18","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20468:10:18","nodeType":"YulIdentifier","src":"20468:10:18"},{"name":"len","nativeSrc":"20480:3:18","nodeType":"YulIdentifier","src":"20480:3:18"}],"functionName":{"name":"sstore","nativeSrc":"20461:6:18","nodeType":"YulIdentifier","src":"20461:6:18"},"nativeSrc":"20461:23:18","nodeType":"YulFunctionCall","src":"20461:23:18"},"nativeSrc":"20461:23:18","nodeType":"YulExpressionStatement","src":"20461:23:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4245,"isOffset":false,"isSlot":true,"src":"20468:10:18","suffix":"slot","valueSize":1},{"declaration":4247,"isOffset":false,"isSlot":false,"src":"20480:3:18","valueSize":1}],"flags":["memory-safe"],"id":4250,"nodeType":"InlineAssembly","src":"20422:72:18"}]},"documentation":{"id":4242,"nodeType":"StructuredDocumentation","src":"20104:233:18","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4252,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20351:15:18","nodeType":"FunctionDefinition","parameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"array","nameLocation":"20383:5:18","nodeType":"VariableDeclaration","scope":4252,"src":"20367:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4243,"name":"bytes","nodeType":"ElementaryTypeName","src":"20367:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4244,"nodeType":"ArrayTypeName","src":"20367:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4247,"mutability":"mutable","name":"len","nameLocation":"20398:3:18","nodeType":"VariableDeclaration","scope":4252,"src":"20390:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4246,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20366:36:18"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[],"src":"20412:0:18"},"scope":4264,"src":"20342:158:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4262,"nodeType":"Block","src":"20815:88:18","statements":[{"AST":{"nativeSrc":"20850:47:18","nodeType":"YulBlock","src":"20850:47:18","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20871:10:18","nodeType":"YulIdentifier","src":"20871:10:18"},{"name":"len","nativeSrc":"20883:3:18","nodeType":"YulIdentifier","src":"20883:3:18"}],"functionName":{"name":"sstore","nativeSrc":"20864:6:18","nodeType":"YulIdentifier","src":"20864:6:18"},"nativeSrc":"20864:23:18","nodeType":"YulFunctionCall","src":"20864:23:18"},"nativeSrc":"20864:23:18","nodeType":"YulExpressionStatement","src":"20864:23:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4256,"isOffset":false,"isSlot":true,"src":"20871:10:18","suffix":"slot","valueSize":1},{"declaration":4258,"isOffset":false,"isSlot":false,"src":"20883:3:18","valueSize":1}],"flags":["memory-safe"],"id":4261,"nodeType":"InlineAssembly","src":"20825:72:18"}]},"documentation":{"id":4253,"nodeType":"StructuredDocumentation","src":"20506:233:18","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4263,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20753:15:18","nodeType":"FunctionDefinition","parameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"array","nameLocation":"20786:5:18","nodeType":"VariableDeclaration","scope":4263,"src":"20769:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4254,"name":"string","nodeType":"ElementaryTypeName","src":"20769:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4255,"nodeType":"ArrayTypeName","src":"20769:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"len","nameLocation":"20801:3:18","nodeType":"VariableDeclaration","scope":4263,"src":"20793:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"20793:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20768:37:18"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[],"src":"20815:0:18"},"scope":4264,"src":"20744:159:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4265,"src":"459:20446:18","usedErrors":[],"usedEvents":[]}],"src":"183:20723:18"},"id":18},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[4296]},"id":4297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4266,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":4267,"nodeType":"StructuredDocumentation","src":"131:92:19","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":4296,"linearizedBaseContracts":[4296],"name":"Comparators","nameLocation":"232:11:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":4280,"nodeType":"Block","src":"313:29:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"330:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"334:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4275,"id":4279,"nodeType":"Return","src":"323:12:19"}]},"id":4281,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:19","nodeType":"FunctionDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"a","nameLocation":"270:1:19","nodeType":"VariableDeclaration","scope":4281,"src":"262:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"b","nameLocation":"281:1:19","nodeType":"VariableDeclaration","scope":4281,"src":"273:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:19"},"returnParameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4281,"src":"307:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4273,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:19"},"scope":4296,"src":"250:92:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4294,"nodeType":"Block","src":"411:29:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"428:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"432:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4289,"id":4293,"nodeType":"Return","src":"421:12:19"}]},"id":4295,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:19","nodeType":"FunctionDefinition","parameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"a","nameLocation":"368:1:19","nodeType":"VariableDeclaration","scope":4295,"src":"360:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4285,"mutability":"mutable","name":"b","nameLocation":"379:1:19","nodeType":"VariableDeclaration","scope":4295,"src":"371:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:19"},"returnParameters":{"id":4289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4295,"src":"405:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4287,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:19"},"scope":4296,"src":"348:92:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4297,"src":"224:218:19","usedErrors":[],"usedEvents":[]}],"src":"105:338:19"},"id":19},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[4318]},"id":4319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4298,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":4299,"nodeType":"StructuredDocumentation","src":"126:284:20","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":4318,"linearizedBaseContracts":[4318],"name":"Errors","nameLocation":"419:6:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4300,"nodeType":"StructuredDocumentation","src":"432:94:20","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":4306,"name":"InsufficientBalance","nameLocation":"537:19:20","nodeType":"ErrorDefinition","parameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"balance","nameLocation":"565:7:20","nodeType":"VariableDeclaration","scope":4306,"src":"557:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4304,"mutability":"mutable","name":"needed","nameLocation":"582:6:20","nodeType":"VariableDeclaration","scope":4306,"src":"574:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:20"},"src":"531:59:20"},{"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"596:89:20","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":4309,"name":"FailedCall","nameLocation":"696:10:20","nodeType":"ErrorDefinition","parameters":{"id":4308,"nodeType":"ParameterList","parameters":[],"src":"706:2:20"},"src":"690:19:20"},{"documentation":{"id":4310,"nodeType":"StructuredDocumentation","src":"715:46:20","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":4312,"name":"FailedDeployment","nameLocation":"772:16:20","nodeType":"ErrorDefinition","parameters":{"id":4311,"nodeType":"ParameterList","parameters":[],"src":"788:2:20"},"src":"766:25:20"},{"documentation":{"id":4313,"nodeType":"StructuredDocumentation","src":"797:58:20","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":4317,"name":"MissingPrecompile","nameLocation":"866:17:20","nodeType":"ErrorDefinition","parameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4317,"src":"884:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4314,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:20"},"src":"860:33:20"}],"scope":4319,"src":"411:484:20","usedErrors":[4306,4309,4312,4317],"usedEvents":[]}],"src":"100:796:20"},"id":20},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[4370]},"id":4371,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4320,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":4321,"nodeType":"StructuredDocumentation","src":"125:489:21","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":4370,"linearizedBaseContracts":[4370],"name":"Panic","nameLocation":"665:5:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":4322,"nodeType":"StructuredDocumentation","src":"677:36:21","text":"@dev generic / unspecified error"},"id":4325,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:21","nodeType":"VariableDeclaration","scope":4370,"src":"718:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":4326,"nodeType":"StructuredDocumentation","src":"764:37:21","text":"@dev used by the assert() builtin"},"id":4329,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:21","nodeType":"VariableDeclaration","scope":4370,"src":"806:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":4330,"nodeType":"StructuredDocumentation","src":"851:41:21","text":"@dev arithmetic underflow or overflow"},"id":4333,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:21","nodeType":"VariableDeclaration","scope":4370,"src":"897:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:21","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":4334,"nodeType":"StructuredDocumentation","src":"950:35:21","text":"@dev division or modulo by zero"},"id":4337,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:21","nodeType":"VariableDeclaration","scope":4370,"src":"990:49:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":4338,"nodeType":"StructuredDocumentation","src":"1045:30:21","text":"@dev enum conversion error"},"id":4341,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:21","nodeType":"VariableDeclaration","scope":4370,"src":"1080:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:21","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":4342,"nodeType":"StructuredDocumentation","src":"1140:36:21","text":"@dev invalid encoding in storage"},"id":4345,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:21","nodeType":"VariableDeclaration","scope":4370,"src":"1181:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:21","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":4346,"nodeType":"StructuredDocumentation","src":"1242:24:21","text":"@dev empty array pop"},"id":4349,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:21","nodeType":"VariableDeclaration","scope":4370,"src":"1271:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:21","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":4350,"nodeType":"StructuredDocumentation","src":"1325:35:21","text":"@dev array out of bounds access"},"id":4353,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:21","nodeType":"VariableDeclaration","scope":4370,"src":"1365:52:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:21","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":4354,"nodeType":"StructuredDocumentation","src":"1423:65:21","text":"@dev resource error (too large allocation or too large array)"},"id":4357,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:21","nodeType":"VariableDeclaration","scope":4370,"src":"1493:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:21","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"1546:42:21","text":"@dev calling invalid internal function"},"id":4361,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:21","nodeType":"VariableDeclaration","scope":4370,"src":"1593:58:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:21","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":4368,"nodeType":"Block","src":"1819:151:21","statements":[{"AST":{"nativeSrc":"1854:110:21","nodeType":"YulBlock","src":"1854:110:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:21","nodeType":"YulLiteral","src":"1875:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:21","nodeType":"YulLiteral","src":"1881:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:21","nodeType":"YulIdentifier","src":"1868:6:21"},"nativeSrc":"1868:24:21","nodeType":"YulFunctionCall","src":"1868:24:21"},"nativeSrc":"1868:24:21","nodeType":"YulExpressionStatement","src":"1868:24:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:21","nodeType":"YulLiteral","src":"1912:4:21","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:21","nodeType":"YulIdentifier","src":"1918:4:21"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:21","nodeType":"YulIdentifier","src":"1905:6:21"},"nativeSrc":"1905:18:21","nodeType":"YulFunctionCall","src":"1905:18:21"},"nativeSrc":"1905:18:21","nodeType":"YulExpressionStatement","src":"1905:18:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:21","nodeType":"YulLiteral","src":"1943:4:21","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:21","nodeType":"YulLiteral","src":"1949:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:21","nodeType":"YulIdentifier","src":"1936:6:21"},"nativeSrc":"1936:18:21","nodeType":"YulFunctionCall","src":"1936:18:21"},"nativeSrc":"1936:18:21","nodeType":"YulExpressionStatement","src":"1936:18:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":4364,"isOffset":false,"isSlot":false,"src":"1918:4:21","valueSize":1}],"flags":["memory-safe"],"id":4367,"nodeType":"InlineAssembly","src":"1829:135:21"}]},"documentation":{"id":4362,"nodeType":"StructuredDocumentation","src":"1658:113:21","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":4369,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:21","nodeType":"FunctionDefinition","parameters":{"id":4365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4364,"mutability":"mutable","name":"code","nameLocation":"1799:4:21","nodeType":"VariableDeclaration","scope":4369,"src":"1791:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:21"},"returnParameters":{"id":4366,"nodeType":"ParameterList","parameters":[],"src":"1819:0:21"},"scope":4370,"src":"1776:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4371,"src":"657:1315:21","usedErrors":[],"usedEvents":[]}],"src":"99:1874:21"},"id":21},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4500]},"id":4501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4372,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":4373,"nodeType":"StructuredDocumentation","src":"225:1373:22","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4500,"linearizedBaseContracts":[4500],"name":"SlotDerivation","nameLocation":"1607:14:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":4382,"nodeType":"Block","src":"1790:194:22","statements":[{"AST":{"nativeSrc":"1825:153:22","nodeType":"YulBlock","src":"1825:153:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:22","nodeType":"YulLiteral","src":"1846:4:22","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:22","nodeType":"YulIdentifier","src":"1870:9:22"},{"kind":"number","nativeSrc":"1881:4:22","nodeType":"YulLiteral","src":"1881:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:22","nodeType":"YulIdentifier","src":"1866:3:22"},"nativeSrc":"1866:20:22","nodeType":"YulFunctionCall","src":"1866:20:22"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:22","nodeType":"YulIdentifier","src":"1894:9:22"}],"functionName":{"name":"mload","nativeSrc":"1888:5:22","nodeType":"YulIdentifier","src":"1888:5:22"},"nativeSrc":"1888:16:22","nodeType":"YulFunctionCall","src":"1888:16:22"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:22","nodeType":"YulIdentifier","src":"1856:9:22"},"nativeSrc":"1856:49:22","nodeType":"YulFunctionCall","src":"1856:49:22"},{"kind":"number","nativeSrc":"1907:1:22","nodeType":"YulLiteral","src":"1907:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:22","nodeType":"YulIdentifier","src":"1852:3:22"},"nativeSrc":"1852:57:22","nodeType":"YulFunctionCall","src":"1852:57:22"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:22","nodeType":"YulIdentifier","src":"1839:6:22"},"nativeSrc":"1839:71:22","nodeType":"YulFunctionCall","src":"1839:71:22"},"nativeSrc":"1839:71:22","nodeType":"YulExpressionStatement","src":"1839:71:22"},{"nativeSrc":"1923:45:22","nodeType":"YulAssignment","src":"1923:45:22","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:22","nodeType":"YulLiteral","src":"1945:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:22","nodeType":"YulLiteral","src":"1951:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:22","nodeType":"YulIdentifier","src":"1935:9:22"},"nativeSrc":"1935:21:22","nodeType":"YulFunctionCall","src":"1935:21:22"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:22","nodeType":"YulLiteral","src":"1962:4:22","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:22","nodeType":"YulIdentifier","src":"1958:3:22"},"nativeSrc":"1958:9:22","nodeType":"YulFunctionCall","src":"1958:9:22"}],"functionName":{"name":"and","nativeSrc":"1931:3:22","nodeType":"YulIdentifier","src":"1931:3:22"},"nativeSrc":"1931:37:22","nodeType":"YulFunctionCall","src":"1931:37:22"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:22","nodeType":"YulIdentifier","src":"1923:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4376,"isOffset":false,"isSlot":false,"src":"1870:9:22","valueSize":1},{"declaration":4376,"isOffset":false,"isSlot":false,"src":"1894:9:22","valueSize":1},{"declaration":4379,"isOffset":false,"isSlot":false,"src":"1923:4:22","valueSize":1}],"flags":["memory-safe"],"id":4381,"nodeType":"InlineAssembly","src":"1800:178:22"}]},"documentation":{"id":4374,"nodeType":"StructuredDocumentation","src":"1628:74:22","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":4383,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:22","nodeType":"FunctionDefinition","parameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:22","nodeType":"VariableDeclaration","scope":4383,"src":"1728:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4375,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:22"},"returnParameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"slot","nameLocation":"1784:4:22","nodeType":"VariableDeclaration","scope":4383,"src":"1776:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:22"},"scope":4500,"src":"1707:277:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4404,"nodeType":"Block","src":"2176:86:22","statements":[{"id":4403,"nodeType":"UncheckedBlock","src":"2186:70:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4397,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"2233:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:22","typeDescriptions":{}}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4399,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"2241:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:22","typeDescriptions":{}}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4392,"id":4402,"nodeType":"Return","src":"2210:35:22"}]}]},"documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"1990:99:22","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":4405,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:22","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"slot","nameLocation":"2118:4:22","nodeType":"VariableDeclaration","scope":4405,"src":"2110:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"pos","nameLocation":"2132:3:22","nodeType":"VariableDeclaration","scope":4405,"src":"2124:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:22"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"result","nameLocation":"2168:6:22","nodeType":"VariableDeclaration","scope":4405,"src":"2160:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:22"},"scope":4500,"src":"2094:168:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4414,"nodeType":"Block","src":"2465:127:22","statements":[{"AST":{"nativeSrc":"2500:86:22","nodeType":"YulBlock","src":"2500:86:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:22","nodeType":"YulLiteral","src":"2521:4:22","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:22","nodeType":"YulIdentifier","src":"2527:4:22"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:22","nodeType":"YulIdentifier","src":"2514:6:22"},"nativeSrc":"2514:18:22","nodeType":"YulFunctionCall","src":"2514:18:22"},"nativeSrc":"2514:18:22","nodeType":"YulExpressionStatement","src":"2514:18:22"},{"nativeSrc":"2545:31:22","nodeType":"YulAssignment","src":"2545:31:22","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:22","nodeType":"YulLiteral","src":"2565:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:22","nodeType":"YulLiteral","src":"2571:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:22","nodeType":"YulIdentifier","src":"2555:9:22"},"nativeSrc":"2555:21:22","nodeType":"YulFunctionCall","src":"2555:21:22"},"variableNames":[{"name":"result","nativeSrc":"2545:6:22","nodeType":"YulIdentifier","src":"2545:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4411,"isOffset":false,"isSlot":false,"src":"2545:6:22","valueSize":1},{"declaration":4408,"isOffset":false,"isSlot":false,"src":"2527:4:22","valueSize":1}],"flags":["memory-safe"],"id":4413,"nodeType":"InlineAssembly","src":"2475:111:22"}]},"documentation":{"id":4406,"nodeType":"StructuredDocumentation","src":"2268:118:22","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":4415,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:22","nodeType":"FunctionDefinition","parameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"slot","nameLocation":"2420:4:22","nodeType":"VariableDeclaration","scope":4415,"src":"2412:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:22"},"returnParameters":{"id":4412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"result","nameLocation":"2457:6:22","nodeType":"VariableDeclaration","scope":4415,"src":"2449:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:22"},"scope":4500,"src":"2391:201:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4426,"nodeType":"Block","src":"2770:179:22","statements":[{"AST":{"nativeSrc":"2805:138:22","nodeType":"YulBlock","src":"2805:138:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:22","nodeType":"YulLiteral","src":"2826:4:22","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:22","nodeType":"YulIdentifier","src":"2836:3:22"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:22","nodeType":"YulLiteral","src":"2845:2:22","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:22","nodeType":"YulLiteral","src":"2853:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:22","nodeType":"YulIdentifier","src":"2849:3:22"},"nativeSrc":"2849:6:22","nodeType":"YulFunctionCall","src":"2849:6:22"}],"functionName":{"name":"shr","nativeSrc":"2841:3:22","nodeType":"YulIdentifier","src":"2841:3:22"},"nativeSrc":"2841:15:22","nodeType":"YulFunctionCall","src":"2841:15:22"}],"functionName":{"name":"and","nativeSrc":"2832:3:22","nodeType":"YulIdentifier","src":"2832:3:22"},"nativeSrc":"2832:25:22","nodeType":"YulFunctionCall","src":"2832:25:22"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:22","nodeType":"YulIdentifier","src":"2819:6:22"},"nativeSrc":"2819:39:22","nodeType":"YulFunctionCall","src":"2819:39:22"},"nativeSrc":"2819:39:22","nodeType":"YulExpressionStatement","src":"2819:39:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:22","nodeType":"YulLiteral","src":"2878:4:22","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:22","nodeType":"YulIdentifier","src":"2884:4:22"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:22","nodeType":"YulIdentifier","src":"2871:6:22"},"nativeSrc":"2871:18:22","nodeType":"YulFunctionCall","src":"2871:18:22"},"nativeSrc":"2871:18:22","nodeType":"YulExpressionStatement","src":"2871:18:22"},{"nativeSrc":"2902:31:22","nodeType":"YulAssignment","src":"2902:31:22","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:22","nodeType":"YulLiteral","src":"2922:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:22","nodeType":"YulLiteral","src":"2928:4:22","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:22","nodeType":"YulIdentifier","src":"2912:9:22"},"nativeSrc":"2912:21:22","nodeType":"YulFunctionCall","src":"2912:21:22"},"variableNames":[{"name":"result","nativeSrc":"2902:6:22","nodeType":"YulIdentifier","src":"2902:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4420,"isOffset":false,"isSlot":false,"src":"2836:3:22","valueSize":1},{"declaration":4423,"isOffset":false,"isSlot":false,"src":"2902:6:22","valueSize":1},{"declaration":4418,"isOffset":false,"isSlot":false,"src":"2884:4:22","valueSize":1}],"flags":["memory-safe"],"id":4425,"nodeType":"InlineAssembly","src":"2780:163:22"}]},"documentation":{"id":4416,"nodeType":"StructuredDocumentation","src":"2598:78:22","text":" @dev Derive the location of a mapping element from the key."},"id":4427,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:22","nodeType":"FunctionDefinition","parameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"slot","nameLocation":"2712:4:22","nodeType":"VariableDeclaration","scope":4427,"src":"2704:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4420,"mutability":"mutable","name":"key","nameLocation":"2726:3:22","nodeType":"VariableDeclaration","scope":4427,"src":"2718:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4419,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:22"},"returnParameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"result","nameLocation":"2762:6:22","nodeType":"VariableDeclaration","scope":4427,"src":"2754:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:22"},"scope":4500,"src":"2681:268:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4438,"nodeType":"Block","src":"3124:173:22","statements":[{"AST":{"nativeSrc":"3159:132:22","nodeType":"YulBlock","src":"3159:132:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:22","nodeType":"YulLiteral","src":"3180:4:22","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:22","nodeType":"YulIdentifier","src":"3200:3:22"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:22","nodeType":"YulIdentifier","src":"3193:6:22"},"nativeSrc":"3193:11:22","nodeType":"YulFunctionCall","src":"3193:11:22"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:22","nodeType":"YulIdentifier","src":"3186:6:22"},"nativeSrc":"3186:19:22","nodeType":"YulFunctionCall","src":"3186:19:22"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:22","nodeType":"YulIdentifier","src":"3173:6:22"},"nativeSrc":"3173:33:22","nodeType":"YulFunctionCall","src":"3173:33:22"},"nativeSrc":"3173:33:22","nodeType":"YulExpressionStatement","src":"3173:33:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:22","nodeType":"YulLiteral","src":"3226:4:22","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:22","nodeType":"YulIdentifier","src":"3232:4:22"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:22","nodeType":"YulIdentifier","src":"3219:6:22"},"nativeSrc":"3219:18:22","nodeType":"YulFunctionCall","src":"3219:18:22"},"nativeSrc":"3219:18:22","nodeType":"YulExpressionStatement","src":"3219:18:22"},{"nativeSrc":"3250:31:22","nodeType":"YulAssignment","src":"3250:31:22","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:22","nodeType":"YulLiteral","src":"3270:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:22","nodeType":"YulLiteral","src":"3276:4:22","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:22","nodeType":"YulIdentifier","src":"3260:9:22"},"nativeSrc":"3260:21:22","nodeType":"YulFunctionCall","src":"3260:21:22"},"variableNames":[{"name":"result","nativeSrc":"3250:6:22","nodeType":"YulIdentifier","src":"3250:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4432,"isOffset":false,"isSlot":false,"src":"3200:3:22","valueSize":1},{"declaration":4435,"isOffset":false,"isSlot":false,"src":"3250:6:22","valueSize":1},{"declaration":4430,"isOffset":false,"isSlot":false,"src":"3232:4:22","valueSize":1}],"flags":["memory-safe"],"id":4437,"nodeType":"InlineAssembly","src":"3134:157:22"}]},"documentation":{"id":4428,"nodeType":"StructuredDocumentation","src":"2955:78:22","text":" @dev Derive the location of a mapping element from the key."},"id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:22","nodeType":"FunctionDefinition","parameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4430,"mutability":"mutable","name":"slot","nameLocation":"3069:4:22","nodeType":"VariableDeclaration","scope":4439,"src":"3061:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4432,"mutability":"mutable","name":"key","nameLocation":"3080:3:22","nodeType":"VariableDeclaration","scope":4439,"src":"3075:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4431,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:22"},"returnParameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4435,"mutability":"mutable","name":"result","nameLocation":"3116:6:22","nodeType":"VariableDeclaration","scope":4439,"src":"3108:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:22"},"scope":4500,"src":"3038:259:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4450,"nodeType":"Block","src":"3475:157:22","statements":[{"AST":{"nativeSrc":"3510:116:22","nodeType":"YulBlock","src":"3510:116:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:22","nodeType":"YulLiteral","src":"3531:4:22","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:22","nodeType":"YulIdentifier","src":"3537:3:22"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:22","nodeType":"YulIdentifier","src":"3524:6:22"},"nativeSrc":"3524:17:22","nodeType":"YulFunctionCall","src":"3524:17:22"},"nativeSrc":"3524:17:22","nodeType":"YulExpressionStatement","src":"3524:17:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:22","nodeType":"YulLiteral","src":"3561:4:22","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:22","nodeType":"YulIdentifier","src":"3567:4:22"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:22","nodeType":"YulIdentifier","src":"3554:6:22"},"nativeSrc":"3554:18:22","nodeType":"YulFunctionCall","src":"3554:18:22"},"nativeSrc":"3554:18:22","nodeType":"YulExpressionStatement","src":"3554:18:22"},{"nativeSrc":"3585:31:22","nodeType":"YulAssignment","src":"3585:31:22","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:22","nodeType":"YulLiteral","src":"3605:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:22","nodeType":"YulLiteral","src":"3611:4:22","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:22","nodeType":"YulIdentifier","src":"3595:9:22"},"nativeSrc":"3595:21:22","nodeType":"YulFunctionCall","src":"3595:21:22"},"variableNames":[{"name":"result","nativeSrc":"3585:6:22","nodeType":"YulIdentifier","src":"3585:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4444,"isOffset":false,"isSlot":false,"src":"3537:3:22","valueSize":1},{"declaration":4447,"isOffset":false,"isSlot":false,"src":"3585:6:22","valueSize":1},{"declaration":4442,"isOffset":false,"isSlot":false,"src":"3567:4:22","valueSize":1}],"flags":["memory-safe"],"id":4449,"nodeType":"InlineAssembly","src":"3485:141:22"}]},"documentation":{"id":4440,"nodeType":"StructuredDocumentation","src":"3303:78:22","text":" @dev Derive the location of a mapping element from the key."},"id":4451,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:22","nodeType":"FunctionDefinition","parameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"slot","nameLocation":"3417:4:22","nodeType":"VariableDeclaration","scope":4451,"src":"3409:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4444,"mutability":"mutable","name":"key","nameLocation":"3431:3:22","nodeType":"VariableDeclaration","scope":4451,"src":"3423:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:22"},"returnParameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"result","nameLocation":"3467:6:22","nodeType":"VariableDeclaration","scope":4451,"src":"3459:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:22"},"scope":4500,"src":"3386:246:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4462,"nodeType":"Block","src":"3810:157:22","statements":[{"AST":{"nativeSrc":"3845:116:22","nodeType":"YulBlock","src":"3845:116:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:22","nodeType":"YulLiteral","src":"3866:4:22","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:22","nodeType":"YulIdentifier","src":"3872:3:22"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:22","nodeType":"YulIdentifier","src":"3859:6:22"},"nativeSrc":"3859:17:22","nodeType":"YulFunctionCall","src":"3859:17:22"},"nativeSrc":"3859:17:22","nodeType":"YulExpressionStatement","src":"3859:17:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:22","nodeType":"YulLiteral","src":"3896:4:22","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:22","nodeType":"YulIdentifier","src":"3902:4:22"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:22","nodeType":"YulIdentifier","src":"3889:6:22"},"nativeSrc":"3889:18:22","nodeType":"YulFunctionCall","src":"3889:18:22"},"nativeSrc":"3889:18:22","nodeType":"YulExpressionStatement","src":"3889:18:22"},{"nativeSrc":"3920:31:22","nodeType":"YulAssignment","src":"3920:31:22","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:22","nodeType":"YulLiteral","src":"3940:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:22","nodeType":"YulLiteral","src":"3946:4:22","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:22","nodeType":"YulIdentifier","src":"3930:9:22"},"nativeSrc":"3930:21:22","nodeType":"YulFunctionCall","src":"3930:21:22"},"variableNames":[{"name":"result","nativeSrc":"3920:6:22","nodeType":"YulIdentifier","src":"3920:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4456,"isOffset":false,"isSlot":false,"src":"3872:3:22","valueSize":1},{"declaration":4459,"isOffset":false,"isSlot":false,"src":"3920:6:22","valueSize":1},{"declaration":4454,"isOffset":false,"isSlot":false,"src":"3902:4:22","valueSize":1}],"flags":["memory-safe"],"id":4461,"nodeType":"InlineAssembly","src":"3820:141:22"}]},"documentation":{"id":4452,"nodeType":"StructuredDocumentation","src":"3638:78:22","text":" @dev Derive the location of a mapping element from the key."},"id":4463,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:22","nodeType":"FunctionDefinition","parameters":{"id":4457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"slot","nameLocation":"3752:4:22","nodeType":"VariableDeclaration","scope":4463,"src":"3744:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4456,"mutability":"mutable","name":"key","nameLocation":"3766:3:22","nodeType":"VariableDeclaration","scope":4463,"src":"3758:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:22"},"returnParameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"result","nameLocation":"3802:6:22","nodeType":"VariableDeclaration","scope":4463,"src":"3794:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:22"},"scope":4500,"src":"3721:246:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4474,"nodeType":"Block","src":"4144:157:22","statements":[{"AST":{"nativeSrc":"4179:116:22","nodeType":"YulBlock","src":"4179:116:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:22","nodeType":"YulLiteral","src":"4200:4:22","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:22","nodeType":"YulIdentifier","src":"4206:3:22"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:22","nodeType":"YulIdentifier","src":"4193:6:22"},"nativeSrc":"4193:17:22","nodeType":"YulFunctionCall","src":"4193:17:22"},"nativeSrc":"4193:17:22","nodeType":"YulExpressionStatement","src":"4193:17:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:22","nodeType":"YulLiteral","src":"4230:4:22","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:22","nodeType":"YulIdentifier","src":"4236:4:22"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:22","nodeType":"YulIdentifier","src":"4223:6:22"},"nativeSrc":"4223:18:22","nodeType":"YulFunctionCall","src":"4223:18:22"},"nativeSrc":"4223:18:22","nodeType":"YulExpressionStatement","src":"4223:18:22"},{"nativeSrc":"4254:31:22","nodeType":"YulAssignment","src":"4254:31:22","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:22","nodeType":"YulLiteral","src":"4274:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:22","nodeType":"YulLiteral","src":"4280:4:22","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:22","nodeType":"YulIdentifier","src":"4264:9:22"},"nativeSrc":"4264:21:22","nodeType":"YulFunctionCall","src":"4264:21:22"},"variableNames":[{"name":"result","nativeSrc":"4254:6:22","nodeType":"YulIdentifier","src":"4254:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4468,"isOffset":false,"isSlot":false,"src":"4206:3:22","valueSize":1},{"declaration":4471,"isOffset":false,"isSlot":false,"src":"4254:6:22","valueSize":1},{"declaration":4466,"isOffset":false,"isSlot":false,"src":"4236:4:22","valueSize":1}],"flags":["memory-safe"],"id":4473,"nodeType":"InlineAssembly","src":"4154:141:22"}]},"documentation":{"id":4464,"nodeType":"StructuredDocumentation","src":"3973:78:22","text":" @dev Derive the location of a mapping element from the key."},"id":4475,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:22","nodeType":"FunctionDefinition","parameters":{"id":4469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"slot","nameLocation":"4087:4:22","nodeType":"VariableDeclaration","scope":4475,"src":"4079:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4468,"mutability":"mutable","name":"key","nameLocation":"4100:3:22","nodeType":"VariableDeclaration","scope":4475,"src":"4093:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4467,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:22"},"returnParameters":{"id":4472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4471,"mutability":"mutable","name":"result","nameLocation":"4136:6:22","nodeType":"VariableDeclaration","scope":4475,"src":"4128:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:22"},"scope":4500,"src":"4056:245:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4486,"nodeType":"Block","src":"4485:326:22","statements":[{"AST":{"nativeSrc":"4520:285:22","nodeType":"YulBlock","src":"4520:285:22","statements":[{"nativeSrc":"4534:24:22","nodeType":"YulVariableDeclaration","src":"4534:24:22","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:22","nodeType":"YulIdentifier","src":"4554:3:22"}],"functionName":{"name":"mload","nativeSrc":"4548:5:22","nodeType":"YulIdentifier","src":"4548:5:22"},"nativeSrc":"4548:10:22","nodeType":"YulFunctionCall","src":"4548:10:22"},"variables":[{"name":"length","nativeSrc":"4538:6:22","nodeType":"YulTypedName","src":"4538:6:22","type":""}]},{"nativeSrc":"4571:27:22","nodeType":"YulVariableDeclaration","src":"4571:27:22","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:22","nodeType":"YulIdentifier","src":"4588:3:22"},{"kind":"number","nativeSrc":"4593:4:22","nodeType":"YulLiteral","src":"4593:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:22","nodeType":"YulIdentifier","src":"4584:3:22"},"nativeSrc":"4584:14:22","nodeType":"YulFunctionCall","src":"4584:14:22"},"variables":[{"name":"begin","nativeSrc":"4575:5:22","nodeType":"YulTypedName","src":"4575:5:22","type":""}]},{"nativeSrc":"4611:29:22","nodeType":"YulVariableDeclaration","src":"4611:29:22","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:22","nodeType":"YulIdentifier","src":"4626:5:22"},{"name":"length","nativeSrc":"4633:6:22","nodeType":"YulIdentifier","src":"4633:6:22"}],"functionName":{"name":"add","nativeSrc":"4622:3:22","nodeType":"YulIdentifier","src":"4622:3:22"},"nativeSrc":"4622:18:22","nodeType":"YulFunctionCall","src":"4622:18:22"},"variables":[{"name":"end","nativeSrc":"4615:3:22","nodeType":"YulTypedName","src":"4615:3:22","type":""}]},{"nativeSrc":"4653:23:22","nodeType":"YulVariableDeclaration","src":"4653:23:22","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:22","nodeType":"YulIdentifier","src":"4672:3:22"}],"functionName":{"name":"mload","nativeSrc":"4666:5:22","nodeType":"YulIdentifier","src":"4666:5:22"},"nativeSrc":"4666:10:22","nodeType":"YulFunctionCall","src":"4666:10:22"},"variables":[{"name":"cache","nativeSrc":"4657:5:22","nodeType":"YulTypedName","src":"4657:5:22","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:22","nodeType":"YulIdentifier","src":"4696:3:22"},{"name":"slot","nativeSrc":"4701:4:22","nodeType":"YulIdentifier","src":"4701:4:22"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:22","nodeType":"YulIdentifier","src":"4689:6:22"},"nativeSrc":"4689:17:22","nodeType":"YulFunctionCall","src":"4689:17:22"},"nativeSrc":"4689:17:22","nodeType":"YulExpressionStatement","src":"4689:17:22"},{"nativeSrc":"4719:45:22","nodeType":"YulAssignment","src":"4719:45:22","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:22","nodeType":"YulIdentifier","src":"4739:5:22"},{"arguments":[{"name":"length","nativeSrc":"4750:6:22","nodeType":"YulIdentifier","src":"4750:6:22"},{"kind":"number","nativeSrc":"4758:4:22","nodeType":"YulLiteral","src":"4758:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:22","nodeType":"YulIdentifier","src":"4746:3:22"},"nativeSrc":"4746:17:22","nodeType":"YulFunctionCall","src":"4746:17:22"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:22","nodeType":"YulIdentifier","src":"4729:9:22"},"nativeSrc":"4729:35:22","nodeType":"YulFunctionCall","src":"4729:35:22"},"variableNames":[{"name":"result","nativeSrc":"4719:6:22","nodeType":"YulIdentifier","src":"4719:6:22"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:22","nodeType":"YulIdentifier","src":"4784:3:22"},{"name":"cache","nativeSrc":"4789:5:22","nodeType":"YulIdentifier","src":"4789:5:22"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:22","nodeType":"YulIdentifier","src":"4777:6:22"},"nativeSrc":"4777:18:22","nodeType":"YulFunctionCall","src":"4777:18:22"},"nativeSrc":"4777:18:22","nodeType":"YulExpressionStatement","src":"4777:18:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":4480,"isOffset":false,"isSlot":false,"src":"4554:3:22","valueSize":1},{"declaration":4480,"isOffset":false,"isSlot":false,"src":"4588:3:22","valueSize":1},{"declaration":4483,"isOffset":false,"isSlot":false,"src":"4719:6:22","valueSize":1},{"declaration":4478,"isOffset":false,"isSlot":false,"src":"4701:4:22","valueSize":1}],"flags":["memory-safe"],"id":4485,"nodeType":"InlineAssembly","src":"4495:310:22"}]},"documentation":{"id":4476,"nodeType":"StructuredDocumentation","src":"4307:78:22","text":" @dev Derive the location of a mapping element from the key."},"id":4487,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:22","nodeType":"FunctionDefinition","parameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"slot","nameLocation":"4421:4:22","nodeType":"VariableDeclaration","scope":4487,"src":"4413:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4480,"mutability":"mutable","name":"key","nameLocation":"4441:3:22","nodeType":"VariableDeclaration","scope":4487,"src":"4427:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4479,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:22"},"returnParameters":{"id":4484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"result","nameLocation":"4477:6:22","nodeType":"VariableDeclaration","scope":4487,"src":"4469:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:22"},"scope":4500,"src":"4390:421:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4498,"nodeType":"Block","src":"4994:326:22","statements":[{"AST":{"nativeSrc":"5029:285:22","nodeType":"YulBlock","src":"5029:285:22","statements":[{"nativeSrc":"5043:24:22","nodeType":"YulVariableDeclaration","src":"5043:24:22","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:22","nodeType":"YulIdentifier","src":"5063:3:22"}],"functionName":{"name":"mload","nativeSrc":"5057:5:22","nodeType":"YulIdentifier","src":"5057:5:22"},"nativeSrc":"5057:10:22","nodeType":"YulFunctionCall","src":"5057:10:22"},"variables":[{"name":"length","nativeSrc":"5047:6:22","nodeType":"YulTypedName","src":"5047:6:22","type":""}]},{"nativeSrc":"5080:27:22","nodeType":"YulVariableDeclaration","src":"5080:27:22","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:22","nodeType":"YulIdentifier","src":"5097:3:22"},{"kind":"number","nativeSrc":"5102:4:22","nodeType":"YulLiteral","src":"5102:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:22","nodeType":"YulIdentifier","src":"5093:3:22"},"nativeSrc":"5093:14:22","nodeType":"YulFunctionCall","src":"5093:14:22"},"variables":[{"name":"begin","nativeSrc":"5084:5:22","nodeType":"YulTypedName","src":"5084:5:22","type":""}]},{"nativeSrc":"5120:29:22","nodeType":"YulVariableDeclaration","src":"5120:29:22","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:22","nodeType":"YulIdentifier","src":"5135:5:22"},{"name":"length","nativeSrc":"5142:6:22","nodeType":"YulIdentifier","src":"5142:6:22"}],"functionName":{"name":"add","nativeSrc":"5131:3:22","nodeType":"YulIdentifier","src":"5131:3:22"},"nativeSrc":"5131:18:22","nodeType":"YulFunctionCall","src":"5131:18:22"},"variables":[{"name":"end","nativeSrc":"5124:3:22","nodeType":"YulTypedName","src":"5124:3:22","type":""}]},{"nativeSrc":"5162:23:22","nodeType":"YulVariableDeclaration","src":"5162:23:22","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:22","nodeType":"YulIdentifier","src":"5181:3:22"}],"functionName":{"name":"mload","nativeSrc":"5175:5:22","nodeType":"YulIdentifier","src":"5175:5:22"},"nativeSrc":"5175:10:22","nodeType":"YulFunctionCall","src":"5175:10:22"},"variables":[{"name":"cache","nativeSrc":"5166:5:22","nodeType":"YulTypedName","src":"5166:5:22","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:22","nodeType":"YulIdentifier","src":"5205:3:22"},{"name":"slot","nativeSrc":"5210:4:22","nodeType":"YulIdentifier","src":"5210:4:22"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:22","nodeType":"YulIdentifier","src":"5198:6:22"},"nativeSrc":"5198:17:22","nodeType":"YulFunctionCall","src":"5198:17:22"},"nativeSrc":"5198:17:22","nodeType":"YulExpressionStatement","src":"5198:17:22"},{"nativeSrc":"5228:45:22","nodeType":"YulAssignment","src":"5228:45:22","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:22","nodeType":"YulIdentifier","src":"5248:5:22"},{"arguments":[{"name":"length","nativeSrc":"5259:6:22","nodeType":"YulIdentifier","src":"5259:6:22"},{"kind":"number","nativeSrc":"5267:4:22","nodeType":"YulLiteral","src":"5267:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:22","nodeType":"YulIdentifier","src":"5255:3:22"},"nativeSrc":"5255:17:22","nodeType":"YulFunctionCall","src":"5255:17:22"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:22","nodeType":"YulIdentifier","src":"5238:9:22"},"nativeSrc":"5238:35:22","nodeType":"YulFunctionCall","src":"5238:35:22"},"variableNames":[{"name":"result","nativeSrc":"5228:6:22","nodeType":"YulIdentifier","src":"5228:6:22"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:22","nodeType":"YulIdentifier","src":"5293:3:22"},{"name":"cache","nativeSrc":"5298:5:22","nodeType":"YulIdentifier","src":"5298:5:22"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:22","nodeType":"YulIdentifier","src":"5286:6:22"},"nativeSrc":"5286:18:22","nodeType":"YulFunctionCall","src":"5286:18:22"},"nativeSrc":"5286:18:22","nodeType":"YulExpressionStatement","src":"5286:18:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":4492,"isOffset":false,"isSlot":false,"src":"5063:3:22","valueSize":1},{"declaration":4492,"isOffset":false,"isSlot":false,"src":"5097:3:22","valueSize":1},{"declaration":4495,"isOffset":false,"isSlot":false,"src":"5228:6:22","valueSize":1},{"declaration":4490,"isOffset":false,"isSlot":false,"src":"5210:4:22","valueSize":1}],"flags":["memory-safe"],"id":4497,"nodeType":"InlineAssembly","src":"5004:310:22"}]},"documentation":{"id":4488,"nodeType":"StructuredDocumentation","src":"4817:78:22","text":" @dev Derive the location of a mapping element from the key."},"id":4499,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:22","nodeType":"FunctionDefinition","parameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4490,"mutability":"mutable","name":"slot","nameLocation":"4931:4:22","nodeType":"VariableDeclaration","scope":4499,"src":"4923:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4492,"mutability":"mutable","name":"key","nameLocation":"4950:3:22","nodeType":"VariableDeclaration","scope":4499,"src":"4937:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4491,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:22"},"returnParameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"result","nameLocation":"4986:6:22","nodeType":"VariableDeclaration","scope":4499,"src":"4978:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:22"},"scope":4500,"src":"4900:420:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4501,"src":"1599:3723:22","usedErrors":[],"usedEvents":[]}],"src":"199:5124:22"},"id":22},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4624]},"id":4625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4502,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4503,"nodeType":"StructuredDocumentation","src":"219:1187:23","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4624,"linearizedBaseContracts":[4624],"name":"StorageSlot","nameLocation":"1415:11:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4506,"members":[{"constant":false,"id":4505,"mutability":"mutable","name":"value","nameLocation":"1470:5:23","nodeType":"VariableDeclaration","scope":4506,"src":"1462:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4504,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:23","nodeType":"StructDefinition","scope":4624,"src":"1433:49:23","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4509,"members":[{"constant":false,"id":4508,"mutability":"mutable","name":"value","nameLocation":"1522:5:23","nodeType":"VariableDeclaration","scope":4509,"src":"1517:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4507,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:23","nodeType":"StructDefinition","scope":4624,"src":"1488:46:23","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4512,"members":[{"constant":false,"id":4511,"mutability":"mutable","name":"value","nameLocation":"1577:5:23","nodeType":"VariableDeclaration","scope":4512,"src":"1569:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:23","nodeType":"StructDefinition","scope":4624,"src":"1540:49:23","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4515,"members":[{"constant":false,"id":4514,"mutability":"mutable","name":"value","nameLocation":"1632:5:23","nodeType":"VariableDeclaration","scope":4515,"src":"1624:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:23","nodeType":"StructDefinition","scope":4624,"src":"1595:49:23","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4518,"members":[{"constant":false,"id":4517,"mutability":"mutable","name":"value","nameLocation":"1685:5:23","nodeType":"VariableDeclaration","scope":4518,"src":"1678:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4516,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:23","nodeType":"StructDefinition","scope":4624,"src":"1650:47:23","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4521,"members":[{"constant":false,"id":4520,"mutability":"mutable","name":"value","nameLocation":"1738:5:23","nodeType":"VariableDeclaration","scope":4521,"src":"1731:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4519,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:23","nodeType":"StructDefinition","scope":4624,"src":"1703:47:23","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4524,"members":[{"constant":false,"id":4523,"mutability":"mutable","name":"value","nameLocation":"1789:5:23","nodeType":"VariableDeclaration","scope":4524,"src":"1783:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4522,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:23","nodeType":"StructDefinition","scope":4624,"src":"1756:45:23","visibility":"public"},{"body":{"id":4534,"nodeType":"Block","src":"1983:79:23","statements":[{"AST":{"nativeSrc":"2018:38:23","nodeType":"YulBlock","src":"2018:38:23","statements":[{"nativeSrc":"2032:14:23","nodeType":"YulAssignment","src":"2032:14:23","value":{"name":"slot","nativeSrc":"2042:4:23","nodeType":"YulIdentifier","src":"2042:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:23","nodeType":"YulIdentifier","src":"2032:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4531,"isOffset":false,"isSlot":true,"src":"2032:6:23","suffix":"slot","valueSize":1},{"declaration":4527,"isOffset":false,"isSlot":false,"src":"2042:4:23","valueSize":1}],"flags":["memory-safe"],"id":4533,"nodeType":"InlineAssembly","src":"1993:63:23"}]},"documentation":{"id":4525,"nodeType":"StructuredDocumentation","src":"1807:87:23","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4535,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:23","nodeType":"FunctionDefinition","parameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"slot","nameLocation":"1931:4:23","nodeType":"VariableDeclaration","scope":4535,"src":"1923:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:23"},"returnParameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"r","nameLocation":"1980:1:23","nodeType":"VariableDeclaration","scope":4535,"src":"1960:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4530,"nodeType":"UserDefinedTypeName","pathNode":{"id":4529,"name":"AddressSlot","nameLocations":["1960:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":4506,"src":"1960:11:23"},"referencedDeclaration":4506,"src":"1960:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4506_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:23"},"scope":4624,"src":"1899:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4545,"nodeType":"Block","src":"2243:79:23","statements":[{"AST":{"nativeSrc":"2278:38:23","nodeType":"YulBlock","src":"2278:38:23","statements":[{"nativeSrc":"2292:14:23","nodeType":"YulAssignment","src":"2292:14:23","value":{"name":"slot","nativeSrc":"2302:4:23","nodeType":"YulIdentifier","src":"2302:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:23","nodeType":"YulIdentifier","src":"2292:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4542,"isOffset":false,"isSlot":true,"src":"2292:6:23","suffix":"slot","valueSize":1},{"declaration":4538,"isOffset":false,"isSlot":false,"src":"2302:4:23","valueSize":1}],"flags":["memory-safe"],"id":4544,"nodeType":"InlineAssembly","src":"2253:63:23"}]},"documentation":{"id":4536,"nodeType":"StructuredDocumentation","src":"2068:86:23","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4546,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:23","nodeType":"FunctionDefinition","parameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"slot","nameLocation":"2191:4:23","nodeType":"VariableDeclaration","scope":4546,"src":"2183:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:23"},"returnParameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"r","nameLocation":"2240:1:23","nodeType":"VariableDeclaration","scope":4546,"src":"2220:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4509_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4541,"nodeType":"UserDefinedTypeName","pathNode":{"id":4540,"name":"BooleanSlot","nameLocations":["2220:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":4509,"src":"2220:11:23"},"referencedDeclaration":4509,"src":"2220:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4509_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:23"},"scope":4624,"src":"2159:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4556,"nodeType":"Block","src":"2503:79:23","statements":[{"AST":{"nativeSrc":"2538:38:23","nodeType":"YulBlock","src":"2538:38:23","statements":[{"nativeSrc":"2552:14:23","nodeType":"YulAssignment","src":"2552:14:23","value":{"name":"slot","nativeSrc":"2562:4:23","nodeType":"YulIdentifier","src":"2562:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:23","nodeType":"YulIdentifier","src":"2552:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4553,"isOffset":false,"isSlot":true,"src":"2552:6:23","suffix":"slot","valueSize":1},{"declaration":4549,"isOffset":false,"isSlot":false,"src":"2562:4:23","valueSize":1}],"flags":["memory-safe"],"id":4555,"nodeType":"InlineAssembly","src":"2513:63:23"}]},"documentation":{"id":4547,"nodeType":"StructuredDocumentation","src":"2328:86:23","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4557,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:23","nodeType":"FunctionDefinition","parameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"mutability":"mutable","name":"slot","nameLocation":"2451:4:23","nodeType":"VariableDeclaration","scope":4557,"src":"2443:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:23"},"returnParameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"r","nameLocation":"2500:1:23","nodeType":"VariableDeclaration","scope":4557,"src":"2480:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4512_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4552,"nodeType":"UserDefinedTypeName","pathNode":{"id":4551,"name":"Bytes32Slot","nameLocations":["2480:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":4512,"src":"2480:11:23"},"referencedDeclaration":4512,"src":"2480:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4512_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:23"},"scope":4624,"src":"2419:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4567,"nodeType":"Block","src":"2763:79:23","statements":[{"AST":{"nativeSrc":"2798:38:23","nodeType":"YulBlock","src":"2798:38:23","statements":[{"nativeSrc":"2812:14:23","nodeType":"YulAssignment","src":"2812:14:23","value":{"name":"slot","nativeSrc":"2822:4:23","nodeType":"YulIdentifier","src":"2822:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:23","nodeType":"YulIdentifier","src":"2812:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4564,"isOffset":false,"isSlot":true,"src":"2812:6:23","suffix":"slot","valueSize":1},{"declaration":4560,"isOffset":false,"isSlot":false,"src":"2822:4:23","valueSize":1}],"flags":["memory-safe"],"id":4566,"nodeType":"InlineAssembly","src":"2773:63:23"}]},"documentation":{"id":4558,"nodeType":"StructuredDocumentation","src":"2588:86:23","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4568,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:23","nodeType":"FunctionDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"slot","nameLocation":"2711:4:23","nodeType":"VariableDeclaration","scope":4568,"src":"2703:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:23"},"returnParameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"r","nameLocation":"2760:1:23","nodeType":"VariableDeclaration","scope":4568,"src":"2740:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4515_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4563,"nodeType":"UserDefinedTypeName","pathNode":{"id":4562,"name":"Uint256Slot","nameLocations":["2740:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":4515,"src":"2740:11:23"},"referencedDeclaration":4515,"src":"2740:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4515_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:23"},"scope":4624,"src":"2679:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4578,"nodeType":"Block","src":"3020:79:23","statements":[{"AST":{"nativeSrc":"3055:38:23","nodeType":"YulBlock","src":"3055:38:23","statements":[{"nativeSrc":"3069:14:23","nodeType":"YulAssignment","src":"3069:14:23","value":{"name":"slot","nativeSrc":"3079:4:23","nodeType":"YulIdentifier","src":"3079:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:23","nodeType":"YulIdentifier","src":"3069:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4575,"isOffset":false,"isSlot":true,"src":"3069:6:23","suffix":"slot","valueSize":1},{"declaration":4571,"isOffset":false,"isSlot":false,"src":"3079:4:23","valueSize":1}],"flags":["memory-safe"],"id":4577,"nodeType":"InlineAssembly","src":"3030:63:23"}]},"documentation":{"id":4569,"nodeType":"StructuredDocumentation","src":"2848:85:23","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4579,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:23","nodeType":"FunctionDefinition","parameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"slot","nameLocation":"2969:4:23","nodeType":"VariableDeclaration","scope":4579,"src":"2961:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:23"},"returnParameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"r","nameLocation":"3017:1:23","nodeType":"VariableDeclaration","scope":4579,"src":"2998:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4518_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4574,"nodeType":"UserDefinedTypeName","pathNode":{"id":4573,"name":"Int256Slot","nameLocations":["2998:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":4518,"src":"2998:10:23"},"referencedDeclaration":4518,"src":"2998:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4518_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:23"},"scope":4624,"src":"2938:161:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4589,"nodeType":"Block","src":"3277:79:23","statements":[{"AST":{"nativeSrc":"3312:38:23","nodeType":"YulBlock","src":"3312:38:23","statements":[{"nativeSrc":"3326:14:23","nodeType":"YulAssignment","src":"3326:14:23","value":{"name":"slot","nativeSrc":"3336:4:23","nodeType":"YulIdentifier","src":"3336:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:23","nodeType":"YulIdentifier","src":"3326:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4586,"isOffset":false,"isSlot":true,"src":"3326:6:23","suffix":"slot","valueSize":1},{"declaration":4582,"isOffset":false,"isSlot":false,"src":"3336:4:23","valueSize":1}],"flags":["memory-safe"],"id":4588,"nodeType":"InlineAssembly","src":"3287:63:23"}]},"documentation":{"id":4580,"nodeType":"StructuredDocumentation","src":"3105:85:23","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4590,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:23","nodeType":"FunctionDefinition","parameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"slot","nameLocation":"3226:4:23","nodeType":"VariableDeclaration","scope":4590,"src":"3218:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:23"},"returnParameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4586,"mutability":"mutable","name":"r","nameLocation":"3274:1:23","nodeType":"VariableDeclaration","scope":4590,"src":"3255:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4521_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4585,"nodeType":"UserDefinedTypeName","pathNode":{"id":4584,"name":"StringSlot","nameLocations":["3255:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":4521,"src":"3255:10:23"},"referencedDeclaration":4521,"src":"3255:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4521_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:23"},"scope":4624,"src":"3195:161:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4600,"nodeType":"Block","src":"3558:85:23","statements":[{"AST":{"nativeSrc":"3593:44:23","nodeType":"YulBlock","src":"3593:44:23","statements":[{"nativeSrc":"3607:20:23","nodeType":"YulAssignment","src":"3607:20:23","value":{"name":"store.slot","nativeSrc":"3617:10:23","nodeType":"YulIdentifier","src":"3617:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:23","nodeType":"YulIdentifier","src":"3607:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4597,"isOffset":false,"isSlot":true,"src":"3607:6:23","suffix":"slot","valueSize":1},{"declaration":4593,"isOffset":false,"isSlot":true,"src":"3617:10:23","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4599,"nodeType":"InlineAssembly","src":"3568:69:23"}]},"documentation":{"id":4591,"nodeType":"StructuredDocumentation","src":"3362:101:23","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4601,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:23","nodeType":"FunctionDefinition","parameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"store","nameLocation":"3506:5:23","nodeType":"VariableDeclaration","scope":4601,"src":"3491:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4592,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:23"},"returnParameters":{"id":4598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"mutability":"mutable","name":"r","nameLocation":"3555:1:23","nodeType":"VariableDeclaration","scope":4601,"src":"3536:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4521_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4596,"nodeType":"UserDefinedTypeName","pathNode":{"id":4595,"name":"StringSlot","nameLocations":["3536:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":4521,"src":"3536:10:23"},"referencedDeclaration":4521,"src":"3536:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4521_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:23"},"scope":4624,"src":"3468:175:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4611,"nodeType":"Block","src":"3818:79:23","statements":[{"AST":{"nativeSrc":"3853:38:23","nodeType":"YulBlock","src":"3853:38:23","statements":[{"nativeSrc":"3867:14:23","nodeType":"YulAssignment","src":"3867:14:23","value":{"name":"slot","nativeSrc":"3877:4:23","nodeType":"YulIdentifier","src":"3877:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:23","nodeType":"YulIdentifier","src":"3867:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4608,"isOffset":false,"isSlot":true,"src":"3867:6:23","suffix":"slot","valueSize":1},{"declaration":4604,"isOffset":false,"isSlot":false,"src":"3877:4:23","valueSize":1}],"flags":["memory-safe"],"id":4610,"nodeType":"InlineAssembly","src":"3828:63:23"}]},"documentation":{"id":4602,"nodeType":"StructuredDocumentation","src":"3649:84:23","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4612,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:23","nodeType":"FunctionDefinition","parameters":{"id":4605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"slot","nameLocation":"3768:4:23","nodeType":"VariableDeclaration","scope":4612,"src":"3760:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:23"},"returnParameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"r","nameLocation":"3815:1:23","nodeType":"VariableDeclaration","scope":4612,"src":"3797:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4524_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4607,"nodeType":"UserDefinedTypeName","pathNode":{"id":4606,"name":"BytesSlot","nameLocations":["3797:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":4524,"src":"3797:9:23"},"referencedDeclaration":4524,"src":"3797:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4524_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:23"},"scope":4624,"src":"3738:159:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4622,"nodeType":"Block","src":"4094:85:23","statements":[{"AST":{"nativeSrc":"4129:44:23","nodeType":"YulBlock","src":"4129:44:23","statements":[{"nativeSrc":"4143:20:23","nodeType":"YulAssignment","src":"4143:20:23","value":{"name":"store.slot","nativeSrc":"4153:10:23","nodeType":"YulIdentifier","src":"4153:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:23","nodeType":"YulIdentifier","src":"4143:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4619,"isOffset":false,"isSlot":true,"src":"4143:6:23","suffix":"slot","valueSize":1},{"declaration":4615,"isOffset":false,"isSlot":true,"src":"4153:10:23","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4621,"nodeType":"InlineAssembly","src":"4104:69:23"}]},"documentation":{"id":4613,"nodeType":"StructuredDocumentation","src":"3903:99:23","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4623,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:23","nodeType":"FunctionDefinition","parameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"store","nameLocation":"4043:5:23","nodeType":"VariableDeclaration","scope":4623,"src":"4029:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4614,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:23"},"returnParameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"mutability":"mutable","name":"r","nameLocation":"4091:1:23","nodeType":"VariableDeclaration","scope":4623,"src":"4073:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4524_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4618,"nodeType":"UserDefinedTypeName","pathNode":{"id":4617,"name":"BytesSlot","nameLocations":["4073:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":4524,"src":"4073:9:23"},"referencedDeclaration":4524,"src":"4073:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4524_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:23"},"scope":4624,"src":"4007:172:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4625,"src":"1407:2774:23","usedErrors":[],"usedEvents":[]}],"src":"193:3989:23"},"id":23},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7659],"SafeCast":[9424],"SignedMath":[9568],"Strings":[6026]},"id":6027,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4626,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":7660,"src":"127:37:24","symbolAliases":[{"foreign":{"id":4627,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"135:4:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":4630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":9425,"src":"165:45:24","symbolAliases":[{"foreign":{"id":4629,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"173:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":9569,"src":"211:49:24","symbolAliases":[{"foreign":{"id":4631,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9568,"src":"219:10:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4633,"nodeType":"StructuredDocumentation","src":"262:34:24","text":" @dev String operations."},"fullyImplemented":true,"id":6026,"linearizedBaseContracts":[6026],"name":"Strings","nameLocation":"305:7:24","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4635,"libraryName":{"id":4634,"name":"SafeCast","nameLocations":["325:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":9424,"src":"325:8:24"},"nodeType":"UsingForDirective","src":"319:21:24"},{"constant":true,"id":4638,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:24","nodeType":"VariableDeclaration","scope":6026,"src":"346:56:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4636,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:24","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4641,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:24","nodeType":"VariableDeclaration","scope":6026,"src":"408:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4639,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:24","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":4677,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:24","nodeType":"VariableDeclaration","scope":6026,"src":"456:302:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":4676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":4661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":4656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":4651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":4649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:24","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:24","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":4650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:24","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:24","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:24","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":4655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:24","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:24","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":4659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:24","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":4660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:24","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:24","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:24","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:24","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":4665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:24","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:24","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":4669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:24","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:24","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":4670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:24","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:24","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:24","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":4675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:24","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:24","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":4678,"nodeType":"StructuredDocumentation","src":"778:81:24","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4684,"name":"StringsInsufficientHexLength","nameLocation":"870:28:24","nodeType":"ErrorDefinition","parameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4680,"mutability":"mutable","name":"value","nameLocation":"907:5:24","nodeType":"VariableDeclaration","scope":4684,"src":"899:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4682,"mutability":"mutable","name":"length","nameLocation":"922:6:24","nodeType":"VariableDeclaration","scope":4684,"src":"914:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:24"},"src":"864:66:24"},{"documentation":{"id":4685,"nodeType":"StructuredDocumentation","src":"936:108:24","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":4687,"name":"StringsInvalidChar","nameLocation":"1055:18:24","nodeType":"ErrorDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[],"src":"1073:2:24"},"src":"1049:27:24"},{"documentation":{"id":4688,"nodeType":"StructuredDocumentation","src":"1082:84:24","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":4690,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:24","nodeType":"ErrorDefinition","parameters":{"id":4689,"nodeType":"ParameterList","parameters":[],"src":"1204:2:24"},"src":"1171:36:24"},{"body":{"id":4737,"nodeType":"Block","src":"1379:563:24","statements":[{"id":4736,"nodeType":"UncheckedBlock","src":"1389:547:24","statements":[{"assignments":[4699],"declarations":[{"constant":false,"id":4699,"mutability":"mutable","name":"length","nameLocation":"1421:6:24","nodeType":"VariableDeclaration","scope":4736,"src":"1413:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4706,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"1441:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4700,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"1430:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7659_$","typeString":"type(library Math)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:24","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":7491,"src":"1430:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:24"},{"assignments":[4708],"declarations":[{"constant":false,"id":4708,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:24","nodeType":"VariableDeclaration","scope":4736,"src":"1465:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4707,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4713,"initialValue":{"arguments":[{"id":4711,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"1499:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4709,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:24"},{"assignments":[4715],"declarations":[{"constant":false,"id":4715,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:24","nodeType":"VariableDeclaration","scope":4736,"src":"1520:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4716,"nodeType":"VariableDeclarationStatement","src":"1520:11:24"},{"AST":{"nativeSrc":"1570:69:24","nodeType":"YulBlock","src":"1570:69:24","statements":[{"nativeSrc":"1588:37:24","nodeType":"YulAssignment","src":"1588:37:24","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:24","nodeType":"YulIdentifier","src":"1603:6:24"},{"kind":"number","nativeSrc":"1611:4:24","nodeType":"YulLiteral","src":"1611:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:24","nodeType":"YulIdentifier","src":"1599:3:24"},"nativeSrc":"1599:17:24","nodeType":"YulFunctionCall","src":"1599:17:24"},{"name":"length","nativeSrc":"1618:6:24","nodeType":"YulIdentifier","src":"1618:6:24"}],"functionName":{"name":"add","nativeSrc":"1595:3:24","nodeType":"YulIdentifier","src":"1595:3:24"},"nativeSrc":"1595:30:24","nodeType":"YulFunctionCall","src":"1595:30:24"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:24","nodeType":"YulIdentifier","src":"1588:3:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4708,"isOffset":false,"isSlot":false,"src":"1603:6:24","valueSize":1},{"declaration":4699,"isOffset":false,"isSlot":false,"src":"1618:6:24","valueSize":1},{"declaration":4715,"isOffset":false,"isSlot":false,"src":"1588:3:24","valueSize":1}],"flags":["memory-safe"],"id":4717,"nodeType":"InlineAssembly","src":"1545:94:24"},{"body":{"id":4732,"nodeType":"Block","src":"1665:234:24","statements":[{"expression":{"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:24","subExpression":{"id":4719,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"1683:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4721,"nodeType":"ExpressionStatement","src":"1683:5:24"},{"AST":{"nativeSrc":"1731:86:24","nodeType":"YulBlock","src":"1731:86:24","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:24","nodeType":"YulIdentifier","src":"1761:3:24"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:24","nodeType":"YulIdentifier","src":"1775:5:24"},{"kind":"number","nativeSrc":"1782:2:24","nodeType":"YulLiteral","src":"1782:2:24","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:24","nodeType":"YulIdentifier","src":"1771:3:24"},"nativeSrc":"1771:14:24","nodeType":"YulFunctionCall","src":"1771:14:24"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:24","nodeType":"YulIdentifier","src":"1787:10:24"}],"functionName":{"name":"byte","nativeSrc":"1766:4:24","nodeType":"YulIdentifier","src":"1766:4:24"},"nativeSrc":"1766:32:24","nodeType":"YulFunctionCall","src":"1766:32:24"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:24","nodeType":"YulIdentifier","src":"1753:7:24"},"nativeSrc":"1753:46:24","nodeType":"YulFunctionCall","src":"1753:46:24"},"nativeSrc":"1753:46:24","nodeType":"YulExpressionStatement","src":"1753:46:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":4638,"isOffset":false,"isSlot":false,"src":"1787:10:24","valueSize":1},{"declaration":4715,"isOffset":false,"isSlot":false,"src":"1761:3:24","valueSize":1},{"declaration":4693,"isOffset":false,"isSlot":false,"src":"1775:5:24","valueSize":1}],"flags":["memory-safe"],"id":4722,"nodeType":"InlineAssembly","src":"1706:111:24"},{"expression":{"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"1834:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4726,"nodeType":"ExpressionStatement","src":"1834:11:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"1867:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4731,"nodeType":"IfStatement","src":"1863:21:24","trueBody":{"id":4730,"nodeType":"Break","src":"1879:5:24"}}]},"condition":{"hexValue":"74727565","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4733,"nodeType":"WhileStatement","src":"1652:247:24"},{"expression":{"id":4734,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"1919:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4697,"id":4735,"nodeType":"Return","src":"1912:13:24"}]}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"1213:90:24","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4738,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:24","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"value","nameLocation":"1334:5:24","nodeType":"VariableDeclaration","scope":4738,"src":"1326:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:24"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4738,"src":"1364:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4695,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:24"},"scope":6026,"src":"1308:634:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4763,"nodeType":"Block","src":"2118:92:24","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"2149:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:24","trueExpression":{"hexValue":"2d","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"2195:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4756,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9568,"src":"2180:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9568_$","typeString":"type(library SignedMath)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:24","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9567,"src":"2180:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4755,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"2171:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4746,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:24","typeDescriptions":{}}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:24","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:24","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4745,"id":4762,"nodeType":"Return","src":"2128:75:24"}]},"documentation":{"id":4739,"nodeType":"StructuredDocumentation","src":"1948:89:24","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4764,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:24","nodeType":"FunctionDefinition","parameters":{"id":4742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4741,"mutability":"mutable","name":"value","nameLocation":"2073:5:24","nodeType":"VariableDeclaration","scope":4764,"src":"2066:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4740,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:24"},"returnParameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4764,"src":"2103:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4743,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:24"},"scope":6026,"src":"2042:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4783,"nodeType":"Block","src":"2389:100:24","statements":[{"id":4782,"nodeType":"UncheckedBlock","src":"2399:84:24","statements":[{"expression":{"arguments":[{"id":4773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"2442:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"2461:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4774,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"2449:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7659_$","typeString":"type(library Math)"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:24","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":7602,"src":"2449:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4772,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4784,4867,4887],"referencedDeclaration":4867,"src":"2430:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4771,"id":4781,"nodeType":"Return","src":"2423:49:24"}]}]},"documentation":{"id":4765,"nodeType":"StructuredDocumentation","src":"2216:94:24","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4784,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:24","nodeType":"FunctionDefinition","parameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"value","nameLocation":"2344:5:24","nodeType":"VariableDeclaration","scope":4784,"src":"2336:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:24"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4784,"src":"2374:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4769,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:24"},"scope":6026,"src":"2315:174:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4866,"nodeType":"Block","src":"2702:435:24","statements":[{"assignments":[4795],"declarations":[{"constant":false,"id":4795,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:24","nodeType":"VariableDeclaration","scope":4866,"src":"2712:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4794,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4797,"initialValue":{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"2733:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:24"},{"assignments":[4799],"declarations":[{"constant":false,"id":4799,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:24","nodeType":"VariableDeclaration","scope":4866,"src":"2748:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4798,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4808,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4803,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"2784:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4800,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:24"},{"expression":{"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4809,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"2805:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4811,"indexExpression":{"hexValue":"30","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4814,"nodeType":"ExpressionStatement","src":"2805:15:24"},{"expression":{"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4815,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"2830:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4817,"indexExpression":{"hexValue":"31","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4820,"nodeType":"ExpressionStatement","src":"2830:15:24"},{"body":{"id":4849,"nodeType":"Block","src":"2900:95:24","statements":[{"expression":{"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4835,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"2914:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4837,"indexExpression":{"id":4836,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"2921:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4838,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"2926:10:24","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4842,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4839,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"2937:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4844,"nodeType":"ExpressionStatement","src":"2914:40:24"},{"expression":{"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4845,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"2968:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4848,"nodeType":"ExpressionStatement","src":"2968:16:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4829,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"2888:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4850,"initializationExpression":{"assignments":[4822],"declarations":[{"constant":false,"id":4822,"mutability":"mutable","name":"i","nameLocation":"2868:1:24","nodeType":"VariableDeclaration","scope":4850,"src":"2860:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4828,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4824,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"2876:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:24"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:24","subExpression":{"id":4832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"2897:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4834,"nodeType":"ExpressionStatement","src":"2895:3:24"},"nodeType":"ForStatement","src":"2855:140:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4851,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"3008:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4860,"nodeType":"IfStatement","src":"3004:96:24","trueBody":{"id":4859,"nodeType":"Block","src":"3025:75:24","statements":[{"errorCall":{"arguments":[{"id":4855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"3075:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4856,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"3082:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4854,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"3046:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4858,"nodeType":"RevertStatement","src":"3039:50:24"}]}},{"expression":{"arguments":[{"id":4863,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"3123:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4861,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:24","typeDescriptions":{}}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4793,"id":4865,"nodeType":"Return","src":"3109:21:24"}]},"documentation":{"id":4785,"nodeType":"StructuredDocumentation","src":"2495:112:24","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4867,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:24","nodeType":"FunctionDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"value","nameLocation":"2641:5:24","nodeType":"VariableDeclaration","scope":4867,"src":"2633:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4786,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4789,"mutability":"mutable","name":"length","nameLocation":"2656:6:24","nodeType":"VariableDeclaration","scope":4867,"src":"2648:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:24"},"returnParameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4867,"src":"2687:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4791,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:24"},"scope":6026,"src":"2612:525:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4886,"nodeType":"Block","src":"3369:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4880,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"3414:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4878,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:24","typeDescriptions":{}}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4876,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:24","typeDescriptions":{}}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4883,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"3422:14:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4875,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4784,4867,4887],"referencedDeclaration":4867,"src":"3386:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4874,"id":4885,"nodeType":"Return","src":"3379:58:24"}]},"documentation":{"id":4868,"nodeType":"StructuredDocumentation","src":"3143:148:24","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4887,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:24","nodeType":"FunctionDefinition","parameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"addr","nameLocation":"3325:4:24","nodeType":"VariableDeclaration","scope":4887,"src":"3317:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4869,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:24"},"returnParameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4887,"src":"3354:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4872,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:24"},"scope":6026,"src":"3296:148:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4951,"nodeType":"Block","src":"3701:642:24","statements":[{"assignments":[4896],"declarations":[{"constant":false,"id":4896,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:24","nodeType":"VariableDeclaration","scope":4951,"src":"3711:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4895,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4903,"initialValue":{"arguments":[{"arguments":[{"id":4900,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"3751:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4899,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4784,4867,4887],"referencedDeclaration":4887,"src":"3739:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4897,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:24","typeDescriptions":{}}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:24"},{"assignments":[4905],"declarations":[{"constant":false,"id":4905,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:24","nodeType":"VariableDeclaration","scope":4951,"src":"3842:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4904,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4906,"nodeType":"VariableDeclarationStatement","src":"3842:17:24"},{"AST":{"nativeSrc":"3894:78:24","nodeType":"YulBlock","src":"3894:78:24","statements":[{"nativeSrc":"3908:54:24","nodeType":"YulAssignment","src":"3908:54:24","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:24","nodeType":"YulLiteral","src":"3925:2:24","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:24","nodeType":"YulIdentifier","src":"3943:6:24"},{"kind":"number","nativeSrc":"3951:4:24","nodeType":"YulLiteral","src":"3951:4:24","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:24","nodeType":"YulIdentifier","src":"3939:3:24"},"nativeSrc":"3939:17:24","nodeType":"YulFunctionCall","src":"3939:17:24"},{"kind":"number","nativeSrc":"3958:2:24","nodeType":"YulLiteral","src":"3958:2:24","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:24","nodeType":"YulIdentifier","src":"3929:9:24"},"nativeSrc":"3929:32:24","nodeType":"YulFunctionCall","src":"3929:32:24"}],"functionName":{"name":"shr","nativeSrc":"3921:3:24","nodeType":"YulIdentifier","src":"3921:3:24"},"nativeSrc":"3921:41:24","nodeType":"YulFunctionCall","src":"3921:41:24"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:24","nodeType":"YulIdentifier","src":"3908:9:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4896,"isOffset":false,"isSlot":false,"src":"3943:6:24","valueSize":1},{"declaration":4905,"isOffset":false,"isSlot":false,"src":"3908:9:24","valueSize":1}],"flags":["memory-safe"],"id":4907,"nodeType":"InlineAssembly","src":"3869:103:24"},{"body":{"id":4944,"nodeType":"Block","src":"4015:291:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"4121:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4925,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"4150:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4927,"indexExpression":{"id":4926,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"4157:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4923,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:24","typeDescriptions":{}}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4939,"nodeType":"IfStatement","src":"4117:150:24","trueBody":{"id":4938,"nodeType":"Block","src":"4167:100:24","statements":[{"expression":{"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4932,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"4235:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4934,"indexExpression":{"id":4933,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"4242:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4937,"nodeType":"ExpressionStatement","src":"4235:17:24"}]}},{"expression":{"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4940,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"4280:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4943,"nodeType":"ExpressionStatement","src":"4280:15:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4912,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"4003:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4945,"initializationExpression":{"assignments":[4909],"declarations":[{"constant":false,"id":4909,"mutability":"mutable","name":"i","nameLocation":"3995:1:24","nodeType":"VariableDeclaration","scope":4945,"src":"3987:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4911,"initialValue":{"hexValue":"3431","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:24","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:24"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:24","subExpression":{"id":4915,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"4012:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4917,"nodeType":"ExpressionStatement","src":"4010:3:24"},"nodeType":"ForStatement","src":"3982:324:24"},{"expression":{"arguments":[{"id":4948,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"4329:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4946,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:24","typeDescriptions":{}}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4894,"id":4950,"nodeType":"Return","src":"4315:21:24"}]},"documentation":{"id":4888,"nodeType":"StructuredDocumentation","src":"3450:165:24","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4952,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:24","nodeType":"FunctionDefinition","parameters":{"id":4891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4890,"mutability":"mutable","name":"addr","nameLocation":"3657:4:24","nodeType":"VariableDeclaration","scope":4952,"src":"3649:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4889,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:24"},"returnParameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4952,"src":"3686:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4892,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:24"},"scope":6026,"src":"3620:723:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4988,"nodeType":"Block","src":"4498:104:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"4521:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4962,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:24","typeDescriptions":{}}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:24","memberName":"length","nodeType":"MemberAccess","src":"4515:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"4540:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4967,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:24","typeDescriptions":{}}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:24","memberName":"length","nodeType":"MemberAccess","src":"4534:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"4569:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4974,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:24","typeDescriptions":{}}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4973,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4982,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"4592:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4980,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:24","typeDescriptions":{}}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4979,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4961,"id":4987,"nodeType":"Return","src":"4508:87:24"}]},"documentation":{"id":4953,"nodeType":"StructuredDocumentation","src":"4349:66:24","text":" @dev Returns true if the two strings are equal."},"id":4989,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:24","nodeType":"FunctionDefinition","parameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"a","nameLocation":"4449:1:24","nodeType":"VariableDeclaration","scope":4989,"src":"4435:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4954,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4957,"mutability":"mutable","name":"b","nameLocation":"4466:1:24","nodeType":"VariableDeclaration","scope":4989,"src":"4452:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4956,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:24"},"returnParameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4989,"src":"4492:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4959,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:24"},"scope":6026,"src":"4420:182:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5007,"nodeType":"Block","src":"4899:64:24","statements":[{"expression":{"arguments":[{"id":4998,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4926:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5002,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4942:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5000,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:24","typeDescriptions":{}}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:24","memberName":"length","nodeType":"MemberAccess","src":"4936:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4997,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[5008,5039],"referencedDeclaration":5039,"src":"4916:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4996,"id":5006,"nodeType":"Return","src":"4909:47:24"}]},"documentation":{"id":4990,"nodeType":"StructuredDocumentation","src":"4608:214:24","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":5008,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:24","nodeType":"FunctionDefinition","parameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"input","nameLocation":"4860:5:24","nodeType":"VariableDeclaration","scope":5008,"src":"4846:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4991,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:24"},"returnParameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5008,"src":"4890:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:24"},"scope":6026,"src":"4827:136:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5038,"nodeType":"Block","src":"5368:153:24","statements":[{"assignments":[5021,5023],"declarations":[{"constant":false,"id":5021,"mutability":"mutable","name":"success","nameLocation":"5384:7:24","nodeType":"VariableDeclaration","scope":5038,"src":"5379:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5020,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5023,"mutability":"mutable","name":"value","nameLocation":"5401:5:24","nodeType":"VariableDeclaration","scope":5038,"src":"5393:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5029,"initialValue":{"arguments":[{"id":5025,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"5423:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5026,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"5430:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5027,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"5437:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5024,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[5060,5097],"referencedDeclaration":5097,"src":"5410:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:24"},{"condition":{"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:24","subExpression":{"id":5030,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"5456:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5035,"nodeType":"IfStatement","src":"5451:41:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5032,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"5472:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5034,"nodeType":"RevertStatement","src":"5465:27:24"}},{"expression":{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"5509:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5019,"id":5037,"nodeType":"Return","src":"5502:12:24"}]},"documentation":{"id":5009,"nodeType":"StructuredDocumentation","src":"4969:294:24","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":5039,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:24","nodeType":"FunctionDefinition","parameters":{"id":5016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"input","nameLocation":"5301:5:24","nodeType":"VariableDeclaration","scope":5039,"src":"5287:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5010,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5013,"mutability":"mutable","name":"begin","nameLocation":"5316:5:24","nodeType":"VariableDeclaration","scope":5039,"src":"5308:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5012,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5015,"mutability":"mutable","name":"end","nameLocation":"5331:3:24","nodeType":"VariableDeclaration","scope":5039,"src":"5323:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:24"},"returnParameters":{"id":5019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5039,"src":"5359:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5017,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:24"},"scope":6026,"src":"5268:253:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5059,"nodeType":"Block","src":"5842:83:24","statements":[{"expression":{"arguments":[{"id":5050,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"5888:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5054,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"5904:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5052,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:24","typeDescriptions":{}}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:24","memberName":"length","nodeType":"MemberAccess","src":"5898:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5049,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"5859:28:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5048,"id":5058,"nodeType":"Return","src":"5852:66:24"}]},"documentation":{"id":5040,"nodeType":"StructuredDocumentation","src":"5527:215:24","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5060,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:24","nodeType":"FunctionDefinition","parameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"input","nameLocation":"5783:5:24","nodeType":"VariableDeclaration","scope":5060,"src":"5769:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5041,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:24"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5045,"mutability":"mutable","name":"success","nameLocation":"5818:7:24","nodeType":"VariableDeclaration","scope":5060,"src":"5813:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5044,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5047,"mutability":"mutable","name":"value","nameLocation":"5835:5:24","nodeType":"VariableDeclaration","scope":5060,"src":"5827:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5046,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:24"},"scope":6026,"src":"5747:178:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5096,"nodeType":"Block","src":"6327:144:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5074,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"6341:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5077,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"6353:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5075,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:24","typeDescriptions":{}}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:24","memberName":"length","nodeType":"MemberAccess","src":"6347:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5081,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"6370:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5082,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"6378:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5089,"nodeType":"IfStatement","src":"6337:63:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5073,"id":5088,"nodeType":"Return","src":"6383:17:24"}},{"expression":{"arguments":[{"id":5091,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"6446:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5092,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"6453:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5093,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"6460:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5090,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"6417:28:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5073,"id":5095,"nodeType":"Return","src":"6410:54:24"}]},"documentation":{"id":5061,"nodeType":"StructuredDocumentation","src":"5931:238:24","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5097,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:24","nodeType":"FunctionDefinition","parameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5063,"mutability":"mutable","name":"input","nameLocation":"6219:5:24","nodeType":"VariableDeclaration","scope":5097,"src":"6205:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5062,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5065,"mutability":"mutable","name":"begin","nameLocation":"6242:5:24","nodeType":"VariableDeclaration","scope":5097,"src":"6234:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5064,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5067,"mutability":"mutable","name":"end","nameLocation":"6265:3:24","nodeType":"VariableDeclaration","scope":5097,"src":"6257:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:24"},"returnParameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"success","nameLocation":"6303:7:24","nodeType":"VariableDeclaration","scope":5097,"src":"6298:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5069,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5072,"mutability":"mutable","name":"value","nameLocation":"6320:5:24","nodeType":"VariableDeclaration","scope":5097,"src":"6312:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:24"},"scope":6026,"src":"6174:297:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5166,"nodeType":"Block","src":"6874:347:24","statements":[{"assignments":[5112],"declarations":[{"constant":false,"id":5112,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:24","nodeType":"VariableDeclaration","scope":5166,"src":"6884:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5111,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5117,"initialValue":{"arguments":[{"id":5115,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"6912:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5113,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:24","typeDescriptions":{}}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:24"},{"assignments":[5119],"declarations":[{"constant":false,"id":5119,"mutability":"mutable","name":"result","nameLocation":"6937:6:24","nodeType":"VariableDeclaration","scope":5166,"src":"6929:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5121,"initialValue":{"hexValue":"30","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:24"},{"body":{"id":5160,"nodeType":"Block","src":"6995:189:24","statements":[{"assignments":[5133],"declarations":[{"constant":false,"id":5133,"mutability":"mutable","name":"chr","nameLocation":"7015:3:24","nodeType":"VariableDeclaration","scope":5160,"src":"7009:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5132,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5143,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5138,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"7064:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5139,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"7072:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5137,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"7041:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5135,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:24","typeDescriptions":{}}},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5134,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"7021:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5144,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"7094:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":5145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:24","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5151,"nodeType":"IfStatement","src":"7090:30:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5110,"id":5150,"nodeType":"Return","src":"7103:17:24"}},{"expression":{"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"7134:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5155,"nodeType":"ExpressionStatement","src":"7134:12:24"},{"expression":{"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"7160:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5157,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"7170:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5159,"nodeType":"ExpressionStatement","src":"7160:13:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"6981:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5127,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"6985:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5161,"initializationExpression":{"assignments":[5123],"declarations":[{"constant":false,"id":5123,"mutability":"mutable","name":"i","nameLocation":"6970:1:24","nodeType":"VariableDeclaration","scope":5161,"src":"6962:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5125,"initialValue":{"id":5124,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"6974:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:24","subExpression":{"id":5129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"6992:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5131,"nodeType":"ExpressionStatement","src":"6990:3:24"},"nodeType":"ForStatement","src":"6957:227:24"},{"expression":{"components":[{"hexValue":"74727565","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"7207:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5110,"id":5165,"nodeType":"Return","src":"7193:21:24"}]},"documentation":{"id":5098,"nodeType":"StructuredDocumentation","src":"6477:224:24","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5167,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:24","nodeType":"FunctionDefinition","parameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"input","nameLocation":"6767:5:24","nodeType":"VariableDeclaration","scope":5167,"src":"6753:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5099,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5102,"mutability":"mutable","name":"begin","nameLocation":"6790:5:24","nodeType":"VariableDeclaration","scope":5167,"src":"6782:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5104,"mutability":"mutable","name":"end","nameLocation":"6813:3:24","nodeType":"VariableDeclaration","scope":5167,"src":"6805:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:24"},"returnParameters":{"id":5110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"success","nameLocation":"6850:7:24","nodeType":"VariableDeclaration","scope":5167,"src":"6845:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5106,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5109,"mutability":"mutable","name":"value","nameLocation":"6867:5:24","nodeType":"VariableDeclaration","scope":5167,"src":"6859:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5108,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:24"},"scope":6026,"src":"6706:515:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5185,"nodeType":"Block","src":"7518:63:24","statements":[{"expression":{"arguments":[{"id":5176,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"7544:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5180,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"7560:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5178,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:24","typeDescriptions":{}}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:24","memberName":"length","nodeType":"MemberAccess","src":"7554:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5175,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[5186,5217],"referencedDeclaration":5217,"src":"7535:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5174,"id":5184,"nodeType":"Return","src":"7528:46:24"}]},"documentation":{"id":5168,"nodeType":"StructuredDocumentation","src":"7227:216:24","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5186,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:24","nodeType":"FunctionDefinition","parameters":{"id":5171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"input","nameLocation":"7480:5:24","nodeType":"VariableDeclaration","scope":5186,"src":"7466:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5169,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:24"},"returnParameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5186,"src":"7510:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5172,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:24"},"scope":6026,"src":"7448:133:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5216,"nodeType":"Block","src":"7986:151:24","statements":[{"assignments":[5199,5201],"declarations":[{"constant":false,"id":5199,"mutability":"mutable","name":"success","nameLocation":"8002:7:24","nodeType":"VariableDeclaration","scope":5216,"src":"7997:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5198,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5201,"mutability":"mutable","name":"value","nameLocation":"8018:5:24","nodeType":"VariableDeclaration","scope":5216,"src":"8011:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5200,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5207,"initialValue":{"arguments":[{"id":5203,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"8039:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5204,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"8046:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5205,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"8053:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5202,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[5238,5280],"referencedDeclaration":5280,"src":"8027:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:24"},{"condition":{"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:24","subExpression":{"id":5208,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"8072:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5213,"nodeType":"IfStatement","src":"8067:41:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5210,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"8088:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5212,"nodeType":"RevertStatement","src":"8081:27:24"}},{"expression":{"id":5214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"8125:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5197,"id":5215,"nodeType":"Return","src":"8118:12:24"}]},"documentation":{"id":5187,"nodeType":"StructuredDocumentation","src":"7587:296:24","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5217,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:24","nodeType":"FunctionDefinition","parameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5189,"mutability":"mutable","name":"input","nameLocation":"7920:5:24","nodeType":"VariableDeclaration","scope":5217,"src":"7906:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5188,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5191,"mutability":"mutable","name":"begin","nameLocation":"7935:5:24","nodeType":"VariableDeclaration","scope":5217,"src":"7927:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5193,"mutability":"mutable","name":"end","nameLocation":"7950:3:24","nodeType":"VariableDeclaration","scope":5217,"src":"7942:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5192,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:24"},"returnParameters":{"id":5197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5217,"src":"7978:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5195,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:24"},"scope":6026,"src":"7888:249:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5237,"nodeType":"Block","src":"8528:82:24","statements":[{"expression":{"arguments":[{"id":5228,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"8573:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5232,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"8589:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5230,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:24","typeDescriptions":{}}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:24","memberName":"length","nodeType":"MemberAccess","src":"8583:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5227,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"8545:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5226,"id":5236,"nodeType":"Return","src":"8538:65:24"}]},"documentation":{"id":5218,"nodeType":"StructuredDocumentation","src":"8143:287:24","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5238,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:24","nodeType":"FunctionDefinition","parameters":{"id":5221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5220,"mutability":"mutable","name":"input","nameLocation":"8470:5:24","nodeType":"VariableDeclaration","scope":5238,"src":"8456:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5219,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:24"},"returnParameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5223,"mutability":"mutable","name":"success","nameLocation":"8505:7:24","nodeType":"VariableDeclaration","scope":5238,"src":"8500:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5222,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5225,"mutability":"mutable","name":"value","nameLocation":"8521:5:24","nodeType":"VariableDeclaration","scope":5238,"src":"8514:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5224,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:24"},"scope":6026,"src":"8435:175:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":5243,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:24","nodeType":"VariableDeclaration","scope":6026,"src":"8616:50:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5239,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:24","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":5279,"nodeType":"Block","src":"9132:143:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5257,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"9146:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5260,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"9158:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5258,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:24","typeDescriptions":{}}},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:24","memberName":"length","nodeType":"MemberAccess","src":"9152:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5264,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"9175:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5265,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"9183:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5272,"nodeType":"IfStatement","src":"9142:63:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5256,"id":5271,"nodeType":"Return","src":"9188:17:24"}},{"expression":{"arguments":[{"id":5274,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"9250:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5275,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"9257:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5276,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"9264:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5273,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"9222:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5256,"id":5278,"nodeType":"Return","src":"9215:53:24"}]},"documentation":{"id":5244,"nodeType":"StructuredDocumentation","src":"8673:303:24","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5280,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:24","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5246,"mutability":"mutable","name":"input","nameLocation":"9025:5:24","nodeType":"VariableDeclaration","scope":5280,"src":"9011:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5245,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5248,"mutability":"mutable","name":"begin","nameLocation":"9048:5:24","nodeType":"VariableDeclaration","scope":5280,"src":"9040:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5250,"mutability":"mutable","name":"end","nameLocation":"9071:3:24","nodeType":"VariableDeclaration","scope":5280,"src":"9063:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5249,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:24"},"returnParameters":{"id":5256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"success","nameLocation":"9109:7:24","nodeType":"VariableDeclaration","scope":5280,"src":"9104:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5252,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5255,"mutability":"mutable","name":"value","nameLocation":"9125:5:24","nodeType":"VariableDeclaration","scope":5280,"src":"9118:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5254,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:24"},"scope":6026,"src":"8981:294:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5400,"nodeType":"Block","src":"9675:812:24","statements":[{"assignments":[5295],"declarations":[{"constant":false,"id":5295,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:24","nodeType":"VariableDeclaration","scope":5400,"src":"9685:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5294,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5300,"initialValue":{"arguments":[{"id":5298,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"9713:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5296,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:24","typeDescriptions":{}}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:24"},{"assignments":[5302],"declarations":[{"constant":false,"id":5302,"mutability":"mutable","name":"sign","nameLocation":"9783:4:24","nodeType":"VariableDeclaration","scope":5400,"src":"9776:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5301,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5318,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5303,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"9790:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5304,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"9799:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":5313,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"9847:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5314,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"9855:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5312,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"9824:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5310,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:24","typeDescriptions":{}}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:24","trueExpression":{"arguments":[{"hexValue":"30","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5306,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:24","typeDescriptions":{}}},"id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:24"},{"assignments":[5320],"declarations":[{"constant":false,"id":5320,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:24","nodeType":"VariableDeclaration","scope":5400,"src":"9943:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5319,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5327,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"9963:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5322,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:24","typeDescriptions":{}}},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:24"},{"assignments":[5329],"declarations":[{"constant":false,"id":5329,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:24","nodeType":"VariableDeclaration","scope":5400,"src":"9992:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5328,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5336,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"10012:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5331,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:24","typeDescriptions":{}}},"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:24"},{"assignments":[5338],"declarations":[{"constant":false,"id":5338,"mutability":"mutable","name":"offset","nameLocation":"10049:6:24","nodeType":"VariableDeclaration","scope":5400,"src":"10041:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5337,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5345,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5339,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10059:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":5340,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"10075:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"10058:37:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:24"},{"assignments":[5347,5349],"declarations":[{"constant":false,"id":5347,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:24","nodeType":"VariableDeclaration","scope":5400,"src":"10109:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5346,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5349,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:24","nodeType":"VariableDeclaration","scope":5400,"src":"10126:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5348,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5357,"initialValue":{"arguments":[{"id":5351,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"10159:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"10166:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5353,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"10174:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5355,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"10182:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5350,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[5060,5097],"referencedDeclaration":5097,"src":"10146:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5358,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"10201:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5359,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"10215:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5360,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"10226:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5378,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"10343:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5379,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"10357:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5381,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"10373:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5382,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"10385:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5293,"id":5397,"nodeType":"Return","src":"10463:17:24"},"id":5398,"nodeType":"IfStatement","src":"10339:141:24","trueBody":{"id":5393,"nodeType":"Block","src":"10401:56:24","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5387,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:24","memberName":"min","nodeType":"MemberAccess","src":"10429:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5293,"id":5392,"nodeType":"Return","src":"10415:31:24"}]}},"id":5399,"nodeType":"IfStatement","src":"10197:283:24","trueBody":{"id":5377,"nodeType":"Block","src":"10242:91:24","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":5364,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"10270:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5372,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"10312:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5370,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:24","typeDescriptions":{}}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:24","trueExpression":{"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:24","subExpression":{"arguments":[{"id":5367,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"10293:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5365,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:24","typeDescriptions":{}}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5293,"id":5376,"nodeType":"Return","src":"10256:66:24"}]}}]},"documentation":{"id":5281,"nodeType":"StructuredDocumentation","src":"9281:223:24","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5401,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:24","nodeType":"FunctionDefinition","parameters":{"id":5288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5283,"mutability":"mutable","name":"input","nameLocation":"9569:5:24","nodeType":"VariableDeclaration","scope":5401,"src":"9555:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5282,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5285,"mutability":"mutable","name":"begin","nameLocation":"9592:5:24","nodeType":"VariableDeclaration","scope":5401,"src":"9584:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5284,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5287,"mutability":"mutable","name":"end","nameLocation":"9615:3:24","nodeType":"VariableDeclaration","scope":5401,"src":"9607:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:24"},"returnParameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"success","nameLocation":"9652:7:24","nodeType":"VariableDeclaration","scope":5401,"src":"9647:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5289,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5292,"mutability":"mutable","name":"value","nameLocation":"9668:5:24","nodeType":"VariableDeclaration","scope":5401,"src":"9661:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5291,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:24"},"scope":6026,"src":"9509:978:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5419,"nodeType":"Block","src":"10832:67:24","statements":[{"expression":{"arguments":[{"id":5410,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"10862:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5414,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"10878:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5412,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:24","typeDescriptions":{}}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:24","memberName":"length","nodeType":"MemberAccess","src":"10872:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5409,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[5420,5451],"referencedDeclaration":5451,"src":"10849:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5408,"id":5418,"nodeType":"Return","src":"10842:50:24"}]},"documentation":{"id":5402,"nodeType":"StructuredDocumentation","src":"10493:259:24","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5420,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:24","nodeType":"FunctionDefinition","parameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"input","nameLocation":"10793:5:24","nodeType":"VariableDeclaration","scope":5420,"src":"10779:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5403,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:24"},"returnParameters":{"id":5408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5420,"src":"10823:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5406,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:24"},"scope":6026,"src":"10757:142:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5450,"nodeType":"Block","src":"11320:156:24","statements":[{"assignments":[5433,5435],"declarations":[{"constant":false,"id":5433,"mutability":"mutable","name":"success","nameLocation":"11336:7:24","nodeType":"VariableDeclaration","scope":5450,"src":"11331:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5432,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5435,"mutability":"mutable","name":"value","nameLocation":"11353:5:24","nodeType":"VariableDeclaration","scope":5450,"src":"11345:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5434,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5441,"initialValue":{"arguments":[{"id":5437,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"11378:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5438,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"11385:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5439,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"11392:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5436,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[5472,5509],"referencedDeclaration":5509,"src":"11362:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:24"},{"condition":{"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:24","subExpression":{"id":5442,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"11411:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5447,"nodeType":"IfStatement","src":"11406:41:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5444,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"11427:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5446,"nodeType":"RevertStatement","src":"11420:27:24"}},{"expression":{"id":5448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"11464:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5431,"id":5449,"nodeType":"Return","src":"11457:12:24"}]},"documentation":{"id":5421,"nodeType":"StructuredDocumentation","src":"10905:307:24","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5451,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:24","nodeType":"FunctionDefinition","parameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5423,"mutability":"mutable","name":"input","nameLocation":"11253:5:24","nodeType":"VariableDeclaration","scope":5451,"src":"11239:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5422,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5425,"mutability":"mutable","name":"begin","nameLocation":"11268:5:24","nodeType":"VariableDeclaration","scope":5451,"src":"11260:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5424,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5427,"mutability":"mutable","name":"end","nameLocation":"11283:3:24","nodeType":"VariableDeclaration","scope":5451,"src":"11275:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:24"},"returnParameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5451,"src":"11311:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:24"},"scope":6026,"src":"11217:259:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5471,"nodeType":"Block","src":"11803:86:24","statements":[{"expression":{"arguments":[{"id":5462,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"11852:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5466,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"11868:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5464,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:24","typeDescriptions":{}}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:24","memberName":"length","nodeType":"MemberAccess","src":"11862:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5461,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"11820:31:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5460,"id":5470,"nodeType":"Return","src":"11813:69:24"}]},"documentation":{"id":5452,"nodeType":"StructuredDocumentation","src":"11482:218:24","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5472,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:24","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5454,"mutability":"mutable","name":"input","nameLocation":"11744:5:24","nodeType":"VariableDeclaration","scope":5472,"src":"11730:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5453,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:24"},"returnParameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"success","nameLocation":"11779:7:24","nodeType":"VariableDeclaration","scope":5472,"src":"11774:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5456,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5459,"mutability":"mutable","name":"value","nameLocation":"11796:5:24","nodeType":"VariableDeclaration","scope":5472,"src":"11788:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:24"},"scope":6026,"src":"11705:184:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5508,"nodeType":"Block","src":"12297:147:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5486,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"12311:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5489,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"12323:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5487,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:24","typeDescriptions":{}}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:24","memberName":"length","nodeType":"MemberAccess","src":"12317:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"12340:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5494,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"12348:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5501,"nodeType":"IfStatement","src":"12307:63:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5485,"id":5500,"nodeType":"Return","src":"12353:17:24"}},{"expression":{"arguments":[{"id":5503,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"12419:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5504,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"12426:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5505,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"12433:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5502,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"12387:31:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5485,"id":5507,"nodeType":"Return","src":"12380:57:24"}]},"documentation":{"id":5473,"nodeType":"StructuredDocumentation","src":"11895:241:24","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5509,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:24","nodeType":"FunctionDefinition","parameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"input","nameLocation":"12189:5:24","nodeType":"VariableDeclaration","scope":5509,"src":"12175:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5474,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5477,"mutability":"mutable","name":"begin","nameLocation":"12212:5:24","nodeType":"VariableDeclaration","scope":5509,"src":"12204:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5479,"mutability":"mutable","name":"end","nameLocation":"12235:3:24","nodeType":"VariableDeclaration","scope":5509,"src":"12227:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:24"},"returnParameters":{"id":5485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5482,"mutability":"mutable","name":"success","nameLocation":"12273:7:24","nodeType":"VariableDeclaration","scope":5509,"src":"12268:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5481,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5484,"mutability":"mutable","name":"value","nameLocation":"12290:5:24","nodeType":"VariableDeclaration","scope":5509,"src":"12282:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5483,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:24"},"scope":6026,"src":"12141:303:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5611,"nodeType":"Block","src":"12853:881:24","statements":[{"assignments":[5524],"declarations":[{"constant":false,"id":5524,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:24","nodeType":"VariableDeclaration","scope":5611,"src":"12863:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5523,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5529,"initialValue":{"arguments":[{"id":5527,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"12891:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5525,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:24","typeDescriptions":{}}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:24"},{"assignments":[5531],"declarations":[{"constant":false,"id":5531,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:24","nodeType":"VariableDeclaration","scope":5611,"src":"12945:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5530,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5551,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5532,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"12963:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5533,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"12969:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5541,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"13013:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5542,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"13021:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5540,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"12990:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5538,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:24","typeDescriptions":{}}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5545,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:24","typeDescriptions":{}}},"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:24"},{"assignments":[5553],"declarations":[{"constant":false,"id":5553,"mutability":"mutable","name":"offset","nameLocation":"13133:6:24","nodeType":"VariableDeclaration","scope":5611,"src":"13125:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5552,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5559,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5554,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"13142:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"13142:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:24"},{"assignments":[5561],"declarations":[{"constant":false,"id":5561,"mutability":"mutable","name":"result","nameLocation":"13183:6:24","nodeType":"VariableDeclaration","scope":5611,"src":"13175:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5560,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5563,"initialValue":{"hexValue":"30","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:24"},{"body":{"id":5605,"nodeType":"Block","src":"13250:447:24","statements":[{"assignments":[5577],"declarations":[{"constant":false,"id":5577,"mutability":"mutable","name":"chr","nameLocation":"13270:3:24","nodeType":"VariableDeclaration","scope":5605,"src":"13264:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5576,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5587,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5582,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"13319:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"13327:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5581,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"13296:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5579,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:24","typeDescriptions":{}}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5578,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"13276:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5588,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"13349:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":5589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5595,"nodeType":"IfStatement","src":"13345:31:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5522,"id":5594,"nodeType":"Return","src":"13359:17:24"}},{"expression":{"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"13390:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5599,"nodeType":"ExpressionStatement","src":"13390:12:24"},{"id":5604,"nodeType":"UncheckedBlock","src":"13416:271:24","statements":[{"expression":{"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"13659:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5601,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"13669:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5603,"nodeType":"ExpressionStatement","src":"13659:13:24"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"13236:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5571,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"13240:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5606,"initializationExpression":{"assignments":[5565],"declarations":[{"constant":false,"id":5565,"mutability":"mutable","name":"i","nameLocation":"13216:1:24","nodeType":"VariableDeclaration","scope":5606,"src":"13208:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5564,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5569,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5566,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"13220:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5567,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"13228:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:24","subExpression":{"id":5573,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"13247:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5575,"nodeType":"ExpressionStatement","src":"13245:3:24"},"nodeType":"ForStatement","src":"13203:494:24"},{"expression":{"components":[{"hexValue":"74727565","id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"13720:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5522,"id":5610,"nodeType":"Return","src":"13706:21:24"}]},"documentation":{"id":5510,"nodeType":"StructuredDocumentation","src":"12450:227:24","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5612,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:24","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"input","nameLocation":"12746:5:24","nodeType":"VariableDeclaration","scope":5612,"src":"12732:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5511,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5514,"mutability":"mutable","name":"begin","nameLocation":"12769:5:24","nodeType":"VariableDeclaration","scope":5612,"src":"12761:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5513,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5516,"mutability":"mutable","name":"end","nameLocation":"12792:3:24","nodeType":"VariableDeclaration","scope":5612,"src":"12784:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5515,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:24"},"returnParameters":{"id":5522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"success","nameLocation":"12829:7:24","nodeType":"VariableDeclaration","scope":5612,"src":"12824:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5518,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5521,"mutability":"mutable","name":"value","nameLocation":"12846:5:24","nodeType":"VariableDeclaration","scope":5612,"src":"12838:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:24"},"scope":6026,"src":"12682:1052:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5630,"nodeType":"Block","src":"14032:67:24","statements":[{"expression":{"arguments":[{"id":5621,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"14062:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5625,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"14078:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5623,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:24","typeDescriptions":{}}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:24","memberName":"length","nodeType":"MemberAccess","src":"14072:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5620,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[5631,5662],"referencedDeclaration":5662,"src":"14049:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5619,"id":5629,"nodeType":"Return","src":"14042:50:24"}]},"documentation":{"id":5613,"nodeType":"StructuredDocumentation","src":"13740:212:24","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5631,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:24","nodeType":"FunctionDefinition","parameters":{"id":5616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5615,"mutability":"mutable","name":"input","nameLocation":"13993:5:24","nodeType":"VariableDeclaration","scope":5631,"src":"13979:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5614,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:24"},"returnParameters":{"id":5619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5631,"src":"14023:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5617,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:24"},"scope":6026,"src":"13957:142:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5661,"nodeType":"Block","src":"14472:165:24","statements":[{"assignments":[5644,5646],"declarations":[{"constant":false,"id":5644,"mutability":"mutable","name":"success","nameLocation":"14488:7:24","nodeType":"VariableDeclaration","scope":5661,"src":"14483:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5643,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5646,"mutability":"mutable","name":"value","nameLocation":"14505:5:24","nodeType":"VariableDeclaration","scope":5661,"src":"14497:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5645,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5652,"initialValue":{"arguments":[{"id":5648,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"14530:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5649,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"14537:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5650,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"14544:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5647,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5683,5787],"referencedDeclaration":5787,"src":"14514:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:24"},{"condition":{"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:24","subExpression":{"id":5653,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"14563:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5658,"nodeType":"IfStatement","src":"14558:50:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5655,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"14579:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5657,"nodeType":"RevertStatement","src":"14572:36:24"}},{"expression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"14625:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5642,"id":5660,"nodeType":"Return","src":"14618:12:24"}]},"documentation":{"id":5632,"nodeType":"StructuredDocumentation","src":"14105:259:24","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5662,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:24","nodeType":"FunctionDefinition","parameters":{"id":5639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"input","nameLocation":"14405:5:24","nodeType":"VariableDeclaration","scope":5662,"src":"14391:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5633,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5636,"mutability":"mutable","name":"begin","nameLocation":"14420:5:24","nodeType":"VariableDeclaration","scope":5662,"src":"14412:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5635,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5638,"mutability":"mutable","name":"end","nameLocation":"14435:3:24","nodeType":"VariableDeclaration","scope":5662,"src":"14427:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5637,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:24"},"returnParameters":{"id":5642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5662,"src":"14463:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5640,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:24"},"scope":6026,"src":"14369:268:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5682,"nodeType":"Block","src":"14944:70:24","statements":[{"expression":{"arguments":[{"id":5673,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"14977:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5677,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"14993:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5675,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:24","typeDescriptions":{}}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:24","memberName":"length","nodeType":"MemberAccess","src":"14987:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5672,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5683,5787],"referencedDeclaration":5787,"src":"14961:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5671,"id":5681,"nodeType":"Return","src":"14954:53:24"}]},"documentation":{"id":5663,"nodeType":"StructuredDocumentation","src":"14643:198:24","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":5683,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:24","nodeType":"FunctionDefinition","parameters":{"id":5666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5665,"mutability":"mutable","name":"input","nameLocation":"14885:5:24","nodeType":"VariableDeclaration","scope":5683,"src":"14871:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5664,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:24"},"returnParameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5668,"mutability":"mutable","name":"success","nameLocation":"14920:7:24","nodeType":"VariableDeclaration","scope":5683,"src":"14915:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5667,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5670,"mutability":"mutable","name":"value","nameLocation":"14937:5:24","nodeType":"VariableDeclaration","scope":5683,"src":"14929:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5669,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:24"},"scope":6026,"src":"14846:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5786,"nodeType":"Block","src":"15407:733:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"15421:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5700,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"15433:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5698,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:24","typeDescriptions":{}}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:24","memberName":"length","nodeType":"MemberAccess","src":"15427:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5704,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"15450:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5705,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"15458:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5715,"nodeType":"IfStatement","src":"15417:72:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5709,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:24","typeDescriptions":{}}},"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5696,"id":5714,"nodeType":"Return","src":"15463:26:24"}},{"assignments":[5717],"declarations":[{"constant":false,"id":5717,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:24","nodeType":"VariableDeclaration","scope":5786,"src":"15500:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5716,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5740,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5718,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"15518:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"15524:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":5729,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"15574:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5727,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:24","typeDescriptions":{}}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5731,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"15582:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5726,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"15545:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5724,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:24","typeDescriptions":{}}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5734,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:24","typeDescriptions":{}}},"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:24"},{"assignments":[5742],"declarations":[{"constant":false,"id":5742,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:24","nodeType":"VariableDeclaration","scope":5786,"src":"15686:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5741,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5750,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5744,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"15716:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"15716:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5751,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"15803:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5752,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"15809:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5754,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"15818:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5784,"nodeType":"Block","src":"16083:51:24","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5778,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:24","typeDescriptions":{}}},"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5696,"id":5783,"nodeType":"Return","src":"16097:26:24"}]},"id":5785,"nodeType":"IfStatement","src":"15799:335:24","trueBody":{"id":5776,"nodeType":"Block","src":"15834:243:24","statements":[{"assignments":[5757,5759],"declarations":[{"constant":false,"id":5757,"mutability":"mutable","name":"s","nameLocation":"15955:1:24","nodeType":"VariableDeclaration","scope":5776,"src":"15950:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5756,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5759,"mutability":"mutable","name":"v","nameLocation":"15966:1:24","nodeType":"VariableDeclaration","scope":5776,"src":"15958:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5758,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5765,"initialValue":{"arguments":[{"id":5761,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"16003:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5762,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"16010:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5763,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"16017:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5760,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"15971:31:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:24"},{"expression":{"components":[{"id":5766,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"16043:1:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":5771,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"16062:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5769,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:24","typeDescriptions":{}}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5767,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:24","typeDescriptions":{}}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5696,"id":5775,"nodeType":"Return","src":"16035:31:24"}]}}]},"documentation":{"id":5684,"nodeType":"StructuredDocumentation","src":"15020:226:24","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":5787,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:24","nodeType":"FunctionDefinition","parameters":{"id":5691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"input","nameLocation":"15299:5:24","nodeType":"VariableDeclaration","scope":5787,"src":"15285:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5685,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5688,"mutability":"mutable","name":"begin","nameLocation":"15322:5:24","nodeType":"VariableDeclaration","scope":5787,"src":"15314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5687,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5690,"mutability":"mutable","name":"end","nameLocation":"15345:3:24","nodeType":"VariableDeclaration","scope":5787,"src":"15337:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5689,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:24"},"returnParameters":{"id":5696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5693,"mutability":"mutable","name":"success","nameLocation":"15383:7:24","nodeType":"VariableDeclaration","scope":5787,"src":"15378:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5692,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5695,"mutability":"mutable","name":"value","nameLocation":"15400:5:24","nodeType":"VariableDeclaration","scope":5787,"src":"15392:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5694,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:24"},"scope":6026,"src":"15251:889:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5846,"nodeType":"Block","src":"16209:461:24","statements":[{"assignments":[5795],"declarations":[{"constant":false,"id":5795,"mutability":"mutable","name":"value","nameLocation":"16225:5:24","nodeType":"VariableDeclaration","scope":5846,"src":"16219:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5794,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5800,"initialValue":{"arguments":[{"id":5798,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"16239:3:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5796,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:24","typeDescriptions":{}}},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:24"},{"id":5843,"nodeType":"UncheckedBlock","src":"16403:238:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16431:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:24","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16445:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:24","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16491:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16505:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":5816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:24","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16552:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":5824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16566:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:24","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5835,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:24","memberName":"max","nodeType":"MemberAccess","src":"16615:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5793,"id":5839,"nodeType":"Return","src":"16608:22:24"},"id":5840,"nodeType":"IfStatement","src":"16548:82:24","trueBody":{"expression":{"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16578:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:24","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5833,"nodeType":"ExpressionStatement","src":"16578:11:24"}},"id":5841,"nodeType":"IfStatement","src":"16487:143:24","trueBody":{"expression":{"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16518:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:24","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5822,"nodeType":"ExpressionStatement","src":"16518:11:24"}},"id":5842,"nodeType":"IfStatement","src":"16427:203:24","trueBody":{"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16457:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5811,"nodeType":"ExpressionStatement","src":"16457:11:24"}}]},{"expression":{"id":5844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16658:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5793,"id":5845,"nodeType":"Return","src":"16651:12:24"}]},"id":5847,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:24","nodeType":"FunctionDefinition","parameters":{"id":5790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5789,"mutability":"mutable","name":"chr","nameLocation":"16175:3:24","nodeType":"VariableDeclaration","scope":5847,"src":"16168:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5788,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:24"},"returnParameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5847,"src":"16202:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5791,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:24"},"scope":6026,"src":"16146:524:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6012,"nodeType":"Block","src":"17336:1331:24","statements":[{"assignments":[5856],"declarations":[{"constant":false,"id":5856,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:24","nodeType":"VariableDeclaration","scope":6012,"src":"17346:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5855,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5861,"initialValue":{"arguments":[{"id":5859,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"17374:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5857,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:24","typeDescriptions":{}}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:24"},{"assignments":[5863],"declarations":[{"constant":false,"id":5863,"mutability":"mutable","name":"output","nameLocation":"17403:6:24","nodeType":"VariableDeclaration","scope":6012,"src":"17390:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5862,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5871,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5867,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"17426:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:24","memberName":"length","nodeType":"MemberAccess","src":"17426:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5864,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:24"},{"assignments":[5873],"declarations":[{"constant":false,"id":5873,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:24","nodeType":"VariableDeclaration","scope":6012,"src":"17473:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5872,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5875,"initialValue":{"hexValue":"30","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:24"},{"body":{"id":6004,"nodeType":"Block","src":"17548:854:24","statements":[{"assignments":[5887],"declarations":[{"constant":false,"id":5887,"mutability":"mutable","name":"char","nameLocation":"17569:4:24","nodeType":"VariableDeclaration","scope":6004,"src":"17562:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5886,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5895,"initialValue":{"arguments":[{"arguments":[{"id":5891,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"17606:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5892,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"17614:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5890,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"17583:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5888,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:24","typeDescriptions":{}}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:24"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5896,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"17637:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":5900,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"17672:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5898,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:24","typeDescriptions":{}}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6002,"nodeType":"Block","src":"18330:62:24","statements":[{"expression":{"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5995,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"18348:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5998,"indexExpression":{"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:24","subExpression":{"id":5996,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"18355:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5999,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"18373:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6001,"nodeType":"ExpressionStatement","src":"18348:29:24"}]},"id":6003,"nodeType":"IfStatement","src":"17631:761:24","trueBody":{"id":5994,"nodeType":"Block","src":"17687:637:24","statements":[{"expression":{"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5909,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"17705:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5912,"indexExpression":{"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:24","subExpression":{"id":5910,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"17712:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5915,"nodeType":"ExpressionStatement","src":"17705:29:24"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5916,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"17756:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":5917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5926,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"17825:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":5927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:24","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"17894:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5946,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"17963:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:24","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5956,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"18032:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:24","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5966,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"18101:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:24","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5976,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"18171:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:24","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5987,"nodeType":"IfStatement","src":"18167:143:24","trueBody":{"id":5986,"nodeType":"Block","src":"18185:125:24","statements":[{"expression":{"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5979,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"18263:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5982,"indexExpression":{"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:24","subExpression":{"id":5980,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"18270:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5985,"nodeType":"ExpressionStatement","src":"18263:28:24"}]}},"id":5988,"nodeType":"IfStatement","src":"18097:213:24","trueBody":{"expression":{"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5969,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"18115:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5972,"indexExpression":{"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:24","subExpression":{"id":5970,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"18122:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5975,"nodeType":"ExpressionStatement","src":"18115:29:24"}},"id":5989,"nodeType":"IfStatement","src":"18028:282:24","trueBody":{"expression":{"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5959,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"18046:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5962,"indexExpression":{"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:24","subExpression":{"id":5960,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"18053:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5965,"nodeType":"ExpressionStatement","src":"18046:28:24"}},"id":5990,"nodeType":"IfStatement","src":"17959:351:24","trueBody":{"expression":{"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5949,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"17977:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5952,"indexExpression":{"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:24","subExpression":{"id":5950,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"17984:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5955,"nodeType":"ExpressionStatement","src":"17977:28:24"}},"id":5991,"nodeType":"IfStatement","src":"17890:420:24","trueBody":{"expression":{"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5939,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"17908:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5942,"indexExpression":{"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:24","subExpression":{"id":5940,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"17915:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5945,"nodeType":"ExpressionStatement","src":"17908:28:24"}},"id":5992,"nodeType":"IfStatement","src":"17821:489:24","trueBody":{"expression":{"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5929,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"17839:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5932,"indexExpression":{"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:24","subExpression":{"id":5930,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"17846:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5935,"nodeType":"ExpressionStatement","src":"17839:28:24"}},"id":5993,"nodeType":"IfStatement","src":"17752:558:24","trueBody":{"expression":{"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5919,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"17770:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5922,"indexExpression":{"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:24","subExpression":{"id":5920,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"17777:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":5923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5925,"nodeType":"ExpressionStatement","src":"17770:28:24"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5879,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"17524:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5880,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"17528:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:24","memberName":"length","nodeType":"MemberAccess","src":"17528:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6005,"initializationExpression":{"assignments":[5877],"declarations":[{"constant":false,"id":5877,"mutability":"mutable","name":"i","nameLocation":"17521:1:24","nodeType":"VariableDeclaration","scope":6005,"src":"17513:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5876,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5878,"nodeType":"VariableDeclarationStatement","src":"17513:9:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:24","subExpression":{"id":5883,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"17545:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5885,"nodeType":"ExpressionStatement","src":"17543:3:24"},"nodeType":"ForStatement","src":"17508:894:24"},{"AST":{"nativeSrc":"18500:129:24","nodeType":"YulBlock","src":"18500:129:24","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:24","nodeType":"YulIdentifier","src":"18521:6:24"},{"name":"outputLength","nativeSrc":"18529:12:24","nodeType":"YulIdentifier","src":"18529:12:24"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:24","nodeType":"YulIdentifier","src":"18514:6:24"},"nativeSrc":"18514:28:24","nodeType":"YulFunctionCall","src":"18514:28:24"},"nativeSrc":"18514:28:24","nodeType":"YulExpressionStatement","src":"18514:28:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:24","nodeType":"YulLiteral","src":"18562:4:24","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:24","nodeType":"YulIdentifier","src":"18572:6:24"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:24","nodeType":"YulLiteral","src":"18584:1:24","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:24","nodeType":"YulLiteral","src":"18591:1:24","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:24","nodeType":"YulIdentifier","src":"18598:12:24"},{"kind":"number","nativeSrc":"18612:2:24","nodeType":"YulLiteral","src":"18612:2:24","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:24","nodeType":"YulIdentifier","src":"18594:3:24"},"nativeSrc":"18594:21:24","nodeType":"YulFunctionCall","src":"18594:21:24"}],"functionName":{"name":"shr","nativeSrc":"18587:3:24","nodeType":"YulIdentifier","src":"18587:3:24"},"nativeSrc":"18587:29:24","nodeType":"YulFunctionCall","src":"18587:29:24"}],"functionName":{"name":"shl","nativeSrc":"18580:3:24","nodeType":"YulIdentifier","src":"18580:3:24"},"nativeSrc":"18580:37:24","nodeType":"YulFunctionCall","src":"18580:37:24"}],"functionName":{"name":"add","nativeSrc":"18568:3:24","nodeType":"YulIdentifier","src":"18568:3:24"},"nativeSrc":"18568:50:24","nodeType":"YulFunctionCall","src":"18568:50:24"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:24","nodeType":"YulIdentifier","src":"18555:6:24"},"nativeSrc":"18555:64:24","nodeType":"YulFunctionCall","src":"18555:64:24"},"nativeSrc":"18555:64:24","nodeType":"YulExpressionStatement","src":"18555:64:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":5863,"isOffset":false,"isSlot":false,"src":"18521:6:24","valueSize":1},{"declaration":5863,"isOffset":false,"isSlot":false,"src":"18572:6:24","valueSize":1},{"declaration":5873,"isOffset":false,"isSlot":false,"src":"18529:12:24","valueSize":1},{"declaration":5873,"isOffset":false,"isSlot":false,"src":"18598:12:24","valueSize":1}],"flags":["memory-safe"],"id":6006,"nodeType":"InlineAssembly","src":"18475:154:24"},{"expression":{"arguments":[{"id":6009,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"18653:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6007,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:24","typeDescriptions":{}}},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5854,"id":6011,"nodeType":"Return","src":"18639:21:24"}]},"documentation":{"id":5848,"nodeType":"StructuredDocumentation","src":"16676:576:24","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":6013,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:24","nodeType":"FunctionDefinition","parameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"input","nameLocation":"17291:5:24","nodeType":"VariableDeclaration","scope":6013,"src":"17277:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5849,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:24"},"returnParameters":{"id":5854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6013,"src":"17321:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5852,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:24"},"scope":6026,"src":"17257:1410:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6024,"nodeType":"Block","src":"19052:225:24","statements":[{"AST":{"nativeSrc":"19201:70:24","nodeType":"YulBlock","src":"19201:70:24","statements":[{"nativeSrc":"19215:46:24","nodeType":"YulAssignment","src":"19215:46:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:24","nodeType":"YulIdentifier","src":"19238:6:24"},{"kind":"number","nativeSrc":"19246:4:24","nodeType":"YulLiteral","src":"19246:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:24","nodeType":"YulIdentifier","src":"19234:3:24"},"nativeSrc":"19234:17:24","nodeType":"YulFunctionCall","src":"19234:17:24"},{"name":"offset","nativeSrc":"19253:6:24","nodeType":"YulIdentifier","src":"19253:6:24"}],"functionName":{"name":"add","nativeSrc":"19230:3:24","nodeType":"YulIdentifier","src":"19230:3:24"},"nativeSrc":"19230:30:24","nodeType":"YulFunctionCall","src":"19230:30:24"}],"functionName":{"name":"mload","nativeSrc":"19224:5:24","nodeType":"YulIdentifier","src":"19224:5:24"},"nativeSrc":"19224:37:24","nodeType":"YulFunctionCall","src":"19224:37:24"},"variableNames":[{"name":"value","nativeSrc":"19215:5:24","nodeType":"YulIdentifier","src":"19215:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6016,"isOffset":false,"isSlot":false,"src":"19238:6:24","valueSize":1},{"declaration":6018,"isOffset":false,"isSlot":false,"src":"19253:6:24","valueSize":1},{"declaration":6021,"isOffset":false,"isSlot":false,"src":"19215:5:24","valueSize":1}],"flags":["memory-safe"],"id":6023,"nodeType":"InlineAssembly","src":"19176:95:24"}]},"documentation":{"id":6014,"nodeType":"StructuredDocumentation","src":"18673:268:24","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":6025,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:24","nodeType":"FunctionDefinition","parameters":{"id":6019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:24","nodeType":"VariableDeclaration","scope":6025,"src":"18978:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6015,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6018,"mutability":"mutable","name":"offset","nameLocation":"19007:6:24","nodeType":"VariableDeclaration","scope":6025,"src":"18999:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6017,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:24"},"returnParameters":{"id":6022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"mutability":"mutable","name":"value","nameLocation":"19045:5:24","nodeType":"VariableDeclaration","scope":6025,"src":"19037:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:24"},"scope":6026,"src":"18946:331:24","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":6027,"src":"297:18982:24","usedErrors":[4684,4687,4690],"usedEvents":[]}],"src":"101:19179:24"},"id":24},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[6038]},"id":6039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6028,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":6029,"nodeType":"StructuredDocumentation","src":"142:280:25","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":6038,"linearizedBaseContracts":[6038],"name":"IERC165","nameLocation":"433:7:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6030,"nodeType":"StructuredDocumentation","src":"447:340:25","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":6037,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:25","nodeType":"FunctionDefinition","parameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6032,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:25","nodeType":"VariableDeclaration","scope":6037,"src":"819:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6031,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:25"},"returnParameters":{"id":6036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6037,"src":"862:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6034,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:25"},"scope":6038,"src":"792:76:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6039,"src":"423:447:25","usedErrors":[],"usedEvents":[]}],"src":"115:756:25"},"id":25},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7659],"Panic":[4370],"SafeCast":[9424]},"id":7660,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":6042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7660,"sourceUnit":4371,"src":"129:35:26","symbolAliases":[{"foreign":{"id":6041,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"137:5:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7660,"sourceUnit":9425,"src":"165:40:26","symbolAliases":[{"foreign":{"id":6043,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"173:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":6045,"nodeType":"StructuredDocumentation","src":"207:73:26","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7659,"linearizedBaseContracts":[7659],"name":"Math","nameLocation":"289:4:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":6050,"members":[{"id":6046,"name":"Floor","nameLocation":"324:5:26","nodeType":"EnumValue","src":"324:5:26"},{"id":6047,"name":"Ceil","nameLocation":"367:4:26","nodeType":"EnumValue","src":"367:4:26"},{"id":6048,"name":"Trunc","nameLocation":"409:5:26","nodeType":"EnumValue","src":"409:5:26"},{"id":6049,"name":"Expand","nameLocation":"439:6:26","nodeType":"EnumValue","src":"439:6:26"}],"name":"Rounding","nameLocation":"305:8:26","nodeType":"EnumDefinition","src":"300:169:26"},{"body":{"id":6063,"nodeType":"Block","src":"731:112:26","statements":[{"AST":{"nativeSrc":"766:71:26","nodeType":"YulBlock","src":"766:71:26","statements":[{"nativeSrc":"780:16:26","nodeType":"YulAssignment","src":"780:16:26","value":{"arguments":[{"name":"a","nativeSrc":"791:1:26","nodeType":"YulIdentifier","src":"791:1:26"},{"name":"b","nativeSrc":"794:1:26","nodeType":"YulIdentifier","src":"794:1:26"}],"functionName":{"name":"add","nativeSrc":"787:3:26","nodeType":"YulIdentifier","src":"787:3:26"},"nativeSrc":"787:9:26","nodeType":"YulFunctionCall","src":"787:9:26"},"variableNames":[{"name":"low","nativeSrc":"780:3:26","nodeType":"YulIdentifier","src":"780:3:26"}]},{"nativeSrc":"809:18:26","nodeType":"YulAssignment","src":"809:18:26","value":{"arguments":[{"name":"low","nativeSrc":"820:3:26","nodeType":"YulIdentifier","src":"820:3:26"},{"name":"a","nativeSrc":"825:1:26","nodeType":"YulIdentifier","src":"825:1:26"}],"functionName":{"name":"lt","nativeSrc":"817:2:26","nodeType":"YulIdentifier","src":"817:2:26"},"nativeSrc":"817:10:26","nodeType":"YulFunctionCall","src":"817:10:26"},"variableNames":[{"name":"high","nativeSrc":"809:4:26","nodeType":"YulIdentifier","src":"809:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6053,"isOffset":false,"isSlot":false,"src":"791:1:26","valueSize":1},{"declaration":6053,"isOffset":false,"isSlot":false,"src":"825:1:26","valueSize":1},{"declaration":6055,"isOffset":false,"isSlot":false,"src":"794:1:26","valueSize":1},{"declaration":6058,"isOffset":false,"isSlot":false,"src":"809:4:26","valueSize":1},{"declaration":6060,"isOffset":false,"isSlot":false,"src":"780:3:26","valueSize":1},{"declaration":6060,"isOffset":false,"isSlot":false,"src":"820:3:26","valueSize":1}],"flags":["memory-safe"],"id":6062,"nodeType":"InlineAssembly","src":"741:96:26"}]},"documentation":{"id":6051,"nodeType":"StructuredDocumentation","src":"475:163:26","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":6064,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:26","nodeType":"FunctionDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"a","nameLocation":"667:1:26","nodeType":"VariableDeclaration","scope":6064,"src":"659:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6055,"mutability":"mutable","name":"b","nameLocation":"678:1:26","nodeType":"VariableDeclaration","scope":6064,"src":"670:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6054,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:26"},"returnParameters":{"id":6061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"high","nameLocation":"712:4:26","nodeType":"VariableDeclaration","scope":6064,"src":"704:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6057,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6060,"mutability":"mutable","name":"low","nameLocation":"726:3:26","nodeType":"VariableDeclaration","scope":6064,"src":"718:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6059,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:26"},"scope":7659,"src":"643:200:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6077,"nodeType":"Block","src":"1115:462:26","statements":[{"AST":{"nativeSrc":"1437:134:26","nodeType":"YulBlock","src":"1437:134:26","statements":[{"nativeSrc":"1451:30:26","nodeType":"YulVariableDeclaration","src":"1451:30:26","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:26","nodeType":"YulIdentifier","src":"1468:1:26"},{"name":"b","nativeSrc":"1471:1:26","nodeType":"YulIdentifier","src":"1471:1:26"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:26","nodeType":"YulLiteral","src":"1478:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:26","nodeType":"YulIdentifier","src":"1474:3:26"},"nativeSrc":"1474:6:26","nodeType":"YulFunctionCall","src":"1474:6:26"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:26","nodeType":"YulIdentifier","src":"1461:6:26"},"nativeSrc":"1461:20:26","nodeType":"YulFunctionCall","src":"1461:20:26"},"variables":[{"name":"mm","nativeSrc":"1455:2:26","nodeType":"YulTypedName","src":"1455:2:26","type":""}]},{"nativeSrc":"1494:16:26","nodeType":"YulAssignment","src":"1494:16:26","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:26","nodeType":"YulIdentifier","src":"1505:1:26"},{"name":"b","nativeSrc":"1508:1:26","nodeType":"YulIdentifier","src":"1508:1:26"}],"functionName":{"name":"mul","nativeSrc":"1501:3:26","nodeType":"YulIdentifier","src":"1501:3:26"},"nativeSrc":"1501:9:26","nodeType":"YulFunctionCall","src":"1501:9:26"},"variableNames":[{"name":"low","nativeSrc":"1494:3:26","nodeType":"YulIdentifier","src":"1494:3:26"}]},{"nativeSrc":"1523:38:26","nodeType":"YulAssignment","src":"1523:38:26","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:26","nodeType":"YulIdentifier","src":"1539:2:26"},{"name":"low","nativeSrc":"1543:3:26","nodeType":"YulIdentifier","src":"1543:3:26"}],"functionName":{"name":"sub","nativeSrc":"1535:3:26","nodeType":"YulIdentifier","src":"1535:3:26"},"nativeSrc":"1535:12:26","nodeType":"YulFunctionCall","src":"1535:12:26"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:26","nodeType":"YulIdentifier","src":"1552:2:26"},{"name":"low","nativeSrc":"1556:3:26","nodeType":"YulIdentifier","src":"1556:3:26"}],"functionName":{"name":"lt","nativeSrc":"1549:2:26","nodeType":"YulIdentifier","src":"1549:2:26"},"nativeSrc":"1549:11:26","nodeType":"YulFunctionCall","src":"1549:11:26"}],"functionName":{"name":"sub","nativeSrc":"1531:3:26","nodeType":"YulIdentifier","src":"1531:3:26"},"nativeSrc":"1531:30:26","nodeType":"YulFunctionCall","src":"1531:30:26"},"variableNames":[{"name":"high","nativeSrc":"1523:4:26","nodeType":"YulIdentifier","src":"1523:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6067,"isOffset":false,"isSlot":false,"src":"1468:1:26","valueSize":1},{"declaration":6067,"isOffset":false,"isSlot":false,"src":"1505:1:26","valueSize":1},{"declaration":6069,"isOffset":false,"isSlot":false,"src":"1471:1:26","valueSize":1},{"declaration":6069,"isOffset":false,"isSlot":false,"src":"1508:1:26","valueSize":1},{"declaration":6072,"isOffset":false,"isSlot":false,"src":"1523:4:26","valueSize":1},{"declaration":6074,"isOffset":false,"isSlot":false,"src":"1494:3:26","valueSize":1},{"declaration":6074,"isOffset":false,"isSlot":false,"src":"1543:3:26","valueSize":1},{"declaration":6074,"isOffset":false,"isSlot":false,"src":"1556:3:26","valueSize":1}],"flags":["memory-safe"],"id":6076,"nodeType":"InlineAssembly","src":"1412:159:26"}]},"documentation":{"id":6065,"nodeType":"StructuredDocumentation","src":"849:173:26","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":6078,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:26","nodeType":"FunctionDefinition","parameters":{"id":6070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6067,"mutability":"mutable","name":"a","nameLocation":"1051:1:26","nodeType":"VariableDeclaration","scope":6078,"src":"1043:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6069,"mutability":"mutable","name":"b","nameLocation":"1062:1:26","nodeType":"VariableDeclaration","scope":6078,"src":"1054:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:26"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"high","nameLocation":"1096:4:26","nodeType":"VariableDeclaration","scope":6078,"src":"1088:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6074,"mutability":"mutable","name":"low","nameLocation":"1110:3:26","nodeType":"VariableDeclaration","scope":6078,"src":"1102:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:26"},"scope":7659,"src":"1027:550:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6112,"nodeType":"Block","src":"1784:149:26","statements":[{"id":6111,"nodeType":"UncheckedBlock","src":"1794:133:26","statements":[{"assignments":[6091],"declarations":[{"constant":false,"id":6091,"mutability":"mutable","name":"c","nameLocation":"1826:1:26","nodeType":"VariableDeclaration","scope":6111,"src":"1818:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6095,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6092,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"1830:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6093,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"1834:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:26"},{"expression":{"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6096,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"1849:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6097,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"1859:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"1864:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6101,"nodeType":"ExpressionStatement","src":"1849:16:26"},{"expression":{"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"1879:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6103,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"1888:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6106,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"1908:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6104,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"1892:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"1892:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6110,"nodeType":"ExpressionStatement","src":"1879:37:26"}]}]},"documentation":{"id":6079,"nodeType":"StructuredDocumentation","src":"1583:105:26","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":6113,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:26","nodeType":"FunctionDefinition","parameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"a","nameLocation":"1717:1:26","nodeType":"VariableDeclaration","scope":6113,"src":"1709:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6083,"mutability":"mutable","name":"b","nameLocation":"1728:1:26","nodeType":"VariableDeclaration","scope":6113,"src":"1720:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:26"},"returnParameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6086,"mutability":"mutable","name":"success","nameLocation":"1759:7:26","nodeType":"VariableDeclaration","scope":6113,"src":"1754:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6085,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6088,"mutability":"mutable","name":"result","nameLocation":"1776:6:26","nodeType":"VariableDeclaration","scope":6113,"src":"1768:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:26"},"scope":7659,"src":"1693:240:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6147,"nodeType":"Block","src":"2143:149:26","statements":[{"id":6146,"nodeType":"UncheckedBlock","src":"2153:133:26","statements":[{"assignments":[6126],"declarations":[{"constant":false,"id":6126,"mutability":"mutable","name":"c","nameLocation":"2185:1:26","nodeType":"VariableDeclaration","scope":6146,"src":"2177:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6130,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6127,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"2189:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6128,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"2193:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:26"},{"expression":{"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6131,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"2208:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6132,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"2218:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"2223:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"ExpressionStatement","src":"2208:16:26"},{"expression":{"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6137,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"2238:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6138,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"2247:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6141,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"2267:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6139,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"2251:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"2251:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6145,"nodeType":"ExpressionStatement","src":"2238:37:26"}]}]},"documentation":{"id":6114,"nodeType":"StructuredDocumentation","src":"1939:108:26","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":6148,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:26","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6116,"mutability":"mutable","name":"a","nameLocation":"2076:1:26","nodeType":"VariableDeclaration","scope":6148,"src":"2068:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6118,"mutability":"mutable","name":"b","nameLocation":"2087:1:26","nodeType":"VariableDeclaration","scope":6148,"src":"2079:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:26"},"returnParameters":{"id":6124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"success","nameLocation":"2118:7:26","nodeType":"VariableDeclaration","scope":6148,"src":"2113:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6120,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6123,"mutability":"mutable","name":"result","nameLocation":"2135:6:26","nodeType":"VariableDeclaration","scope":6148,"src":"2127:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:26"},"scope":7659,"src":"2052:240:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6177,"nodeType":"Block","src":"2505:391:26","statements":[{"id":6176,"nodeType":"UncheckedBlock","src":"2515:375:26","statements":[{"assignments":[6161],"declarations":[{"constant":false,"id":6161,"mutability":"mutable","name":"c","nameLocation":"2547:1:26","nodeType":"VariableDeclaration","scope":6176,"src":"2539:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6160,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6165,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"2551:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6163,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"2555:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:26"},{"AST":{"nativeSrc":"2595:188:26","nodeType":"YulBlock","src":"2595:188:26","statements":[{"nativeSrc":"2727:42:26","nodeType":"YulAssignment","src":"2727:42:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:26","nodeType":"YulIdentifier","src":"2748:1:26"},{"name":"a","nativeSrc":"2751:1:26","nodeType":"YulIdentifier","src":"2751:1:26"}],"functionName":{"name":"div","nativeSrc":"2744:3:26","nodeType":"YulIdentifier","src":"2744:3:26"},"nativeSrc":"2744:9:26","nodeType":"YulFunctionCall","src":"2744:9:26"},{"name":"b","nativeSrc":"2755:1:26","nodeType":"YulIdentifier","src":"2755:1:26"}],"functionName":{"name":"eq","nativeSrc":"2741:2:26","nodeType":"YulIdentifier","src":"2741:2:26"},"nativeSrc":"2741:16:26","nodeType":"YulFunctionCall","src":"2741:16:26"},{"arguments":[{"name":"a","nativeSrc":"2766:1:26","nodeType":"YulIdentifier","src":"2766:1:26"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:26","nodeType":"YulIdentifier","src":"2759:6:26"},"nativeSrc":"2759:9:26","nodeType":"YulFunctionCall","src":"2759:9:26"}],"functionName":{"name":"or","nativeSrc":"2738:2:26","nodeType":"YulIdentifier","src":"2738:2:26"},"nativeSrc":"2738:31:26","nodeType":"YulFunctionCall","src":"2738:31:26"},"variableNames":[{"name":"success","nativeSrc":"2727:7:26","nodeType":"YulIdentifier","src":"2727:7:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6151,"isOffset":false,"isSlot":false,"src":"2751:1:26","valueSize":1},{"declaration":6151,"isOffset":false,"isSlot":false,"src":"2766:1:26","valueSize":1},{"declaration":6153,"isOffset":false,"isSlot":false,"src":"2755:1:26","valueSize":1},{"declaration":6161,"isOffset":false,"isSlot":false,"src":"2748:1:26","valueSize":1},{"declaration":6156,"isOffset":false,"isSlot":false,"src":"2727:7:26","valueSize":1}],"flags":["memory-safe"],"id":6166,"nodeType":"InlineAssembly","src":"2570:213:26"},{"expression":{"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"2842:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6168,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"2851:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6171,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"2871:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6169,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"2855:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"2855:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6175,"nodeType":"ExpressionStatement","src":"2842:37:26"}]}]},"documentation":{"id":6149,"nodeType":"StructuredDocumentation","src":"2298:111:26","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":6178,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:26","nodeType":"FunctionDefinition","parameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6151,"mutability":"mutable","name":"a","nameLocation":"2438:1:26","nodeType":"VariableDeclaration","scope":6178,"src":"2430:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6153,"mutability":"mutable","name":"b","nameLocation":"2449:1:26","nodeType":"VariableDeclaration","scope":6178,"src":"2441:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:26"},"returnParameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6156,"mutability":"mutable","name":"success","nameLocation":"2480:7:26","nodeType":"VariableDeclaration","scope":6178,"src":"2475:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6155,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6158,"mutability":"mutable","name":"result","nameLocation":"2497:6:26","nodeType":"VariableDeclaration","scope":6178,"src":"2489:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:26"},"scope":7659,"src":"2414:482:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6198,"nodeType":"Block","src":"3111:231:26","statements":[{"id":6197,"nodeType":"UncheckedBlock","src":"3121:215:26","statements":[{"expression":{"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6190,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"3145:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"3155:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6195,"nodeType":"ExpressionStatement","src":"3145:15:26"},{"AST":{"nativeSrc":"3199:127:26","nodeType":"YulBlock","src":"3199:127:26","statements":[{"nativeSrc":"3293:19:26","nodeType":"YulAssignment","src":"3293:19:26","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:26","nodeType":"YulIdentifier","src":"3307:1:26"},{"name":"b","nativeSrc":"3310:1:26","nodeType":"YulIdentifier","src":"3310:1:26"}],"functionName":{"name":"div","nativeSrc":"3303:3:26","nodeType":"YulIdentifier","src":"3303:3:26"},"nativeSrc":"3303:9:26","nodeType":"YulFunctionCall","src":"3303:9:26"},"variableNames":[{"name":"result","nativeSrc":"3293:6:26","nodeType":"YulIdentifier","src":"3293:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6181,"isOffset":false,"isSlot":false,"src":"3307:1:26","valueSize":1},{"declaration":6183,"isOffset":false,"isSlot":false,"src":"3310:1:26","valueSize":1},{"declaration":6188,"isOffset":false,"isSlot":false,"src":"3293:6:26","valueSize":1}],"flags":["memory-safe"],"id":6196,"nodeType":"InlineAssembly","src":"3174:152:26"}]}]},"documentation":{"id":6179,"nodeType":"StructuredDocumentation","src":"2902:113:26","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":6199,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:26","nodeType":"FunctionDefinition","parameters":{"id":6184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"a","nameLocation":"3044:1:26","nodeType":"VariableDeclaration","scope":6199,"src":"3036:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6180,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6183,"mutability":"mutable","name":"b","nameLocation":"3055:1:26","nodeType":"VariableDeclaration","scope":6199,"src":"3047:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:26"},"returnParameters":{"id":6189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"success","nameLocation":"3086:7:26","nodeType":"VariableDeclaration","scope":6199,"src":"3081:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6185,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6188,"mutability":"mutable","name":"result","nameLocation":"3103:6:26","nodeType":"VariableDeclaration","scope":6199,"src":"3095:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6187,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:26"},"scope":7659,"src":"3020:322:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6219,"nodeType":"Block","src":"3567:231:26","statements":[{"id":6218,"nodeType":"UncheckedBlock","src":"3577:215:26","statements":[{"expression":{"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6211,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"3601:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6212,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"3611:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6216,"nodeType":"ExpressionStatement","src":"3601:15:26"},{"AST":{"nativeSrc":"3655:127:26","nodeType":"YulBlock","src":"3655:127:26","statements":[{"nativeSrc":"3749:19:26","nodeType":"YulAssignment","src":"3749:19:26","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:26","nodeType":"YulIdentifier","src":"3763:1:26"},{"name":"b","nativeSrc":"3766:1:26","nodeType":"YulIdentifier","src":"3766:1:26"}],"functionName":{"name":"mod","nativeSrc":"3759:3:26","nodeType":"YulIdentifier","src":"3759:3:26"},"nativeSrc":"3759:9:26","nodeType":"YulFunctionCall","src":"3759:9:26"},"variableNames":[{"name":"result","nativeSrc":"3749:6:26","nodeType":"YulIdentifier","src":"3749:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6202,"isOffset":false,"isSlot":false,"src":"3763:1:26","valueSize":1},{"declaration":6204,"isOffset":false,"isSlot":false,"src":"3766:1:26","valueSize":1},{"declaration":6209,"isOffset":false,"isSlot":false,"src":"3749:6:26","valueSize":1}],"flags":["memory-safe"],"id":6217,"nodeType":"InlineAssembly","src":"3630:152:26"}]}]},"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"3348:123:26","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":6220,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:26","nodeType":"FunctionDefinition","parameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"a","nameLocation":"3500:1:26","nodeType":"VariableDeclaration","scope":6220,"src":"3492:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6204,"mutability":"mutable","name":"b","nameLocation":"3511:1:26","nodeType":"VariableDeclaration","scope":6220,"src":"3503:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:26"},"returnParameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"success","nameLocation":"3542:7:26","nodeType":"VariableDeclaration","scope":6220,"src":"3537:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6206,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6209,"mutability":"mutable","name":"result","nameLocation":"3559:6:26","nodeType":"VariableDeclaration","scope":6220,"src":"3551:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6208,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:26"},"scope":7659,"src":"3476:322:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6249,"nodeType":"Block","src":"3989:122:26","statements":[{"assignments":[6231,6233],"declarations":[{"constant":false,"id":6231,"mutability":"mutable","name":"success","nameLocation":"4005:7:26","nodeType":"VariableDeclaration","scope":6249,"src":"4000:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6230,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6233,"mutability":"mutable","name":"result","nameLocation":"4022:6:26","nodeType":"VariableDeclaration","scope":6249,"src":"4014:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6232,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6238,"initialValue":{"arguments":[{"id":6235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"4039:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6236,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"4042:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6234,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"4032:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:26"},{"expression":{"arguments":[{"id":6240,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"4069:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"4078:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6243,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6242,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:26","memberName":"max","nodeType":"MemberAccess","src":"4086:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6239,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"4061:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6229,"id":6248,"nodeType":"Return","src":"4054:50:26"}]},"documentation":{"id":6221,"nodeType":"StructuredDocumentation","src":"3804:103:26","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6250,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:26","nodeType":"FunctionDefinition","parameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6223,"mutability":"mutable","name":"a","nameLocation":"3943:1:26","nodeType":"VariableDeclaration","scope":6250,"src":"3935:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6222,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6225,"mutability":"mutable","name":"b","nameLocation":"3954:1:26","nodeType":"VariableDeclaration","scope":6250,"src":"3946:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:26"},"returnParameters":{"id":6229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6250,"src":"3980:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6227,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:26"},"scope":7659,"src":"3912:199:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6269,"nodeType":"Block","src":"4294:73:26","statements":[{"assignments":[null,6261],"declarations":[null,{"constant":false,"id":6261,"mutability":"mutable","name":"result","nameLocation":"4315:6:26","nodeType":"VariableDeclaration","scope":6269,"src":"4307:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6260,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6266,"initialValue":{"arguments":[{"id":6263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"4332:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"4335:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6262,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"4325:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:26"},{"expression":{"id":6267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"4354:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6259,"id":6268,"nodeType":"Return","src":"4347:13:26"}]},"documentation":{"id":6251,"nodeType":"StructuredDocumentation","src":"4117:95:26","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":6270,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:26","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6253,"mutability":"mutable","name":"a","nameLocation":"4248:1:26","nodeType":"VariableDeclaration","scope":6270,"src":"4240:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6252,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6255,"mutability":"mutable","name":"b","nameLocation":"4259:1:26","nodeType":"VariableDeclaration","scope":6270,"src":"4251:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6254,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:26"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6270,"src":"4285:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6257,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:26"},"scope":7659,"src":"4217:150:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6299,"nodeType":"Block","src":"4564:122:26","statements":[{"assignments":[6281,6283],"declarations":[{"constant":false,"id":6281,"mutability":"mutable","name":"success","nameLocation":"4580:7:26","nodeType":"VariableDeclaration","scope":6299,"src":"4575:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6280,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6283,"mutability":"mutable","name":"result","nameLocation":"4597:6:26","nodeType":"VariableDeclaration","scope":6299,"src":"4589:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6288,"initialValue":{"arguments":[{"id":6285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"4614:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"4617:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6284,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"4607:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:26"},{"expression":{"arguments":[{"id":6290,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"4644:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6291,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"4653:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:26","memberName":"max","nodeType":"MemberAccess","src":"4661:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6289,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"4636:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6279,"id":6298,"nodeType":"Return","src":"4629:50:26"}]},"documentation":{"id":6271,"nodeType":"StructuredDocumentation","src":"4373:109:26","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6300,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:26","nodeType":"FunctionDefinition","parameters":{"id":6276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"a","nameLocation":"4518:1:26","nodeType":"VariableDeclaration","scope":6300,"src":"4510:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6272,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6275,"mutability":"mutable","name":"b","nameLocation":"4529:1:26","nodeType":"VariableDeclaration","scope":6300,"src":"4521:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:26"},"returnParameters":{"id":6279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6300,"src":"4555:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6277,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:26"},"scope":7659,"src":"4487:199:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6326,"nodeType":"Block","src":"5158:207:26","statements":[{"id":6325,"nodeType":"UncheckedBlock","src":"5168:191:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"5306:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"5312:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6314,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"5316:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6319,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"5337:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6317,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"5321:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"5321:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6311,"id":6324,"nodeType":"Return","src":"5299:49:26"}]}]},"documentation":{"id":6301,"nodeType":"StructuredDocumentation","src":"4692:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6327,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:26","nodeType":"FunctionDefinition","parameters":{"id":6308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6303,"mutability":"mutable","name":"condition","nameLocation":"5093:9:26","nodeType":"VariableDeclaration","scope":6327,"src":"5088:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6302,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6305,"mutability":"mutable","name":"a","nameLocation":"5112:1:26","nodeType":"VariableDeclaration","scope":6327,"src":"5104:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6304,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6307,"mutability":"mutable","name":"b","nameLocation":"5123:1:26","nodeType":"VariableDeclaration","scope":6327,"src":"5115:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6306,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:26"},"returnParameters":{"id":6311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6327,"src":"5149:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6309,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:26"},"scope":7659,"src":"5071:294:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6345,"nodeType":"Block","src":"5502:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"5527:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"5531:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"5534:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6342,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"5537:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6337,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"5519:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6336,"id":6344,"nodeType":"Return","src":"5512:27:26"}]},"documentation":{"id":6328,"nodeType":"StructuredDocumentation","src":"5371:59:26","text":" @dev Returns the largest of two numbers."},"id":6346,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:26","nodeType":"FunctionDefinition","parameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6330,"mutability":"mutable","name":"a","nameLocation":"5456:1:26","nodeType":"VariableDeclaration","scope":6346,"src":"5448:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6332,"mutability":"mutable","name":"b","nameLocation":"5467:1:26","nodeType":"VariableDeclaration","scope":6346,"src":"5459:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6331,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:26"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6346,"src":"5493:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6334,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:26"},"scope":7659,"src":"5435:111:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6364,"nodeType":"Block","src":"5684:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"5709:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"5713:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"5716:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6361,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"5719:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6356,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"5701:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6355,"id":6363,"nodeType":"Return","src":"5694:27:26"}]},"documentation":{"id":6347,"nodeType":"StructuredDocumentation","src":"5552:60:26","text":" @dev Returns the smallest of two numbers."},"id":6365,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:26","nodeType":"FunctionDefinition","parameters":{"id":6352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"a","nameLocation":"5638:1:26","nodeType":"VariableDeclaration","scope":6365,"src":"5630:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6351,"mutability":"mutable","name":"b","nameLocation":"5649:1:26","nodeType":"VariableDeclaration","scope":6365,"src":"5641:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6350,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:26"},"returnParameters":{"id":6355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6365,"src":"5675:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6353,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:26"},"scope":7659,"src":"5617:111:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6387,"nodeType":"Block","src":"5912:82:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"5967:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"5971:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"5977:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6380,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"5981:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6374,"id":6386,"nodeType":"Return","src":"5959:28:26"}]},"documentation":{"id":6366,"nodeType":"StructuredDocumentation","src":"5734:102:26","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6388,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:26","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6368,"mutability":"mutable","name":"a","nameLocation":"5866:1:26","nodeType":"VariableDeclaration","scope":6388,"src":"5858:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6367,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6370,"mutability":"mutable","name":"b","nameLocation":"5877:1:26","nodeType":"VariableDeclaration","scope":6388,"src":"5869:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:26"},"returnParameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6388,"src":"5903:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6372,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:26"},"scope":7659,"src":"5841:153:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6428,"nodeType":"Block","src":"6286:633:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"6300:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6409,"nodeType":"IfStatement","src":"6296:150:26","trueBody":{"id":6408,"nodeType":"Block","src":"6308:138:26","statements":[{"expression":{"arguments":[{"expression":{"id":6404,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"6412:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4337,"src":"6412:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6401,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"6400:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"6400:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6407,"nodeType":"ExpressionStatement","src":"6400:35:26"}]}},{"id":6427,"nodeType":"UncheckedBlock","src":"6829:84:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"6876:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6410,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"6860:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"6860:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"6887:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6420,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"6896:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6397,"id":6426,"nodeType":"Return","src":"6853:49:26"}]}]},"documentation":{"id":6389,"nodeType":"StructuredDocumentation","src":"6000:210:26","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":6429,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:26","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6391,"mutability":"mutable","name":"a","nameLocation":"6240:1:26","nodeType":"VariableDeclaration","scope":6429,"src":"6232:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6390,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6393,"mutability":"mutable","name":"b","nameLocation":"6251:1:26","nodeType":"VariableDeclaration","scope":6429,"src":"6243:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6392,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:26"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6429,"src":"6277:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6395,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:26"},"scope":7659,"src":"6215:704:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6564,"nodeType":"Block","src":"7340:3585:26","statements":[{"id":6563,"nodeType":"UncheckedBlock","src":"7350:3569:26","statements":[{"assignments":[6442,6444],"declarations":[{"constant":false,"id":6442,"mutability":"mutable","name":"high","nameLocation":"7383:4:26","nodeType":"VariableDeclaration","scope":6563,"src":"7375:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6441,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6444,"mutability":"mutable","name":"low","nameLocation":"7397:3:26","nodeType":"VariableDeclaration","scope":6563,"src":"7389:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6443,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6449,"initialValue":{"arguments":[{"id":6446,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"7411:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6447,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"7414:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6445,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"7404:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6450,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"7498:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6458,"nodeType":"IfStatement","src":"7494:365:26","trueBody":{"id":6457,"nodeType":"Block","src":"7509:350:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6453,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"7827:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6454,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"7833:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6440,"id":6456,"nodeType":"Return","src":"7820:24:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"7969:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6460,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"7984:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6477,"nodeType":"IfStatement","src":"7965:142:26","trueBody":{"id":6476,"nodeType":"Block","src":"7990:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6466,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"8028:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6469,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"8046:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4337,"src":"8046:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6471,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"8070:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:26","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4333,"src":"8070:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6465,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"8020:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6462,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"8008:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"8008:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6475,"nodeType":"ExpressionStatement","src":"8008:84:26"}]}},{"assignments":[6479],"declarations":[{"constant":false,"id":6479,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:26","nodeType":"VariableDeclaration","scope":6563,"src":"8359:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6478,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6480,"nodeType":"VariableDeclarationStatement","src":"8359:17:26"},{"AST":{"nativeSrc":"8415:283:26","nodeType":"YulBlock","src":"8415:283:26","statements":[{"nativeSrc":"8484:38:26","nodeType":"YulAssignment","src":"8484:38:26","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:26","nodeType":"YulIdentifier","src":"8504:1:26"},{"name":"y","nativeSrc":"8507:1:26","nodeType":"YulIdentifier","src":"8507:1:26"},{"name":"denominator","nativeSrc":"8510:11:26","nodeType":"YulIdentifier","src":"8510:11:26"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:26","nodeType":"YulIdentifier","src":"8497:6:26"},"nativeSrc":"8497:25:26","nodeType":"YulFunctionCall","src":"8497:25:26"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:26","nodeType":"YulIdentifier","src":"8484:9:26"}]},{"nativeSrc":"8604:37:26","nodeType":"YulAssignment","src":"8604:37:26","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:26","nodeType":"YulIdentifier","src":"8616:4:26"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:26","nodeType":"YulIdentifier","src":"8625:9:26"},{"name":"low","nativeSrc":"8636:3:26","nodeType":"YulIdentifier","src":"8636:3:26"}],"functionName":{"name":"gt","nativeSrc":"8622:2:26","nodeType":"YulIdentifier","src":"8622:2:26"},"nativeSrc":"8622:18:26","nodeType":"YulFunctionCall","src":"8622:18:26"}],"functionName":{"name":"sub","nativeSrc":"8612:3:26","nodeType":"YulIdentifier","src":"8612:3:26"},"nativeSrc":"8612:29:26","nodeType":"YulFunctionCall","src":"8612:29:26"},"variableNames":[{"name":"high","nativeSrc":"8604:4:26","nodeType":"YulIdentifier","src":"8604:4:26"}]},{"nativeSrc":"8658:26:26","nodeType":"YulAssignment","src":"8658:26:26","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:26","nodeType":"YulIdentifier","src":"8669:3:26"},{"name":"remainder","nativeSrc":"8674:9:26","nodeType":"YulIdentifier","src":"8674:9:26"}],"functionName":{"name":"sub","nativeSrc":"8665:3:26","nodeType":"YulIdentifier","src":"8665:3:26"},"nativeSrc":"8665:19:26","nodeType":"YulFunctionCall","src":"8665:19:26"},"variableNames":[{"name":"low","nativeSrc":"8658:3:26","nodeType":"YulIdentifier","src":"8658:3:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6436,"isOffset":false,"isSlot":false,"src":"8510:11:26","valueSize":1},{"declaration":6442,"isOffset":false,"isSlot":false,"src":"8604:4:26","valueSize":1},{"declaration":6442,"isOffset":false,"isSlot":false,"src":"8616:4:26","valueSize":1},{"declaration":6444,"isOffset":false,"isSlot":false,"src":"8636:3:26","valueSize":1},{"declaration":6444,"isOffset":false,"isSlot":false,"src":"8658:3:26","valueSize":1},{"declaration":6444,"isOffset":false,"isSlot":false,"src":"8669:3:26","valueSize":1},{"declaration":6479,"isOffset":false,"isSlot":false,"src":"8484:9:26","valueSize":1},{"declaration":6479,"isOffset":false,"isSlot":false,"src":"8625:9:26","valueSize":1},{"declaration":6479,"isOffset":false,"isSlot":false,"src":"8674:9:26","valueSize":1},{"declaration":6432,"isOffset":false,"isSlot":false,"src":"8504:1:26","valueSize":1},{"declaration":6434,"isOffset":false,"isSlot":false,"src":"8507:1:26","valueSize":1}],"flags":["memory-safe"],"id":6481,"nodeType":"InlineAssembly","src":"8390:308:26"},{"assignments":[6483],"declarations":[{"constant":false,"id":6483,"mutability":"mutable","name":"twos","nameLocation":"8910:4:26","nodeType":"VariableDeclaration","scope":6563,"src":"8902:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6482,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6490,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6484,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"8917:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6486,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"8936:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:26"},{"AST":{"nativeSrc":"8987:359:26","nodeType":"YulBlock","src":"8987:359:26","statements":[{"nativeSrc":"9052:37:26","nodeType":"YulAssignment","src":"9052:37:26","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:26","nodeType":"YulIdentifier","src":"9071:11:26"},{"name":"twos","nativeSrc":"9084:4:26","nodeType":"YulIdentifier","src":"9084:4:26"}],"functionName":{"name":"div","nativeSrc":"9067:3:26","nodeType":"YulIdentifier","src":"9067:3:26"},"nativeSrc":"9067:22:26","nodeType":"YulFunctionCall","src":"9067:22:26"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:26","nodeType":"YulIdentifier","src":"9052:11:26"}]},{"nativeSrc":"9153:21:26","nodeType":"YulAssignment","src":"9153:21:26","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:26","nodeType":"YulIdentifier","src":"9164:3:26"},{"name":"twos","nativeSrc":"9169:4:26","nodeType":"YulIdentifier","src":"9169:4:26"}],"functionName":{"name":"div","nativeSrc":"9160:3:26","nodeType":"YulIdentifier","src":"9160:3:26"},"nativeSrc":"9160:14:26","nodeType":"YulFunctionCall","src":"9160:14:26"},"variableNames":[{"name":"low","nativeSrc":"9153:3:26","nodeType":"YulIdentifier","src":"9153:3:26"}]},{"nativeSrc":"9293:39:26","nodeType":"YulAssignment","src":"9293:39:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:26","nodeType":"YulLiteral","src":"9313:1:26","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:26","nodeType":"YulIdentifier","src":"9316:4:26"}],"functionName":{"name":"sub","nativeSrc":"9309:3:26","nodeType":"YulIdentifier","src":"9309:3:26"},"nativeSrc":"9309:12:26","nodeType":"YulFunctionCall","src":"9309:12:26"},{"name":"twos","nativeSrc":"9323:4:26","nodeType":"YulIdentifier","src":"9323:4:26"}],"functionName":{"name":"div","nativeSrc":"9305:3:26","nodeType":"YulIdentifier","src":"9305:3:26"},"nativeSrc":"9305:23:26","nodeType":"YulFunctionCall","src":"9305:23:26"},{"kind":"number","nativeSrc":"9330:1:26","nodeType":"YulLiteral","src":"9330:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:26","nodeType":"YulIdentifier","src":"9301:3:26"},"nativeSrc":"9301:31:26","nodeType":"YulFunctionCall","src":"9301:31:26"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:26","nodeType":"YulIdentifier","src":"9293:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6436,"isOffset":false,"isSlot":false,"src":"9052:11:26","valueSize":1},{"declaration":6436,"isOffset":false,"isSlot":false,"src":"9071:11:26","valueSize":1},{"declaration":6444,"isOffset":false,"isSlot":false,"src":"9153:3:26","valueSize":1},{"declaration":6444,"isOffset":false,"isSlot":false,"src":"9164:3:26","valueSize":1},{"declaration":6483,"isOffset":false,"isSlot":false,"src":"9084:4:26","valueSize":1},{"declaration":6483,"isOffset":false,"isSlot":false,"src":"9169:4:26","valueSize":1},{"declaration":6483,"isOffset":false,"isSlot":false,"src":"9293:4:26","valueSize":1},{"declaration":6483,"isOffset":false,"isSlot":false,"src":"9316:4:26","valueSize":1},{"declaration":6483,"isOffset":false,"isSlot":false,"src":"9323:4:26","valueSize":1}],"flags":["memory-safe"],"id":6491,"nodeType":"InlineAssembly","src":"8962:384:26"},{"expression":{"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6492,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"9409:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6493,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"9416:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6494,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6483,"src":"9423:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6497,"nodeType":"ExpressionStatement","src":"9409:18:26"},{"assignments":[6499],"declarations":[{"constant":false,"id":6499,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:26","nodeType":"VariableDeclaration","scope":6563,"src":"9762:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6498,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6506,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6501,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"9785:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:26"},{"expression":{"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6507,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10018:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6509,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"10033:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6510,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10047:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6514,"nodeType":"ExpressionStatement","src":"10018:36:26"},{"expression":{"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6515,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10088:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6517,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"10103:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6518,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10117:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6522,"nodeType":"ExpressionStatement","src":"10088:36:26"},{"expression":{"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6523,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10160:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6525,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"10175:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6526,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10189:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6530,"nodeType":"ExpressionStatement","src":"10160:36:26"},{"expression":{"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6531,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10231:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6533,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"10246:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6534,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10260:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6538,"nodeType":"ExpressionStatement","src":"10231:36:26"},{"expression":{"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6539,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10304:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6541,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"10319:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6542,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10333:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6546,"nodeType":"ExpressionStatement","src":"10304:36:26"},{"expression":{"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6547,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10378:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6549,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"10393:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6550,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10407:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6554,"nodeType":"ExpressionStatement","src":"10378:36:26"},{"expression":{"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"10859:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6556,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"10868:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6557,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"10874:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6560,"nodeType":"ExpressionStatement","src":"10859:22:26"},{"expression":{"id":6561,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"10902:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6440,"id":6562,"nodeType":"Return","src":"10895:13:26"}]}]},"documentation":{"id":6430,"nodeType":"StructuredDocumentation","src":"6925:312:26","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":6565,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:26","nodeType":"FunctionDefinition","parameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6432,"mutability":"mutable","name":"x","nameLocation":"7266:1:26","nodeType":"VariableDeclaration","scope":6565,"src":"7258:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6431,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6434,"mutability":"mutable","name":"y","nameLocation":"7277:1:26","nodeType":"VariableDeclaration","scope":6565,"src":"7269:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6433,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6436,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:26","nodeType":"VariableDeclaration","scope":6565,"src":"7280:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6435,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:26"},"returnParameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"result","nameLocation":"7332:6:26","nodeType":"VariableDeclaration","scope":6565,"src":"7324:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6438,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:26"},"scope":7659,"src":"7242:3683:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6601,"nodeType":"Block","src":"11164:128:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6581,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"11188:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6582,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"11191:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6583,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"11194:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6580,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6565,6602],"referencedDeclaration":6565,"src":"11181:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6588,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"11242:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}],"id":6587,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"11225:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6050_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6591,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"11262:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6592,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"11265:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6593,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"11268:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6590,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6585,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"11209:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"11209:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6579,"id":6600,"nodeType":"Return","src":"11174:111:26"}]},"documentation":{"id":6566,"nodeType":"StructuredDocumentation","src":"10931:118:26","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6602,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:26","nodeType":"FunctionDefinition","parameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"x","nameLocation":"11078:1:26","nodeType":"VariableDeclaration","scope":6602,"src":"11070:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6567,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6570,"mutability":"mutable","name":"y","nameLocation":"11089:1:26","nodeType":"VariableDeclaration","scope":6602,"src":"11081:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6569,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6572,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:26","nodeType":"VariableDeclaration","scope":6602,"src":"11092:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6571,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6575,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:26","nodeType":"VariableDeclaration","scope":6602,"src":"11113:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"},"typeName":{"id":6574,"nodeType":"UserDefinedTypeName","pathNode":{"id":6573,"name":"Rounding","nameLocations":["11113:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":6050,"src":"11113:8:26"},"referencedDeclaration":6050,"src":"11113:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:26"},"returnParameters":{"id":6579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6602,"src":"11155:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6577,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:26"},"scope":7659,"src":"11054:238:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6651,"nodeType":"Block","src":"11500:245:26","statements":[{"id":6650,"nodeType":"UncheckedBlock","src":"11510:229:26","statements":[{"assignments":[6615,6617],"declarations":[{"constant":false,"id":6615,"mutability":"mutable","name":"high","nameLocation":"11543:4:26","nodeType":"VariableDeclaration","scope":6650,"src":"11535:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6614,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6617,"mutability":"mutable","name":"low","nameLocation":"11557:3:26","nodeType":"VariableDeclaration","scope":6650,"src":"11549:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6616,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6622,"initialValue":{"arguments":[{"id":6619,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"11571:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6620,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"11574:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6618,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"11564:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6623,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"11594:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6625,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"11607:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6636,"nodeType":"IfStatement","src":"11590:86:26","trueBody":{"id":6635,"nodeType":"Block","src":"11610:66:26","statements":[{"expression":{"arguments":[{"expression":{"id":6631,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"11640:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:26","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4333,"src":"11640:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6628,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"11628:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"11628:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6634,"nodeType":"ExpressionStatement","src":"11628:33:26"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6637,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"11697:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6639,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"11712:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":6641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6644,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"11719:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6645,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"11726:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6613,"id":6649,"nodeType":"Return","src":"11689:39:26"}]}]},"documentation":{"id":6603,"nodeType":"StructuredDocumentation","src":"11298:111:26","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":6652,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:26","nodeType":"FunctionDefinition","parameters":{"id":6610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"x","nameLocation":"11438:1:26","nodeType":"VariableDeclaration","scope":6652,"src":"11430:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6604,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6607,"mutability":"mutable","name":"y","nameLocation":"11449:1:26","nodeType":"VariableDeclaration","scope":6652,"src":"11441:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6606,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6609,"mutability":"mutable","name":"n","nameLocation":"11458:1:26","nodeType":"VariableDeclaration","scope":6652,"src":"11452:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6608,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:26"},"returnParameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6612,"mutability":"mutable","name":"result","nameLocation":"11492:6:26","nodeType":"VariableDeclaration","scope":6652,"src":"11484:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6611,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:26"},"scope":7659,"src":"11414:331:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6690,"nodeType":"Block","src":"11963:113:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6668,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"11987:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6669,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"11990:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6670,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"11993:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6667,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[6652,6691],"referencedDeclaration":6652,"src":"11980:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6675,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"12031:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}],"id":6674,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"12014:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6050_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6678,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"12051:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6679,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"12054:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6681,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"12062:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6677,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6672,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"11998:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"11998:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6666,"id":6689,"nodeType":"Return","src":"11973:96:26"}]},"documentation":{"id":6653,"nodeType":"StructuredDocumentation","src":"11751:109:26","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":6691,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:26","nodeType":"FunctionDefinition","parameters":{"id":6663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6655,"mutability":"mutable","name":"x","nameLocation":"11889:1:26","nodeType":"VariableDeclaration","scope":6691,"src":"11881:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6654,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6657,"mutability":"mutable","name":"y","nameLocation":"11900:1:26","nodeType":"VariableDeclaration","scope":6691,"src":"11892:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6656,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6659,"mutability":"mutable","name":"n","nameLocation":"11909:1:26","nodeType":"VariableDeclaration","scope":6691,"src":"11903:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6658,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6662,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:26","nodeType":"VariableDeclaration","scope":6691,"src":"11912:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"},"typeName":{"id":6661,"nodeType":"UserDefinedTypeName","pathNode":{"id":6660,"name":"Rounding","nameLocations":["11912:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":6050,"src":"11912:8:26"},"referencedDeclaration":6050,"src":"11912:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:26"},"returnParameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6691,"src":"11954:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6664,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:26"},"scope":7659,"src":"11865:211:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6787,"nodeType":"Block","src":"12710:1849:26","statements":[{"id":6786,"nodeType":"UncheckedBlock","src":"12720:1833:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6701,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"12748:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6706,"nodeType":"IfStatement","src":"12744:20:26","trueBody":{"expression":{"hexValue":"30","id":6704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6700,"id":6705,"nodeType":"Return","src":"12756:8:26"}},{"assignments":[6708],"declarations":[{"constant":false,"id":6708,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:26","nodeType":"VariableDeclaration","scope":6786,"src":"13235:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6712,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6709,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6694,"src":"13255:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6710,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"13259:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:26"},{"assignments":[6714],"declarations":[{"constant":false,"id":6714,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:26","nodeType":"VariableDeclaration","scope":6786,"src":"13274:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6713,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6716,"initialValue":{"id":6715,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"13288:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:26"},{"assignments":[6718],"declarations":[{"constant":false,"id":6718,"mutability":"mutable","name":"x","nameLocation":"13432:1:26","nodeType":"VariableDeclaration","scope":6786,"src":"13425:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6717,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6720,"initialValue":{"hexValue":"30","id":6719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:26"},{"assignments":[6722],"declarations":[{"constant":false,"id":6722,"mutability":"mutable","name":"y","nameLocation":"13458:1:26","nodeType":"VariableDeclaration","scope":6786,"src":"13451:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6721,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6724,"initialValue":{"hexValue":"31","id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:26"},{"body":{"id":6761,"nodeType":"Block","src":"13501:882:26","statements":[{"assignments":[6729],"declarations":[{"constant":false,"id":6729,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:26","nodeType":"VariableDeclaration","scope":6761,"src":"13519:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6728,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6733,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6730,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"13538:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6731,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"13544:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:26"},{"expression":{"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6734,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"13573:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6735,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"13578:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6736,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6737,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"13678:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6738,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"13923:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6739,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"13929:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6740,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"13941:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6743,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:26","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6745,"nodeType":"ExpressionStatement","src":"13572:395:26"},{"expression":{"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6746,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"13987:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6747,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"13990:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6748,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6749,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"14072:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6750,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"14326:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6751,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"14330:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6754,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"14341:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6752,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:26","typeDescriptions":{}}},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:26","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6760,"nodeType":"ExpressionStatement","src":"13986:382:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6725,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"13485:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6762,"nodeType":"WhileStatement","src":"13478:905:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"14401:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":6764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6768,"nodeType":"IfStatement","src":"14397:22:26","trueBody":{"expression":{"hexValue":"30","id":6766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6700,"id":6767,"nodeType":"Return","src":"14411:8:26"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6770,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"14470:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6773,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"14477:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:26","subExpression":{"id":6776,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"14490:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6774,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:26","typeDescriptions":{}}},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6782,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"14502:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6780,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:26","typeDescriptions":{}}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6769,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"14462:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6700,"id":6785,"nodeType":"Return","src":"14455:50:26"}]}]},"documentation":{"id":6692,"nodeType":"StructuredDocumentation","src":"12082:553:26","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":6788,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:26","nodeType":"FunctionDefinition","parameters":{"id":6697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6694,"mutability":"mutable","name":"a","nameLocation":"12664:1:26","nodeType":"VariableDeclaration","scope":6788,"src":"12656:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6693,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6696,"mutability":"mutable","name":"n","nameLocation":"12675:1:26","nodeType":"VariableDeclaration","scope":6788,"src":"12667:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6695,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:26"},"returnParameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6788,"src":"12701:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6698,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:26"},"scope":7659,"src":"12640:1919:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6808,"nodeType":"Block","src":"15159:82:26","statements":[{"id":6807,"nodeType":"UncheckedBlock","src":"15169:66:26","statements":[{"expression":{"arguments":[{"id":6800,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"15212:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6801,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"15215:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6804,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"15222:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6798,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"15200:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7659_$","typeString":"type(library Math)"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:26","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6845,"src":"15200:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6797,"id":6806,"nodeType":"Return","src":"15193:31:26"}]}]},"documentation":{"id":6789,"nodeType":"StructuredDocumentation","src":"14565:514:26","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":6809,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:26","nodeType":"FunctionDefinition","parameters":{"id":6794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6791,"mutability":"mutable","name":"a","nameLocation":"15113:1:26","nodeType":"VariableDeclaration","scope":6809,"src":"15105:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6790,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6793,"mutability":"mutable","name":"p","nameLocation":"15124:1:26","nodeType":"VariableDeclaration","scope":6809,"src":"15116:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6792,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:26"},"returnParameters":{"id":6797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6809,"src":"15150:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6795,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:26"},"scope":7659,"src":"15084:157:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6844,"nodeType":"Block","src":"16011:174:26","statements":[{"assignments":[6822,6824],"declarations":[{"constant":false,"id":6822,"mutability":"mutable","name":"success","nameLocation":"16027:7:26","nodeType":"VariableDeclaration","scope":6844,"src":"16022:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6821,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6824,"mutability":"mutable","name":"result","nameLocation":"16044:6:26","nodeType":"VariableDeclaration","scope":6844,"src":"16036:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6823,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6830,"initialValue":{"arguments":[{"id":6826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"16064:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6827,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"16067:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6828,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"16070:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6825,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6869,6951],"referencedDeclaration":6869,"src":"16054:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:26"},{"condition":{"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:26","subExpression":{"id":6831,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"16087:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6841,"nodeType":"IfStatement","src":"16082:74:26","trueBody":{"id":6840,"nodeType":"Block","src":"16096:60:26","statements":[{"expression":{"arguments":[{"expression":{"id":6836,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"16122:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4337,"src":"16122:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6833,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"16110:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"16110:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6839,"nodeType":"ExpressionStatement","src":"16110:35:26"}]}},{"expression":{"id":6842,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"16172:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6820,"id":6843,"nodeType":"Return","src":"16165:13:26"}]},"documentation":{"id":6810,"nodeType":"StructuredDocumentation","src":"15247:678:26","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6845,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:26","nodeType":"FunctionDefinition","parameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6812,"mutability":"mutable","name":"b","nameLocation":"15954:1:26","nodeType":"VariableDeclaration","scope":6845,"src":"15946:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6811,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6814,"mutability":"mutable","name":"e","nameLocation":"15965:1:26","nodeType":"VariableDeclaration","scope":6845,"src":"15957:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6813,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6816,"mutability":"mutable","name":"m","nameLocation":"15976:1:26","nodeType":"VariableDeclaration","scope":6845,"src":"15968:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6815,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:26"},"returnParameters":{"id":6820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6845,"src":"16002:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6818,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:26"},"scope":7659,"src":"15930:255:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6868,"nodeType":"Block","src":"17039:1493:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6859,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"17053:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6866,"nodeType":"IfStatement","src":"17049:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6858,"id":6865,"nodeType":"Return","src":"17061:17:26"}},{"AST":{"nativeSrc":"17113:1413:26","nodeType":"YulBlock","src":"17113:1413:26","statements":[{"nativeSrc":"17127:22:26","nodeType":"YulVariableDeclaration","src":"17127:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:26","nodeType":"YulLiteral","src":"17144:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:26","nodeType":"YulIdentifier","src":"17138:5:26"},"nativeSrc":"17138:11:26","nodeType":"YulFunctionCall","src":"17138:11:26"},"variables":[{"name":"ptr","nativeSrc":"17131:3:26","nodeType":"YulTypedName","src":"17131:3:26","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:26","nodeType":"YulIdentifier","src":"18057:3:26"},{"kind":"number","nativeSrc":"18062:4:26","nodeType":"YulLiteral","src":"18062:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:26","nodeType":"YulIdentifier","src":"18050:6:26"},"nativeSrc":"18050:17:26","nodeType":"YulFunctionCall","src":"18050:17:26"},"nativeSrc":"18050:17:26","nodeType":"YulExpressionStatement","src":"18050:17:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:26","nodeType":"YulIdentifier","src":"18091:3:26"},{"kind":"number","nativeSrc":"18096:4:26","nodeType":"YulLiteral","src":"18096:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:26","nodeType":"YulIdentifier","src":"18087:3:26"},"nativeSrc":"18087:14:26","nodeType":"YulFunctionCall","src":"18087:14:26"},{"kind":"number","nativeSrc":"18103:4:26","nodeType":"YulLiteral","src":"18103:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:26","nodeType":"YulIdentifier","src":"18080:6:26"},"nativeSrc":"18080:28:26","nodeType":"YulFunctionCall","src":"18080:28:26"},"nativeSrc":"18080:28:26","nodeType":"YulExpressionStatement","src":"18080:28:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:26","nodeType":"YulIdentifier","src":"18132:3:26"},{"kind":"number","nativeSrc":"18137:4:26","nodeType":"YulLiteral","src":"18137:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:26","nodeType":"YulIdentifier","src":"18128:3:26"},"nativeSrc":"18128:14:26","nodeType":"YulFunctionCall","src":"18128:14:26"},{"kind":"number","nativeSrc":"18144:4:26","nodeType":"YulLiteral","src":"18144:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:26","nodeType":"YulIdentifier","src":"18121:6:26"},"nativeSrc":"18121:28:26","nodeType":"YulFunctionCall","src":"18121:28:26"},"nativeSrc":"18121:28:26","nodeType":"YulExpressionStatement","src":"18121:28:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:26","nodeType":"YulIdentifier","src":"18173:3:26"},{"kind":"number","nativeSrc":"18178:4:26","nodeType":"YulLiteral","src":"18178:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:26","nodeType":"YulIdentifier","src":"18169:3:26"},"nativeSrc":"18169:14:26","nodeType":"YulFunctionCall","src":"18169:14:26"},{"name":"b","nativeSrc":"18185:1:26","nodeType":"YulIdentifier","src":"18185:1:26"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:26","nodeType":"YulIdentifier","src":"18162:6:26"},"nativeSrc":"18162:25:26","nodeType":"YulFunctionCall","src":"18162:25:26"},"nativeSrc":"18162:25:26","nodeType":"YulExpressionStatement","src":"18162:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:26","nodeType":"YulIdentifier","src":"18211:3:26"},{"kind":"number","nativeSrc":"18216:4:26","nodeType":"YulLiteral","src":"18216:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:26","nodeType":"YulIdentifier","src":"18207:3:26"},"nativeSrc":"18207:14:26","nodeType":"YulFunctionCall","src":"18207:14:26"},{"name":"e","nativeSrc":"18223:1:26","nodeType":"YulIdentifier","src":"18223:1:26"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:26","nodeType":"YulIdentifier","src":"18200:6:26"},"nativeSrc":"18200:25:26","nodeType":"YulFunctionCall","src":"18200:25:26"},"nativeSrc":"18200:25:26","nodeType":"YulExpressionStatement","src":"18200:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:26","nodeType":"YulIdentifier","src":"18249:3:26"},{"kind":"number","nativeSrc":"18254:4:26","nodeType":"YulLiteral","src":"18254:4:26","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:26","nodeType":"YulIdentifier","src":"18245:3:26"},"nativeSrc":"18245:14:26","nodeType":"YulFunctionCall","src":"18245:14:26"},{"name":"m","nativeSrc":"18261:1:26","nodeType":"YulIdentifier","src":"18261:1:26"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:26","nodeType":"YulIdentifier","src":"18238:6:26"},"nativeSrc":"18238:25:26","nodeType":"YulFunctionCall","src":"18238:25:26"},"nativeSrc":"18238:25:26","nodeType":"YulExpressionStatement","src":"18238:25:26"},{"nativeSrc":"18425:57:26","nodeType":"YulAssignment","src":"18425:57:26","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:26","nodeType":"YulIdentifier","src":"18447:3:26"},"nativeSrc":"18447:5:26","nodeType":"YulFunctionCall","src":"18447:5:26"},{"kind":"number","nativeSrc":"18454:4:26","nodeType":"YulLiteral","src":"18454:4:26","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:26","nodeType":"YulIdentifier","src":"18460:3:26"},{"kind":"number","nativeSrc":"18465:4:26","nodeType":"YulLiteral","src":"18465:4:26","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:26","nodeType":"YulLiteral","src":"18471:4:26","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:26","nodeType":"YulLiteral","src":"18477:4:26","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:26","nodeType":"YulIdentifier","src":"18436:10:26"},"nativeSrc":"18436:46:26","nodeType":"YulFunctionCall","src":"18436:46:26"},"variableNames":[{"name":"success","nativeSrc":"18425:7:26","nodeType":"YulIdentifier","src":"18425:7:26"}]},{"nativeSrc":"18495:21:26","nodeType":"YulAssignment","src":"18495:21:26","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:26","nodeType":"YulLiteral","src":"18511:4:26","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:26","nodeType":"YulIdentifier","src":"18505:5:26"},"nativeSrc":"18505:11:26","nodeType":"YulFunctionCall","src":"18505:11:26"},"variableNames":[{"name":"result","nativeSrc":"18495:6:26","nodeType":"YulIdentifier","src":"18495:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6848,"isOffset":false,"isSlot":false,"src":"18185:1:26","valueSize":1},{"declaration":6850,"isOffset":false,"isSlot":false,"src":"18223:1:26","valueSize":1},{"declaration":6852,"isOffset":false,"isSlot":false,"src":"18261:1:26","valueSize":1},{"declaration":6857,"isOffset":false,"isSlot":false,"src":"18495:6:26","valueSize":1},{"declaration":6855,"isOffset":false,"isSlot":false,"src":"18425:7:26","valueSize":1}],"flags":["memory-safe"],"id":6867,"nodeType":"InlineAssembly","src":"17088:1438:26"}]},"documentation":{"id":6846,"nodeType":"StructuredDocumentation","src":"16191:738:26","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6869,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:26","nodeType":"FunctionDefinition","parameters":{"id":6853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6848,"mutability":"mutable","name":"b","nameLocation":"16961:1:26","nodeType":"VariableDeclaration","scope":6869,"src":"16953:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6850,"mutability":"mutable","name":"e","nameLocation":"16972:1:26","nodeType":"VariableDeclaration","scope":6869,"src":"16964:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6849,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6852,"mutability":"mutable","name":"m","nameLocation":"16983:1:26","nodeType":"VariableDeclaration","scope":6869,"src":"16975:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6851,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:26"},"returnParameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"success","nameLocation":"17014:7:26","nodeType":"VariableDeclaration","scope":6869,"src":"17009:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6854,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6857,"mutability":"mutable","name":"result","nameLocation":"17031:6:26","nodeType":"VariableDeclaration","scope":6869,"src":"17023:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6856,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:26"},"scope":7659,"src":"16934:1598:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6904,"nodeType":"Block","src":"18729:179:26","statements":[{"assignments":[6882,6884],"declarations":[{"constant":false,"id":6882,"mutability":"mutable","name":"success","nameLocation":"18745:7:26","nodeType":"VariableDeclaration","scope":6904,"src":"18740:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6881,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6884,"mutability":"mutable","name":"result","nameLocation":"18767:6:26","nodeType":"VariableDeclaration","scope":6904,"src":"18754:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6883,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6890,"initialValue":{"arguments":[{"id":6886,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"18787:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6887,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"18790:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6888,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"18793:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6885,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6869,6951],"referencedDeclaration":6951,"src":"18777:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:26"},{"condition":{"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:26","subExpression":{"id":6891,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"18810:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6901,"nodeType":"IfStatement","src":"18805:74:26","trueBody":{"id":6900,"nodeType":"Block","src":"18819:60:26","statements":[{"expression":{"arguments":[{"expression":{"id":6896,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"18845:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4337,"src":"18845:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6893,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"18833:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4370_$","typeString":"type(library Panic)"}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"18833:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6899,"nodeType":"ExpressionStatement","src":"18833:35:26"}]}},{"expression":{"id":6902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"18895:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6880,"id":6903,"nodeType":"Return","src":"18888:13:26"}]},"documentation":{"id":6870,"nodeType":"StructuredDocumentation","src":"18538:85:26","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6905,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:26","nodeType":"FunctionDefinition","parameters":{"id":6877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"b","nameLocation":"18657:1:26","nodeType":"VariableDeclaration","scope":6905,"src":"18644:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6871,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6874,"mutability":"mutable","name":"e","nameLocation":"18673:1:26","nodeType":"VariableDeclaration","scope":6905,"src":"18660:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6873,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6876,"mutability":"mutable","name":"m","nameLocation":"18689:1:26","nodeType":"VariableDeclaration","scope":6905,"src":"18676:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6875,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:26"},"returnParameters":{"id":6880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6905,"src":"18715:12:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6878,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:26"},"scope":7659,"src":"18628:280:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6950,"nodeType":"Block","src":"19162:771:26","statements":[{"condition":{"arguments":[{"id":6920,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"19187:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6919,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"19176:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6929,"nodeType":"IfStatement","src":"19172:47:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6923,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6918,"id":6928,"nodeType":"Return","src":"19191:28:26"}},{"assignments":[6931],"declarations":[{"constant":false,"id":6931,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:26","nodeType":"VariableDeclaration","scope":6950,"src":"19230:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6930,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6934,"initialValue":{"expression":{"id":6932,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"19245:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:26","memberName":"length","nodeType":"MemberAccess","src":"19245:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:26"},{"expression":{"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"19335:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6938,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"19361:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:26","memberName":"length","nodeType":"MemberAccess","src":"19361:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6940,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"19371:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:26","memberName":"length","nodeType":"MemberAccess","src":"19371:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6942,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"19381:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"19387:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6944,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"19390:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6945,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"19393:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6936,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6948,"nodeType":"ExpressionStatement","src":"19335:60:26"},{"AST":{"nativeSrc":"19431:496:26","nodeType":"YulBlock","src":"19431:496:26","statements":[{"nativeSrc":"19445:32:26","nodeType":"YulVariableDeclaration","src":"19445:32:26","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:26","nodeType":"YulIdentifier","src":"19464:6:26"},{"kind":"number","nativeSrc":"19472:4:26","nodeType":"YulLiteral","src":"19472:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:26","nodeType":"YulIdentifier","src":"19460:3:26"},"nativeSrc":"19460:17:26","nodeType":"YulFunctionCall","src":"19460:17:26"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:26","nodeType":"YulTypedName","src":"19449:7:26","type":""}]},{"nativeSrc":"19567:73:26","nodeType":"YulAssignment","src":"19567:73:26","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:26","nodeType":"YulIdentifier","src":"19589:3:26"},"nativeSrc":"19589:5:26","nodeType":"YulFunctionCall","src":"19589:5:26"},{"kind":"number","nativeSrc":"19596:4:26","nodeType":"YulLiteral","src":"19596:4:26","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:26","nodeType":"YulIdentifier","src":"19602:7:26"},{"arguments":[{"name":"result","nativeSrc":"19617:6:26","nodeType":"YulIdentifier","src":"19617:6:26"}],"functionName":{"name":"mload","nativeSrc":"19611:5:26","nodeType":"YulIdentifier","src":"19611:5:26"},"nativeSrc":"19611:13:26","nodeType":"YulFunctionCall","src":"19611:13:26"},{"name":"dataPtr","nativeSrc":"19626:7:26","nodeType":"YulIdentifier","src":"19626:7:26"},{"name":"mLen","nativeSrc":"19635:4:26","nodeType":"YulIdentifier","src":"19635:4:26"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:26","nodeType":"YulIdentifier","src":"19578:10:26"},"nativeSrc":"19578:62:26","nodeType":"YulFunctionCall","src":"19578:62:26"},"variableNames":[{"name":"success","nativeSrc":"19567:7:26","nodeType":"YulIdentifier","src":"19567:7:26"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:26","nodeType":"YulIdentifier","src":"19796:6:26"},{"name":"mLen","nativeSrc":"19804:4:26","nodeType":"YulIdentifier","src":"19804:4:26"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:26","nodeType":"YulIdentifier","src":"19789:6:26"},"nativeSrc":"19789:20:26","nodeType":"YulFunctionCall","src":"19789:20:26"},"nativeSrc":"19789:20:26","nodeType":"YulExpressionStatement","src":"19789:20:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:26","nodeType":"YulLiteral","src":"19892:4:26","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:26","nodeType":"YulIdentifier","src":"19902:7:26"},{"name":"mLen","nativeSrc":"19911:4:26","nodeType":"YulIdentifier","src":"19911:4:26"}],"functionName":{"name":"add","nativeSrc":"19898:3:26","nodeType":"YulIdentifier","src":"19898:3:26"},"nativeSrc":"19898:18:26","nodeType":"YulFunctionCall","src":"19898:18:26"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:26","nodeType":"YulIdentifier","src":"19885:6:26"},"nativeSrc":"19885:32:26","nodeType":"YulFunctionCall","src":"19885:32:26"},"nativeSrc":"19885:32:26","nodeType":"YulExpressionStatement","src":"19885:32:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":6931,"isOffset":false,"isSlot":false,"src":"19635:4:26","valueSize":1},{"declaration":6931,"isOffset":false,"isSlot":false,"src":"19804:4:26","valueSize":1},{"declaration":6931,"isOffset":false,"isSlot":false,"src":"19911:4:26","valueSize":1},{"declaration":6917,"isOffset":false,"isSlot":false,"src":"19464:6:26","valueSize":1},{"declaration":6917,"isOffset":false,"isSlot":false,"src":"19617:6:26","valueSize":1},{"declaration":6917,"isOffset":false,"isSlot":false,"src":"19796:6:26","valueSize":1},{"declaration":6915,"isOffset":false,"isSlot":false,"src":"19567:7:26","valueSize":1}],"flags":["memory-safe"],"id":6949,"nodeType":"InlineAssembly","src":"19406:521:26"}]},"documentation":{"id":6906,"nodeType":"StructuredDocumentation","src":"18914:88:26","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6951,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:26","nodeType":"FunctionDefinition","parameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"b","nameLocation":"19048:1:26","nodeType":"VariableDeclaration","scope":6951,"src":"19035:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6907,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6910,"mutability":"mutable","name":"e","nameLocation":"19072:1:26","nodeType":"VariableDeclaration","scope":6951,"src":"19059:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6909,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6912,"mutability":"mutable","name":"m","nameLocation":"19096:1:26","nodeType":"VariableDeclaration","scope":6951,"src":"19083:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6911,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:26"},"returnParameters":{"id":6918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"success","nameLocation":"19132:7:26","nodeType":"VariableDeclaration","scope":6951,"src":"19127:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6914,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6917,"mutability":"mutable","name":"result","nameLocation":"19154:6:26","nodeType":"VariableDeclaration","scope":6951,"src":"19141:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6916,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:26"},"scope":7659,"src":"19007:926:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6983,"nodeType":"Block","src":"20088:176:26","statements":[{"body":{"id":6979,"nodeType":"Block","src":"20145:92:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6970,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"20163:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6972,"indexExpression":{"id":6971,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"20173:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6978,"nodeType":"IfStatement","src":"20159:68:26","trueBody":{"id":6977,"nodeType":"Block","src":"20182:45:26","statements":[{"expression":{"hexValue":"66616c7365","id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6958,"id":6976,"nodeType":"Return","src":"20200:12:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"20118:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6964,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"20122:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:26","memberName":"length","nodeType":"MemberAccess","src":"20122:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6980,"initializationExpression":{"assignments":[6960],"declarations":[{"constant":false,"id":6960,"mutability":"mutable","name":"i","nameLocation":"20111:1:26","nodeType":"VariableDeclaration","scope":6980,"src":"20103:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6959,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6962,"initialValue":{"hexValue":"30","id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:26","subExpression":{"id":6967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"20142:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6969,"nodeType":"ExpressionStatement","src":"20140:3:26"},"nodeType":"ForStatement","src":"20098:139:26"},{"expression":{"hexValue":"74727565","id":6981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6958,"id":6982,"nodeType":"Return","src":"20246:11:26"}]},"documentation":{"id":6952,"nodeType":"StructuredDocumentation","src":"19939:72:26","text":" @dev Returns whether the provided byte array is zero."},"id":6984,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:26","nodeType":"FunctionDefinition","parameters":{"id":6955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6954,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:26","nodeType":"VariableDeclaration","scope":6984,"src":"20036:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6953,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:26"},"returnParameters":{"id":6958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6984,"src":"20082:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6956,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:26"},"scope":7659,"src":"20016:248:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7202,"nodeType":"Block","src":"20624:5124:26","statements":[{"id":7201,"nodeType":"UncheckedBlock","src":"20634:5108:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6992,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"20728:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6998,"nodeType":"IfStatement","src":"20724:53:26","trueBody":{"id":6997,"nodeType":"Block","src":"20736:41:26","statements":[{"expression":{"id":6995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"20761:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6991,"id":6996,"nodeType":"Return","src":"20754:8:26"}]}},{"assignments":[7000],"declarations":[{"constant":false,"id":7000,"mutability":"mutable","name":"aa","nameLocation":"21712:2:26","nodeType":"VariableDeclaration","scope":7201,"src":"21704:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6999,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7002,"initialValue":{"id":7001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"21717:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:26"},{"assignments":[7004],"declarations":[{"constant":false,"id":7004,"mutability":"mutable","name":"xn","nameLocation":"21740:2:26","nodeType":"VariableDeclaration","scope":7201,"src":"21732:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7003,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7006,"initialValue":{"hexValue":"31","id":7005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7007,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"21765:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":7010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":7009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":7011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7022,"nodeType":"IfStatement","src":"21761:92:26","trueBody":{"id":7021,"nodeType":"Block","src":"21783:70:26","statements":[{"expression":{"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7013,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"21801:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":7014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7016,"nodeType":"ExpressionStatement","src":"21801:10:26"},{"expression":{"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7017,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"21829:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":7018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7020,"nodeType":"ExpressionStatement","src":"21829:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7023,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"21870:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":7026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":7027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7038,"nodeType":"IfStatement","src":"21866:90:26","trueBody":{"id":7037,"nodeType":"Block","src":"21887:69:26","statements":[{"expression":{"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7029,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"21905:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":7030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7032,"nodeType":"ExpressionStatement","src":"21905:9:26"},{"expression":{"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7033,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"21932:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":7034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7036,"nodeType":"ExpressionStatement","src":"21932:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7039,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"21973:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":7041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":7043,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7054,"nodeType":"IfStatement","src":"21969:90:26","trueBody":{"id":7053,"nodeType":"Block","src":"21990:69:26","statements":[{"expression":{"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7045,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"22008:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":7046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7048,"nodeType":"ExpressionStatement","src":"22008:9:26"},{"expression":{"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7049,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"22035:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7052,"nodeType":"ExpressionStatement","src":"22035:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7055,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"22076:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":7058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":7057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":7059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7070,"nodeType":"IfStatement","src":"22072:89:26","trueBody":{"id":7069,"nodeType":"Block","src":"22093:68:26","statements":[{"expression":{"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7061,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"22111:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":7062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7064,"nodeType":"ExpressionStatement","src":"22111:9:26"},{"expression":{"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7065,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"22138:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":7066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7068,"nodeType":"ExpressionStatement","src":"22138:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7071,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"22178:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":7074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":7075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7086,"nodeType":"IfStatement","src":"22174:87:26","trueBody":{"id":7085,"nodeType":"Block","src":"22194:67:26","statements":[{"expression":{"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7077,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"22212:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":7078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7080,"nodeType":"ExpressionStatement","src":"22212:8:26"},{"expression":{"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7081,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"22238:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":7082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7084,"nodeType":"ExpressionStatement","src":"22238:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7087,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"22278:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":7091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7102,"nodeType":"IfStatement","src":"22274:87:26","trueBody":{"id":7101,"nodeType":"Block","src":"22294:67:26","statements":[{"expression":{"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7093,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"22312:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7096,"nodeType":"ExpressionStatement","src":"22312:8:26"},{"expression":{"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7097,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"22338:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":7098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7100,"nodeType":"ExpressionStatement","src":"22338:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7103,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"22378:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":7106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":7107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7114,"nodeType":"IfStatement","src":"22374:61:26","trueBody":{"id":7113,"nodeType":"Block","src":"22394:41:26","statements":[{"expression":{"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7109,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"22412:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":7110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7112,"nodeType":"ExpressionStatement","src":"22412:8:26"}]}},{"expression":{"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7115,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"22855:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7117,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"22865:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7123,"nodeType":"ExpressionStatement","src":"22855:18:26"},{"expression":{"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7124,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"24760:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7125,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"24766:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7126,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"24771:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7127,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"24775:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7134,"nodeType":"ExpressionStatement","src":"24760:23:26"},{"expression":{"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7135,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"24869:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7136,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"24875:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7137,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"24880:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7138,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"24884:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7145,"nodeType":"ExpressionStatement","src":"24869:23:26"},{"expression":{"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7146,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"24980:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7147,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"24986:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7148,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"24991:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7149,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"24995:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7156,"nodeType":"ExpressionStatement","src":"24980:23:26"},{"expression":{"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7157,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25089:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7158,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25095:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"25100:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7160,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25104:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7167,"nodeType":"ExpressionStatement","src":"25089:23:26"},{"expression":{"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7168,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25199:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7169,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25205:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7170,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"25210:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7171,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25214:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7178,"nodeType":"ExpressionStatement","src":"25199:23:26"},{"expression":{"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7179,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25309:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7180,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25315:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7181,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"25320:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7182,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25324:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7189,"nodeType":"ExpressionStatement","src":"25309:23:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7190,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25698:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7193,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25719:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"25724:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7195,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"25728:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7191,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"25703:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"25703:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6991,"id":7200,"nodeType":"Return","src":"25691:40:26"}]}]},"documentation":{"id":6985,"nodeType":"StructuredDocumentation","src":"20270:292:26","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":7203,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:26","nodeType":"FunctionDefinition","parameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6987,"mutability":"mutable","name":"a","nameLocation":"20589:1:26","nodeType":"VariableDeclaration","scope":7203,"src":"20581:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6986,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:26"},"returnParameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7203,"src":"20615:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6989,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:26"},"scope":7659,"src":"20567:5181:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7236,"nodeType":"Block","src":"25921:171:26","statements":[{"id":7235,"nodeType":"UncheckedBlock","src":"25931:155:26","statements":[{"assignments":[7215],"declarations":[{"constant":false,"id":7215,"mutability":"mutable","name":"result","nameLocation":"25963:6:26","nodeType":"VariableDeclaration","scope":7235,"src":"25955:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7214,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7219,"initialValue":{"arguments":[{"id":7217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"25977:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7216,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[7203,7237],"referencedDeclaration":7203,"src":"25972:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"26000:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7224,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"26042:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}],"id":7223,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"26025:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6050_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"26055:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"26064:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"26073:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7221,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"26009:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"26009:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7213,"id":7234,"nodeType":"Return","src":"25993:82:26"}]}]},"documentation":{"id":7204,"nodeType":"StructuredDocumentation","src":"25754:86:26","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":7237,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:26","nodeType":"FunctionDefinition","parameters":{"id":7210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7206,"mutability":"mutable","name":"a","nameLocation":"25867:1:26","nodeType":"VariableDeclaration","scope":7237,"src":"25859:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7205,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7209,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:26","nodeType":"VariableDeclaration","scope":7237,"src":"25870:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"},"typeName":{"id":7208,"nodeType":"UserDefinedTypeName","pathNode":{"id":7207,"name":"Rounding","nameLocations":["25870:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":6050,"src":"25870:8:26"},"referencedDeclaration":6050,"src":"25870:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:26"},"returnParameters":{"id":7213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7237,"src":"25912:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7211,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:26"},"scope":7659,"src":"25845:247:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7327,"nodeType":"Block","src":"26281:2334:26","statements":[{"expression":{"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7245,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"26363:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7248,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"26383:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7246,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"26367:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"26367:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:26","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7255,"nodeType":"ExpressionStatement","src":"26363:64:26"},{"expression":{"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7256,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"26503:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7259,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"26525:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7260,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"26530:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7257,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"26508:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"26508:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:26","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7269,"nodeType":"ExpressionStatement","src":"26503:56:26"},{"expression":{"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7270,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"26634:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7273,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"26656:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7274,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"26661:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7271,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"26639:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"26639:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7283,"nodeType":"ExpressionStatement","src":"26634:48:26"},{"expression":{"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7284,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"26757:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7287,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"26779:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7288,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"26784:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:26","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7285,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"26762:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"26762:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7297,"nodeType":"ExpressionStatement","src":"26757:44:26"},{"expression":{"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7298,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"26874:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7301,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"26896:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7302,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"26901:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7299,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"26879:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"26879:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7311,"nodeType":"ExpressionStatement","src":"26874:42:26"},{"expression":{"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7312,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"26988:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7315,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"27010:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7316,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"27015:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7313,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"26993:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"26993:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7325,"nodeType":"ExpressionStatement","src":"26988:41:26"},{"AST":{"nativeSrc":"28490:119:26","nodeType":"YulBlock","src":"28490:119:26","statements":[{"nativeSrc":"28504:95:26","nodeType":"YulAssignment","src":"28504:95:26","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:26","nodeType":"YulIdentifier","src":"28512:1:26"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:26","nodeType":"YulIdentifier","src":"28524:1:26"},{"name":"x","nativeSrc":"28527:1:26","nodeType":"YulIdentifier","src":"28527:1:26"}],"functionName":{"name":"shr","nativeSrc":"28520:3:26","nodeType":"YulIdentifier","src":"28520:3:26"},"nativeSrc":"28520:9:26","nodeType":"YulFunctionCall","src":"28520:9:26"},{"kind":"number","nativeSrc":"28531:66:26","nodeType":"YulLiteral","src":"28531:66:26","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:26","nodeType":"YulIdentifier","src":"28515:4:26"},"nativeSrc":"28515:83:26","nodeType":"YulFunctionCall","src":"28515:83:26"}],"functionName":{"name":"or","nativeSrc":"28509:2:26","nodeType":"YulIdentifier","src":"28509:2:26"},"nativeSrc":"28509:90:26","nodeType":"YulFunctionCall","src":"28509:90:26"},"variableNames":[{"name":"r","nativeSrc":"28504:1:26","nodeType":"YulIdentifier","src":"28504:1:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7243,"isOffset":false,"isSlot":false,"src":"28504:1:26","valueSize":1},{"declaration":7243,"isOffset":false,"isSlot":false,"src":"28512:1:26","valueSize":1},{"declaration":7243,"isOffset":false,"isSlot":false,"src":"28524:1:26","valueSize":1},{"declaration":7240,"isOffset":false,"isSlot":false,"src":"28527:1:26","valueSize":1}],"flags":["memory-safe"],"id":7326,"nodeType":"InlineAssembly","src":"28465:144:26"}]},"documentation":{"id":7238,"nodeType":"StructuredDocumentation","src":"26098:119:26","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7328,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:26","nodeType":"FunctionDefinition","parameters":{"id":7241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7240,"mutability":"mutable","name":"x","nameLocation":"26244:1:26","nodeType":"VariableDeclaration","scope":7328,"src":"26236:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7239,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:26"},"returnParameters":{"id":7244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7243,"mutability":"mutable","name":"r","nameLocation":"26278:1:26","nodeType":"VariableDeclaration","scope":7328,"src":"26270:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7242,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:26"},"scope":7659,"src":"26222:2393:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7361,"nodeType":"Block","src":"28848:175:26","statements":[{"id":7360,"nodeType":"UncheckedBlock","src":"28858:159:26","statements":[{"assignments":[7340],"declarations":[{"constant":false,"id":7340,"mutability":"mutable","name":"result","nameLocation":"28890:6:26","nodeType":"VariableDeclaration","scope":7360,"src":"28882:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7339,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7344,"initialValue":{"arguments":[{"id":7342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"28904:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7341,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7328,7362],"referencedDeclaration":7328,"src":"28899:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"28931:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7349,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"28973:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}],"id":7348,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"28956:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6050_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"28991:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"29000:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7346,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"28940:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"28940:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7338,"id":7359,"nodeType":"Return","src":"28924:82:26"}]}]},"documentation":{"id":7329,"nodeType":"StructuredDocumentation","src":"28621:142:26","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7362,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:26","nodeType":"FunctionDefinition","parameters":{"id":7335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7331,"mutability":"mutable","name":"value","nameLocation":"28790:5:26","nodeType":"VariableDeclaration","scope":7362,"src":"28782:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7330,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7334,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:26","nodeType":"VariableDeclaration","scope":7362,"src":"28797:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"},"typeName":{"id":7333,"nodeType":"UserDefinedTypeName","pathNode":{"id":7332,"name":"Rounding","nameLocations":["28797:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":6050,"src":"28797:8:26"},"referencedDeclaration":6050,"src":"28797:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:26"},"returnParameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7362,"src":"28839:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7336,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:26"},"scope":7659,"src":"28768:255:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7490,"nodeType":"Block","src":"29216:854:26","statements":[{"assignments":[7371],"declarations":[{"constant":false,"id":7371,"mutability":"mutable","name":"result","nameLocation":"29234:6:26","nodeType":"VariableDeclaration","scope":7490,"src":"29226:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7370,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7373,"initialValue":{"hexValue":"30","id":7372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:26"},{"id":7487,"nodeType":"UncheckedBlock","src":"29254:787:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29282:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7390,"nodeType":"IfStatement","src":"29278:103:26","trueBody":{"id":7389,"nodeType":"Block","src":"29301:80:26","statements":[{"expression":{"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29319:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7384,"nodeType":"ExpressionStatement","src":"29319:17:26"},{"expression":{"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"29354:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7388,"nodeType":"ExpressionStatement","src":"29354:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29398:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7407,"nodeType":"IfStatement","src":"29394:103:26","trueBody":{"id":7406,"nodeType":"Block","src":"29417:80:26","statements":[{"expression":{"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29435:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7401,"nodeType":"ExpressionStatement","src":"29435:17:26"},{"expression":{"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"29470:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":7403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7405,"nodeType":"ExpressionStatement","src":"29470:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29514:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7424,"nodeType":"IfStatement","src":"29510:103:26","trueBody":{"id":7423,"nodeType":"Block","src":"29533:80:26","statements":[{"expression":{"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29551:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7418,"nodeType":"ExpressionStatement","src":"29551:17:26"},{"expression":{"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"29586:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":7420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7422,"nodeType":"ExpressionStatement","src":"29586:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29630:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7441,"nodeType":"IfStatement","src":"29626:100:26","trueBody":{"id":7440,"nodeType":"Block","src":"29648:78:26","statements":[{"expression":{"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29666:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7435,"nodeType":"ExpressionStatement","src":"29666:16:26"},{"expression":{"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"29700:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7439,"nodeType":"ExpressionStatement","src":"29700:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29743:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7458,"nodeType":"IfStatement","src":"29739:100:26","trueBody":{"id":7457,"nodeType":"Block","src":"29761:78:26","statements":[{"expression":{"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29779:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7452,"nodeType":"ExpressionStatement","src":"29779:16:26"},{"expression":{"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"29813:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7456,"nodeType":"ExpressionStatement","src":"29813:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29856:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7475,"nodeType":"IfStatement","src":"29852:100:26","trueBody":{"id":7474,"nodeType":"Block","src":"29874:78:26","statements":[{"expression":{"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29892:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7469,"nodeType":"ExpressionStatement","src":"29892:16:26"},{"expression":{"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"29926:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7473,"nodeType":"ExpressionStatement","src":"29926:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"29969:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":7479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":7478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7486,"nodeType":"IfStatement","src":"29965:66:26","trueBody":{"id":7485,"nodeType":"Block","src":"29987:44:26","statements":[{"expression":{"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"30005:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7484,"nodeType":"ExpressionStatement","src":"30005:11:26"}]}}]},{"expression":{"id":7488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"30057:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7369,"id":7489,"nodeType":"Return","src":"30050:13:26"}]},"documentation":{"id":7363,"nodeType":"StructuredDocumentation","src":"29029:120:26","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7491,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:26","nodeType":"FunctionDefinition","parameters":{"id":7366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7365,"mutability":"mutable","name":"value","nameLocation":"29177:5:26","nodeType":"VariableDeclaration","scope":7491,"src":"29169:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7364,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:26"},"returnParameters":{"id":7369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7491,"src":"29207:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7367,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:26"},"scope":7659,"src":"29154:916:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7524,"nodeType":"Block","src":"30305:177:26","statements":[{"id":7523,"nodeType":"UncheckedBlock","src":"30315:161:26","statements":[{"assignments":[7503],"declarations":[{"constant":false,"id":7503,"mutability":"mutable","name":"result","nameLocation":"30347:6:26","nodeType":"VariableDeclaration","scope":7523,"src":"30339:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7502,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7507,"initialValue":{"arguments":[{"id":7505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"30362:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7504,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[7491,7525],"referencedDeclaration":7491,"src":"30356:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"30389:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7512,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"30431:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}],"id":7511,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"30414:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6050_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":7515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"30450:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"30459:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7509,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"30398:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"30398:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7501,"id":7522,"nodeType":"Return","src":"30382:83:26"}]}]},"documentation":{"id":7492,"nodeType":"StructuredDocumentation","src":"30076:143:26","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7525,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:26","nodeType":"FunctionDefinition","parameters":{"id":7498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7494,"mutability":"mutable","name":"value","nameLocation":"30247:5:26","nodeType":"VariableDeclaration","scope":7525,"src":"30239:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7493,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7497,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:26","nodeType":"VariableDeclaration","scope":7525,"src":"30254:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"},"typeName":{"id":7496,"nodeType":"UserDefinedTypeName","pathNode":{"id":7495,"name":"Rounding","nameLocations":["30254:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":6050,"src":"30254:8:26"},"referencedDeclaration":6050,"src":"30254:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:26"},"returnParameters":{"id":7501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7525,"src":"30296:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7499,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:26"},"scope":7659,"src":"30224:258:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7601,"nodeType":"Block","src":"30800:675:26","statements":[{"expression":{"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7533,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"30882:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7536,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"30902:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7534,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"30886:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"30886:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:26","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7543,"nodeType":"ExpressionStatement","src":"30882:64:26"},{"expression":{"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7544,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"31022:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7547,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"31044:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7548,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"31049:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7545,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"31027:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"31027:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:26","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7557,"nodeType":"ExpressionStatement","src":"31022:56:26"},{"expression":{"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7558,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"31153:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7561,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"31175:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7562,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"31180:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7559,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"31158:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"31158:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7571,"nodeType":"ExpressionStatement","src":"31153:48:26"},{"expression":{"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7572,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"31276:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7575,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"31298:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7576,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"31303:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:26","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7573,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"31281:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"31281:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7585,"nodeType":"ExpressionStatement","src":"31276:44:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7586,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"31426:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":7587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7592,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"31453:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7593,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"31458:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7590,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"31436:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"31436:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7532,"id":7600,"nodeType":"Return","src":"31418:50:26"}]},"documentation":{"id":7526,"nodeType":"StructuredDocumentation","src":"30488:246:26","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":7602,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:26","nodeType":"FunctionDefinition","parameters":{"id":7529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7528,"mutability":"mutable","name":"x","nameLocation":"30763:1:26","nodeType":"VariableDeclaration","scope":7602,"src":"30755:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7527,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:26"},"returnParameters":{"id":7532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7531,"mutability":"mutable","name":"r","nameLocation":"30797:1:26","nodeType":"VariableDeclaration","scope":7602,"src":"30789:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7530,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:26"},"scope":7659,"src":"30739:736:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7638,"nodeType":"Block","src":"31712:184:26","statements":[{"id":7637,"nodeType":"UncheckedBlock","src":"31722:168:26","statements":[{"assignments":[7614],"declarations":[{"constant":false,"id":7614,"mutability":"mutable","name":"result","nameLocation":"31754:6:26","nodeType":"VariableDeclaration","scope":7637,"src":"31746:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7613,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7618,"initialValue":{"arguments":[{"id":7616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"31770:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7615,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[7602,7639],"referencedDeclaration":7602,"src":"31763:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7619,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"31797:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7623,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"31839:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}],"id":7622,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"31822:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6050_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"31858:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"31873:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7620,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"31806:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"31806:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7612,"id":7636,"nodeType":"Return","src":"31790:89:26"}]}]},"documentation":{"id":7603,"nodeType":"StructuredDocumentation","src":"31481:144:26","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7639,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:26","nodeType":"FunctionDefinition","parameters":{"id":7609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7605,"mutability":"mutable","name":"value","nameLocation":"31654:5:26","nodeType":"VariableDeclaration","scope":7639,"src":"31646:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7604,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7608,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:26","nodeType":"VariableDeclaration","scope":7639,"src":"31661:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"},"typeName":{"id":7607,"nodeType":"UserDefinedTypeName","pathNode":{"id":7606,"name":"Rounding","nameLocations":["31661:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":6050,"src":"31661:8:26"},"referencedDeclaration":6050,"src":"31661:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:26"},"returnParameters":{"id":7612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7639,"src":"31703:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7610,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:26"},"scope":7659,"src":"31630:266:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7657,"nodeType":"Block","src":"32094:48:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7650,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"32117:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}],"id":7649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7648,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:26","typeDescriptions":{}}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":7652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7647,"id":7656,"nodeType":"Return","src":"32104:31:26"}]},"documentation":{"id":7640,"nodeType":"StructuredDocumentation","src":"31902:113:26","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":7658,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:26","nodeType":"FunctionDefinition","parameters":{"id":7644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7643,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:26","nodeType":"VariableDeclaration","scope":7658,"src":"32046:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"},"typeName":{"id":7642,"nodeType":"UserDefinedTypeName","pathNode":{"id":7641,"name":"Rounding","nameLocations":["32046:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":6050,"src":"32046:8:26"},"referencedDeclaration":6050,"src":"32046:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6050","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:26"},"returnParameters":{"id":7647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7658,"src":"32088:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7645,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:26"},"scope":7659,"src":"32020:122:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7660,"src":"281:31863:26","usedErrors":[],"usedEvents":[]}],"src":"103:32042:26"},"id":26},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[9424]},"id":9425,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7661,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7662,"nodeType":"StructuredDocumentation","src":"218:550:27","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":9424,"linearizedBaseContracts":[9424],"name":"SafeCast","nameLocation":"777:8:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7663,"nodeType":"StructuredDocumentation","src":"792:68:27","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":7669,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:27","nodeType":"ErrorDefinition","parameters":{"id":7668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7665,"mutability":"mutable","name":"bits","nameLocation":"908:4:27","nodeType":"VariableDeclaration","scope":7669,"src":"902:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7664,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7667,"mutability":"mutable","name":"value","nameLocation":"922:5:27","nodeType":"VariableDeclaration","scope":7669,"src":"914:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7666,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:27"},"src":"865:64:27"},{"documentation":{"id":7670,"nodeType":"StructuredDocumentation","src":"935:75:27","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":7674,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:27","nodeType":"ErrorDefinition","parameters":{"id":7673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"value","nameLocation":"1056:5:27","nodeType":"VariableDeclaration","scope":7674,"src":"1049:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7671,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:27"},"src":"1015:48:27"},{"documentation":{"id":7675,"nodeType":"StructuredDocumentation","src":"1069:67:27","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7681,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:27","nodeType":"ErrorDefinition","parameters":{"id":7680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7677,"mutability":"mutable","name":"bits","nameLocation":"1183:4:27","nodeType":"VariableDeclaration","scope":7681,"src":"1177:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7676,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7679,"mutability":"mutable","name":"value","nameLocation":"1196:5:27","nodeType":"VariableDeclaration","scope":7681,"src":"1189:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7678,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:27"},"src":"1141:62:27"},{"documentation":{"id":7682,"nodeType":"StructuredDocumentation","src":"1209:75:27","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7686,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:27","nodeType":"ErrorDefinition","parameters":{"id":7685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7684,"mutability":"mutable","name":"value","nameLocation":"1331:5:27","nodeType":"VariableDeclaration","scope":7686,"src":"1323:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:27"},"src":"1289:49:27"},{"body":{"id":7713,"nodeType":"Block","src":"1695:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"1709:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7696,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7695,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:27","memberName":"max","nodeType":"MemberAccess","src":"1717:17:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7707,"nodeType":"IfStatement","src":"1705:105:27","trueBody":{"id":7706,"nodeType":"Block","src":"1736:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"1793:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7701,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"1757:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7705,"nodeType":"RevertStatement","src":"1750:49:27"}]}},{"expression":{"arguments":[{"id":7710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"1834:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7708,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:27","typeDescriptions":{}}},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7693,"id":7712,"nodeType":"Return","src":"1819:21:27"}]},"documentation":{"id":7687,"nodeType":"StructuredDocumentation","src":"1344:280:27","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7714,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:27","nodeType":"FunctionDefinition","parameters":{"id":7690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7689,"mutability":"mutable","name":"value","nameLocation":"1656:5:27","nodeType":"VariableDeclaration","scope":7714,"src":"1648:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7688,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:27"},"returnParameters":{"id":7693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7714,"src":"1686:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7691,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:27"},"scope":9424,"src":"1629:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7741,"nodeType":"Block","src":"2204:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"2218:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7724,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7723,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:27","memberName":"max","nodeType":"MemberAccess","src":"2226:17:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7735,"nodeType":"IfStatement","src":"2214:105:27","trueBody":{"id":7734,"nodeType":"Block","src":"2245:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"2302:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7729,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"2266:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7733,"nodeType":"RevertStatement","src":"2259:49:27"}]}},{"expression":{"arguments":[{"id":7738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"2343:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7736,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:27","typeDescriptions":{}}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7721,"id":7740,"nodeType":"Return","src":"2328:21:27"}]},"documentation":{"id":7715,"nodeType":"StructuredDocumentation","src":"1853:280:27","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7742,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:27","nodeType":"FunctionDefinition","parameters":{"id":7718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7717,"mutability":"mutable","name":"value","nameLocation":"2165:5:27","nodeType":"VariableDeclaration","scope":7742,"src":"2157:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:27"},"returnParameters":{"id":7721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7742,"src":"2195:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7719,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:27"},"scope":9424,"src":"2138:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7769,"nodeType":"Block","src":"2713:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"2727:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7752,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:27","memberName":"max","nodeType":"MemberAccess","src":"2735:17:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7763,"nodeType":"IfStatement","src":"2723:105:27","trueBody":{"id":7762,"nodeType":"Block","src":"2754:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"2811:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7757,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"2775:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7761,"nodeType":"RevertStatement","src":"2768:49:27"}]}},{"expression":{"arguments":[{"id":7766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"2852:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7764,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:27","typeDescriptions":{}}},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7749,"id":7768,"nodeType":"Return","src":"2837:21:27"}]},"documentation":{"id":7743,"nodeType":"StructuredDocumentation","src":"2362:280:27","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7770,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:27","nodeType":"FunctionDefinition","parameters":{"id":7746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7745,"mutability":"mutable","name":"value","nameLocation":"2674:5:27","nodeType":"VariableDeclaration","scope":7770,"src":"2666:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:27"},"returnParameters":{"id":7749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7770,"src":"2704:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7747,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:27"},"scope":9424,"src":"2647:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7797,"nodeType":"Block","src":"3222:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7773,"src":"3236:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7780,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7779,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:27","memberName":"max","nodeType":"MemberAccess","src":"3244:17:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7791,"nodeType":"IfStatement","src":"3232:105:27","trueBody":{"id":7790,"nodeType":"Block","src":"3263:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7773,"src":"3320:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7785,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"3284:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7789,"nodeType":"RevertStatement","src":"3277:49:27"}]}},{"expression":{"arguments":[{"id":7794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7773,"src":"3361:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7792,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:27","typeDescriptions":{}}},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7777,"id":7796,"nodeType":"Return","src":"3346:21:27"}]},"documentation":{"id":7771,"nodeType":"StructuredDocumentation","src":"2871:280:27","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7798,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:27","nodeType":"FunctionDefinition","parameters":{"id":7774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7773,"mutability":"mutable","name":"value","nameLocation":"3183:5:27","nodeType":"VariableDeclaration","scope":7798,"src":"3175:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7772,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:27"},"returnParameters":{"id":7777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7798,"src":"3213:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7775,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:27"},"scope":9424,"src":"3156:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7825,"nodeType":"Block","src":"3731:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"3745:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7808,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7807,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:27","memberName":"max","nodeType":"MemberAccess","src":"3753:17:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7819,"nodeType":"IfStatement","src":"3741:105:27","trueBody":{"id":7818,"nodeType":"Block","src":"3772:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"3829:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7813,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"3793:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7817,"nodeType":"RevertStatement","src":"3786:49:27"}]}},{"expression":{"arguments":[{"id":7822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"3870:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7820,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:27","typeDescriptions":{}}},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7805,"id":7824,"nodeType":"Return","src":"3855:21:27"}]},"documentation":{"id":7799,"nodeType":"StructuredDocumentation","src":"3380:280:27","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7826,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:27","nodeType":"FunctionDefinition","parameters":{"id":7802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7801,"mutability":"mutable","name":"value","nameLocation":"3692:5:27","nodeType":"VariableDeclaration","scope":7826,"src":"3684:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7800,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:27"},"returnParameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7826,"src":"3722:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7803,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:27"},"scope":9424,"src":"3665:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7853,"nodeType":"Block","src":"4240:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"4254:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7836,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7835,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:27","memberName":"max","nodeType":"MemberAccess","src":"4262:17:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7847,"nodeType":"IfStatement","src":"4250:105:27","trueBody":{"id":7846,"nodeType":"Block","src":"4281:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"4338:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7841,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"4302:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7845,"nodeType":"RevertStatement","src":"4295:49:27"}]}},{"expression":{"arguments":[{"id":7850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"4379:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7848,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:27","typeDescriptions":{}}},"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7833,"id":7852,"nodeType":"Return","src":"4364:21:27"}]},"documentation":{"id":7827,"nodeType":"StructuredDocumentation","src":"3889:280:27","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7854,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:27","nodeType":"FunctionDefinition","parameters":{"id":7830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7829,"mutability":"mutable","name":"value","nameLocation":"4201:5:27","nodeType":"VariableDeclaration","scope":7854,"src":"4193:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7828,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:27"},"returnParameters":{"id":7833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7854,"src":"4231:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7831,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:27"},"scope":9424,"src":"4174:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7881,"nodeType":"Block","src":"4749:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"4763:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7864,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7863,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:27","memberName":"max","nodeType":"MemberAccess","src":"4771:17:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7875,"nodeType":"IfStatement","src":"4759:105:27","trueBody":{"id":7874,"nodeType":"Block","src":"4790:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"4847:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7869,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"4811:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7873,"nodeType":"RevertStatement","src":"4804:49:27"}]}},{"expression":{"arguments":[{"id":7878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"4888:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7876,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:27","typeDescriptions":{}}},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7861,"id":7880,"nodeType":"Return","src":"4873:21:27"}]},"documentation":{"id":7855,"nodeType":"StructuredDocumentation","src":"4398:280:27","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7882,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:27","nodeType":"FunctionDefinition","parameters":{"id":7858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7857,"mutability":"mutable","name":"value","nameLocation":"4710:5:27","nodeType":"VariableDeclaration","scope":7882,"src":"4702:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7856,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:27"},"returnParameters":{"id":7861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7882,"src":"4740:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7859,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:27"},"scope":9424,"src":"4683:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7909,"nodeType":"Block","src":"5258:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"5272:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7892,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7891,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:27","memberName":"max","nodeType":"MemberAccess","src":"5280:17:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7903,"nodeType":"IfStatement","src":"5268:105:27","trueBody":{"id":7902,"nodeType":"Block","src":"5299:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"5356:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7897,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"5320:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7901,"nodeType":"RevertStatement","src":"5313:49:27"}]}},{"expression":{"arguments":[{"id":7906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"5397:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7904,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:27","typeDescriptions":{}}},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7889,"id":7908,"nodeType":"Return","src":"5382:21:27"}]},"documentation":{"id":7883,"nodeType":"StructuredDocumentation","src":"4907:280:27","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7910,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:27","nodeType":"FunctionDefinition","parameters":{"id":7886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7885,"mutability":"mutable","name":"value","nameLocation":"5219:5:27","nodeType":"VariableDeclaration","scope":7910,"src":"5211:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7884,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:27"},"returnParameters":{"id":7889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7910,"src":"5249:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7887,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:27"},"scope":9424,"src":"5192:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7937,"nodeType":"Block","src":"5767:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"5781:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7920,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7919,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:27","memberName":"max","nodeType":"MemberAccess","src":"5789:17:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7931,"nodeType":"IfStatement","src":"5777:105:27","trueBody":{"id":7930,"nodeType":"Block","src":"5808:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"5865:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7925,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"5829:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7929,"nodeType":"RevertStatement","src":"5822:49:27"}]}},{"expression":{"arguments":[{"id":7934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"5906:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7932,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:27","typeDescriptions":{}}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7917,"id":7936,"nodeType":"Return","src":"5891:21:27"}]},"documentation":{"id":7911,"nodeType":"StructuredDocumentation","src":"5416:280:27","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7938,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:27","nodeType":"FunctionDefinition","parameters":{"id":7914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7913,"mutability":"mutable","name":"value","nameLocation":"5728:5:27","nodeType":"VariableDeclaration","scope":7938,"src":"5720:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7912,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:27"},"returnParameters":{"id":7917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7938,"src":"5758:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7915,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:27"},"scope":9424,"src":"5701:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7965,"nodeType":"Block","src":"6276:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"6290:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7948,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7947,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:27","memberName":"max","nodeType":"MemberAccess","src":"6298:17:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7959,"nodeType":"IfStatement","src":"6286:105:27","trueBody":{"id":7958,"nodeType":"Block","src":"6317:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"6374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7953,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"6338:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7957,"nodeType":"RevertStatement","src":"6331:49:27"}]}},{"expression":{"arguments":[{"id":7962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"6415:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7960,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:27","typeDescriptions":{}}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7945,"id":7964,"nodeType":"Return","src":"6400:21:27"}]},"documentation":{"id":7939,"nodeType":"StructuredDocumentation","src":"5925:280:27","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7966,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:27","nodeType":"FunctionDefinition","parameters":{"id":7942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7941,"mutability":"mutable","name":"value","nameLocation":"6237:5:27","nodeType":"VariableDeclaration","scope":7966,"src":"6229:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7940,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:27"},"returnParameters":{"id":7945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7966,"src":"6267:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7943,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:27"},"scope":9424,"src":"6210:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7993,"nodeType":"Block","src":"6785:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"6799:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7976,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7975,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:27","memberName":"max","nodeType":"MemberAccess","src":"6807:17:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7987,"nodeType":"IfStatement","src":"6795:105:27","trueBody":{"id":7986,"nodeType":"Block","src":"6826:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"6883:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7981,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"6847:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7985,"nodeType":"RevertStatement","src":"6840:49:27"}]}},{"expression":{"arguments":[{"id":7990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"6924:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7988,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:27","typeDescriptions":{}}},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7973,"id":7992,"nodeType":"Return","src":"6909:21:27"}]},"documentation":{"id":7967,"nodeType":"StructuredDocumentation","src":"6434:280:27","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7994,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:27","nodeType":"FunctionDefinition","parameters":{"id":7970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7969,"mutability":"mutable","name":"value","nameLocation":"6746:5:27","nodeType":"VariableDeclaration","scope":7994,"src":"6738:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7968,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:27"},"returnParameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7994,"src":"6776:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7971,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:27"},"scope":9424,"src":"6719:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8021,"nodeType":"Block","src":"7294:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"7308:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8004,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":8003,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":8007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:27","memberName":"max","nodeType":"MemberAccess","src":"7316:17:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8015,"nodeType":"IfStatement","src":"7304:105:27","trueBody":{"id":8014,"nodeType":"Block","src":"7335:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"7392:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8009,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"7356:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8013,"nodeType":"RevertStatement","src":"7349:49:27"}]}},{"expression":{"arguments":[{"id":8018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"7433:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8016,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:27","typeDescriptions":{}}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8001,"id":8020,"nodeType":"Return","src":"7418:21:27"}]},"documentation":{"id":7995,"nodeType":"StructuredDocumentation","src":"6943:280:27","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8022,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:27","nodeType":"FunctionDefinition","parameters":{"id":7998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7997,"mutability":"mutable","name":"value","nameLocation":"7255:5:27","nodeType":"VariableDeclaration","scope":8022,"src":"7247:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7996,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:27"},"returnParameters":{"id":8001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8022,"src":"7285:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7999,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:27"},"scope":9424,"src":"7228:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8049,"nodeType":"Block","src":"7803:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"7817:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8032,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":8031,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:27","memberName":"max","nodeType":"MemberAccess","src":"7825:17:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8043,"nodeType":"IfStatement","src":"7813:105:27","trueBody":{"id":8042,"nodeType":"Block","src":"7844:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"7901:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8037,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"7865:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8041,"nodeType":"RevertStatement","src":"7858:49:27"}]}},{"expression":{"arguments":[{"id":8046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"7942:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8044,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:27","typeDescriptions":{}}},"id":8047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":8029,"id":8048,"nodeType":"Return","src":"7927:21:27"}]},"documentation":{"id":8023,"nodeType":"StructuredDocumentation","src":"7452:280:27","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8050,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:27","nodeType":"FunctionDefinition","parameters":{"id":8026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8025,"mutability":"mutable","name":"value","nameLocation":"7764:5:27","nodeType":"VariableDeclaration","scope":8050,"src":"7756:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8024,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:27"},"returnParameters":{"id":8029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8050,"src":"7794:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":8027,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:27"},"scope":9424,"src":"7737:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8077,"nodeType":"Block","src":"8312:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"8326:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8060,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":8059,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":8063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:27","memberName":"max","nodeType":"MemberAccess","src":"8334:17:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8071,"nodeType":"IfStatement","src":"8322:105:27","trueBody":{"id":8070,"nodeType":"Block","src":"8353:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"8410:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8065,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"8374:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8069,"nodeType":"RevertStatement","src":"8367:49:27"}]}},{"expression":{"arguments":[{"id":8074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"8451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8072,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:27","typeDescriptions":{}}},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":8057,"id":8076,"nodeType":"Return","src":"8436:21:27"}]},"documentation":{"id":8051,"nodeType":"StructuredDocumentation","src":"7961:280:27","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8078,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:27","nodeType":"FunctionDefinition","parameters":{"id":8054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8053,"mutability":"mutable","name":"value","nameLocation":"8273:5:27","nodeType":"VariableDeclaration","scope":8078,"src":"8265:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8052,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:27"},"returnParameters":{"id":8057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8078,"src":"8303:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":8055,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:27"},"scope":9424,"src":"8246:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8105,"nodeType":"Block","src":"8821:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"8835:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8088,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":8087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":8091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:27","memberName":"max","nodeType":"MemberAccess","src":"8843:17:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8099,"nodeType":"IfStatement","src":"8831:105:27","trueBody":{"id":8098,"nodeType":"Block","src":"8862:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"8919:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8093,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"8883:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8097,"nodeType":"RevertStatement","src":"8876:49:27"}]}},{"expression":{"arguments":[{"id":8102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"8960:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8100,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:27","typeDescriptions":{}}},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":8085,"id":8104,"nodeType":"Return","src":"8945:21:27"}]},"documentation":{"id":8079,"nodeType":"StructuredDocumentation","src":"8470:280:27","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8106,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:27","nodeType":"FunctionDefinition","parameters":{"id":8082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8081,"mutability":"mutable","name":"value","nameLocation":"8782:5:27","nodeType":"VariableDeclaration","scope":8106,"src":"8774:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8080,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:27"},"returnParameters":{"id":8085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8106,"src":"8812:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":8083,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:27"},"scope":9424,"src":"8755:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8133,"nodeType":"Block","src":"9330:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"9344:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8116,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":8115,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":8119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:27","memberName":"max","nodeType":"MemberAccess","src":"9352:17:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8127,"nodeType":"IfStatement","src":"9340:105:27","trueBody":{"id":8126,"nodeType":"Block","src":"9371:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"9428:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8121,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"9392:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8125,"nodeType":"RevertStatement","src":"9385:49:27"}]}},{"expression":{"arguments":[{"id":8130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"9469:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8128,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:27","typeDescriptions":{}}},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":8113,"id":8132,"nodeType":"Return","src":"9454:21:27"}]},"documentation":{"id":8107,"nodeType":"StructuredDocumentation","src":"8979:280:27","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8134,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:27","nodeType":"FunctionDefinition","parameters":{"id":8110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8109,"mutability":"mutable","name":"value","nameLocation":"9291:5:27","nodeType":"VariableDeclaration","scope":8134,"src":"9283:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8108,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:27"},"returnParameters":{"id":8113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8134,"src":"9321:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8111,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:27"},"scope":9424,"src":"9264:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8161,"nodeType":"Block","src":"9839:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"9853:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8144,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":8143,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":8147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:27","memberName":"max","nodeType":"MemberAccess","src":"9861:17:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8155,"nodeType":"IfStatement","src":"9849:105:27","trueBody":{"id":8154,"nodeType":"Block","src":"9880:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"9937:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8149,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"9901:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8153,"nodeType":"RevertStatement","src":"9894:49:27"}]}},{"expression":{"arguments":[{"id":8158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"9978:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8156,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:27","typeDescriptions":{}}},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":8141,"id":8160,"nodeType":"Return","src":"9963:21:27"}]},"documentation":{"id":8135,"nodeType":"StructuredDocumentation","src":"9488:280:27","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8162,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:27","nodeType":"FunctionDefinition","parameters":{"id":8138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8137,"mutability":"mutable","name":"value","nameLocation":"9800:5:27","nodeType":"VariableDeclaration","scope":8162,"src":"9792:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8136,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:27"},"returnParameters":{"id":8141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8162,"src":"9830:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":8139,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:27"},"scope":9424,"src":"9773:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8189,"nodeType":"Block","src":"10348:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"10362:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8172,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8171,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:27","memberName":"max","nodeType":"MemberAccess","src":"10370:17:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8183,"nodeType":"IfStatement","src":"10358:105:27","trueBody":{"id":8182,"nodeType":"Block","src":"10389:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"10446:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8177,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"10410:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8181,"nodeType":"RevertStatement","src":"10403:49:27"}]}},{"expression":{"arguments":[{"id":8186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"10487:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8184,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:27","typeDescriptions":{}}},"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":8169,"id":8188,"nodeType":"Return","src":"10472:21:27"}]},"documentation":{"id":8163,"nodeType":"StructuredDocumentation","src":"9997:280:27","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8190,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:27","nodeType":"FunctionDefinition","parameters":{"id":8166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8165,"mutability":"mutable","name":"value","nameLocation":"10309:5:27","nodeType":"VariableDeclaration","scope":8190,"src":"10301:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8164,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:27"},"returnParameters":{"id":8169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8190,"src":"10339:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8167,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:27"},"scope":9424,"src":"10282:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8217,"nodeType":"Block","src":"10857:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"10871:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8200,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":8199,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":8203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:27","memberName":"max","nodeType":"MemberAccess","src":"10879:17:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8211,"nodeType":"IfStatement","src":"10867:105:27","trueBody":{"id":8210,"nodeType":"Block","src":"10898:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"10955:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8205,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"10919:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8209,"nodeType":"RevertStatement","src":"10912:49:27"}]}},{"expression":{"arguments":[{"id":8214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"10996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8212,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:27","typeDescriptions":{}}},"id":8215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":8197,"id":8216,"nodeType":"Return","src":"10981:21:27"}]},"documentation":{"id":8191,"nodeType":"StructuredDocumentation","src":"10506:280:27","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8218,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:27","nodeType":"FunctionDefinition","parameters":{"id":8194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8193,"mutability":"mutable","name":"value","nameLocation":"10818:5:27","nodeType":"VariableDeclaration","scope":8218,"src":"10810:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8192,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:27"},"returnParameters":{"id":8197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8218,"src":"10848:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":8195,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:27"},"scope":9424,"src":"10791:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8245,"nodeType":"Block","src":"11360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"11374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8228,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":8227,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:27","memberName":"max","nodeType":"MemberAccess","src":"11382:16:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8239,"nodeType":"IfStatement","src":"11370:103:27","trueBody":{"id":8238,"nodeType":"Block","src":"11400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"11456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8233,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"11421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8237,"nodeType":"RevertStatement","src":"11414:48:27"}]}},{"expression":{"arguments":[{"id":8242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"11496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8240,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:27","typeDescriptions":{}}},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8225,"id":8244,"nodeType":"Return","src":"11482:20:27"}]},"documentation":{"id":8219,"nodeType":"StructuredDocumentation","src":"11015:276:27","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8246,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:27","nodeType":"FunctionDefinition","parameters":{"id":8222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8221,"mutability":"mutable","name":"value","nameLocation":"11322:5:27","nodeType":"VariableDeclaration","scope":8246,"src":"11314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8220,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:27"},"returnParameters":{"id":8225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8246,"src":"11352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8223,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:27"},"scope":9424,"src":"11296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8273,"nodeType":"Block","src":"11860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"11874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8256,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":8255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":8259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:27","memberName":"max","nodeType":"MemberAccess","src":"11882:16:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8267,"nodeType":"IfStatement","src":"11870:103:27","trueBody":{"id":8266,"nodeType":"Block","src":"11900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"11956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8261,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"11921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8265,"nodeType":"RevertStatement","src":"11914:48:27"}]}},{"expression":{"arguments":[{"id":8270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"11996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8268,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:27","typeDescriptions":{}}},"id":8271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":8253,"id":8272,"nodeType":"Return","src":"11982:20:27"}]},"documentation":{"id":8247,"nodeType":"StructuredDocumentation","src":"11515:276:27","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8274,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:27","nodeType":"FunctionDefinition","parameters":{"id":8250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8249,"mutability":"mutable","name":"value","nameLocation":"11822:5:27","nodeType":"VariableDeclaration","scope":8274,"src":"11814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8248,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:27"},"returnParameters":{"id":8253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8274,"src":"11852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":8251,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:27"},"scope":9424,"src":"11796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8301,"nodeType":"Block","src":"12360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8277,"src":"12374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8284,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":8283,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":8287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:27","memberName":"max","nodeType":"MemberAccess","src":"12382:16:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8295,"nodeType":"IfStatement","src":"12370:103:27","trueBody":{"id":8294,"nodeType":"Block","src":"12400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8277,"src":"12456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8289,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"12421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8293,"nodeType":"RevertStatement","src":"12414:48:27"}]}},{"expression":{"arguments":[{"id":8298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8277,"src":"12496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8296,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:27","typeDescriptions":{}}},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":8281,"id":8300,"nodeType":"Return","src":"12482:20:27"}]},"documentation":{"id":8275,"nodeType":"StructuredDocumentation","src":"12015:276:27","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8302,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:27","nodeType":"FunctionDefinition","parameters":{"id":8278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8277,"mutability":"mutable","name":"value","nameLocation":"12322:5:27","nodeType":"VariableDeclaration","scope":8302,"src":"12314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8276,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:27"},"returnParameters":{"id":8281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8302,"src":"12352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8279,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:27"},"scope":9424,"src":"12296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8329,"nodeType":"Block","src":"12860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8305,"src":"12874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8312,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":8311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":8315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:27","memberName":"max","nodeType":"MemberAccess","src":"12882:16:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8323,"nodeType":"IfStatement","src":"12870:103:27","trueBody":{"id":8322,"nodeType":"Block","src":"12900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8305,"src":"12956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8317,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"12921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8321,"nodeType":"RevertStatement","src":"12914:48:27"}]}},{"expression":{"arguments":[{"id":8326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8305,"src":"12996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8324,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:27","typeDescriptions":{}}},"id":8327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":8309,"id":8328,"nodeType":"Return","src":"12982:20:27"}]},"documentation":{"id":8303,"nodeType":"StructuredDocumentation","src":"12515:276:27","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8330,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:27","nodeType":"FunctionDefinition","parameters":{"id":8306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8305,"mutability":"mutable","name":"value","nameLocation":"12822:5:27","nodeType":"VariableDeclaration","scope":8330,"src":"12814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8304,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:27"},"returnParameters":{"id":8309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8330,"src":"12852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":8307,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:27"},"scope":9424,"src":"12796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8357,"nodeType":"Block","src":"13360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8333,"src":"13374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8340,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8339,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:27","memberName":"max","nodeType":"MemberAccess","src":"13382:16:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8351,"nodeType":"IfStatement","src":"13370:103:27","trueBody":{"id":8350,"nodeType":"Block","src":"13400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8333,"src":"13456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8345,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"13421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8349,"nodeType":"RevertStatement","src":"13414:48:27"}]}},{"expression":{"arguments":[{"id":8354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8333,"src":"13496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8352,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:27","typeDescriptions":{}}},"id":8355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8337,"id":8356,"nodeType":"Return","src":"13482:20:27"}]},"documentation":{"id":8331,"nodeType":"StructuredDocumentation","src":"13015:276:27","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8358,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:27","nodeType":"FunctionDefinition","parameters":{"id":8334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8333,"mutability":"mutable","name":"value","nameLocation":"13322:5:27","nodeType":"VariableDeclaration","scope":8358,"src":"13314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8332,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:27"},"returnParameters":{"id":8337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8358,"src":"13352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8335,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:27"},"scope":9424,"src":"13296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8385,"nodeType":"Block","src":"13860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"13874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8368,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":8367,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":8371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:27","memberName":"max","nodeType":"MemberAccess","src":"13882:16:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8379,"nodeType":"IfStatement","src":"13870:103:27","trueBody":{"id":8378,"nodeType":"Block","src":"13900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"13956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8373,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"13921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8377,"nodeType":"RevertStatement","src":"13914:48:27"}]}},{"expression":{"arguments":[{"id":8382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"13996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8380,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:27","typeDescriptions":{}}},"id":8383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":8365,"id":8384,"nodeType":"Return","src":"13982:20:27"}]},"documentation":{"id":8359,"nodeType":"StructuredDocumentation","src":"13515:276:27","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8386,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:27","nodeType":"FunctionDefinition","parameters":{"id":8362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8361,"mutability":"mutable","name":"value","nameLocation":"13822:5:27","nodeType":"VariableDeclaration","scope":8386,"src":"13814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8360,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:27"},"returnParameters":{"id":8365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8386,"src":"13852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":8363,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:27"},"scope":9424,"src":"13796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8413,"nodeType":"Block","src":"14360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"14374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8396,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":8395,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":8399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:27","memberName":"max","nodeType":"MemberAccess","src":"14382:16:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8407,"nodeType":"IfStatement","src":"14370:103:27","trueBody":{"id":8406,"nodeType":"Block","src":"14400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"14456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8401,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"14421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8405,"nodeType":"RevertStatement","src":"14414:48:27"}]}},{"expression":{"arguments":[{"id":8410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"14496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8408,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:27","typeDescriptions":{}}},"id":8411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8393,"id":8412,"nodeType":"Return","src":"14482:20:27"}]},"documentation":{"id":8387,"nodeType":"StructuredDocumentation","src":"14015:276:27","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8414,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:27","nodeType":"FunctionDefinition","parameters":{"id":8390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8389,"mutability":"mutable","name":"value","nameLocation":"14322:5:27","nodeType":"VariableDeclaration","scope":8414,"src":"14314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8388,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:27"},"returnParameters":{"id":8393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8414,"src":"14352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8391,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:27"},"scope":9424,"src":"14296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8441,"nodeType":"Block","src":"14860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8417,"src":"14874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8424,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":8423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":8427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:27","memberName":"max","nodeType":"MemberAccess","src":"14882:16:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8435,"nodeType":"IfStatement","src":"14870:103:27","trueBody":{"id":8434,"nodeType":"Block","src":"14900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8417,"src":"14956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8429,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"14921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8433,"nodeType":"RevertStatement","src":"14914:48:27"}]}},{"expression":{"arguments":[{"id":8438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8417,"src":"14996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8436,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:27","typeDescriptions":{}}},"id":8439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":8421,"id":8440,"nodeType":"Return","src":"14982:20:27"}]},"documentation":{"id":8415,"nodeType":"StructuredDocumentation","src":"14515:276:27","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8442,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:27","nodeType":"FunctionDefinition","parameters":{"id":8418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8417,"mutability":"mutable","name":"value","nameLocation":"14822:5:27","nodeType":"VariableDeclaration","scope":8442,"src":"14814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8416,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:27"},"returnParameters":{"id":8421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8442,"src":"14852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8419,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:27"},"scope":9424,"src":"14796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8469,"nodeType":"Block","src":"15360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8445,"src":"15374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8452,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":8451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":8455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:27","memberName":"max","nodeType":"MemberAccess","src":"15382:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8463,"nodeType":"IfStatement","src":"15370:103:27","trueBody":{"id":8462,"nodeType":"Block","src":"15400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8445,"src":"15456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8457,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"15421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8461,"nodeType":"RevertStatement","src":"15414:48:27"}]}},{"expression":{"arguments":[{"id":8466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8445,"src":"15496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8464,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:27","typeDescriptions":{}}},"id":8467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8449,"id":8468,"nodeType":"Return","src":"15482:20:27"}]},"documentation":{"id":8443,"nodeType":"StructuredDocumentation","src":"15015:276:27","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8470,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:27","nodeType":"FunctionDefinition","parameters":{"id":8446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8445,"mutability":"mutable","name":"value","nameLocation":"15322:5:27","nodeType":"VariableDeclaration","scope":8470,"src":"15314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8444,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:27"},"returnParameters":{"id":8449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8470,"src":"15352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8447,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:27"},"scope":9424,"src":"15296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8497,"nodeType":"Block","src":"15860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8473,"src":"15874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8480,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":8479,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":8483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:27","memberName":"max","nodeType":"MemberAccess","src":"15882:16:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8491,"nodeType":"IfStatement","src":"15870:103:27","trueBody":{"id":8490,"nodeType":"Block","src":"15900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8473,"src":"15956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8485,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"15921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8489,"nodeType":"RevertStatement","src":"15914:48:27"}]}},{"expression":{"arguments":[{"id":8494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8473,"src":"15996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8492,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:27","typeDescriptions":{}}},"id":8495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":8477,"id":8496,"nodeType":"Return","src":"15982:20:27"}]},"documentation":{"id":8471,"nodeType":"StructuredDocumentation","src":"15515:276:27","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8498,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:27","nodeType":"FunctionDefinition","parameters":{"id":8474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8473,"mutability":"mutable","name":"value","nameLocation":"15822:5:27","nodeType":"VariableDeclaration","scope":8498,"src":"15814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8472,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:27"},"returnParameters":{"id":8477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8498,"src":"15852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8475,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:27"},"scope":9424,"src":"15796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8525,"nodeType":"Block","src":"16360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"16374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8508,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":8507,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":8511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:27","memberName":"max","nodeType":"MemberAccess","src":"16382:16:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8519,"nodeType":"IfStatement","src":"16370:103:27","trueBody":{"id":8518,"nodeType":"Block","src":"16400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"16456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8513,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"16421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8517,"nodeType":"RevertStatement","src":"16414:48:27"}]}},{"expression":{"arguments":[{"id":8522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"16496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8520,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:27","typeDescriptions":{}}},"id":8523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8505,"id":8524,"nodeType":"Return","src":"16482:20:27"}]},"documentation":{"id":8499,"nodeType":"StructuredDocumentation","src":"16015:276:27","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8526,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:27","nodeType":"FunctionDefinition","parameters":{"id":8502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8501,"mutability":"mutable","name":"value","nameLocation":"16322:5:27","nodeType":"VariableDeclaration","scope":8526,"src":"16314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8500,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:27"},"returnParameters":{"id":8505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8526,"src":"16352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8503,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:27"},"scope":9424,"src":"16296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8553,"nodeType":"Block","src":"16854:146:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"16868:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8536,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:27","memberName":"max","nodeType":"MemberAccess","src":"16876:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8547,"nodeType":"IfStatement","src":"16864:101:27","trueBody":{"id":8546,"nodeType":"Block","src":"16893:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"16948:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8541,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"16914:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8545,"nodeType":"RevertStatement","src":"16907:47:27"}]}},{"expression":{"arguments":[{"id":8550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"16987:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8548,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:27","typeDescriptions":{}}},"id":8551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8533,"id":8552,"nodeType":"Return","src":"16974:19:27"}]},"documentation":{"id":8527,"nodeType":"StructuredDocumentation","src":"16515:272:27","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8554,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:27","nodeType":"FunctionDefinition","parameters":{"id":8530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8529,"mutability":"mutable","name":"value","nameLocation":"16817:5:27","nodeType":"VariableDeclaration","scope":8554,"src":"16809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8528,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:27"},"returnParameters":{"id":8533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8554,"src":"16847:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8531,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:27"},"scope":9424,"src":"16792:208:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8576,"nodeType":"Block","src":"17236:128:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"17250:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8570,"nodeType":"IfStatement","src":"17246:81:27","trueBody":{"id":8569,"nodeType":"Block","src":"17261:66:27","statements":[{"errorCall":{"arguments":[{"id":8566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"17310:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8565,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"17282:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":8567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8568,"nodeType":"RevertStatement","src":"17275:41:27"}]}},{"expression":{"arguments":[{"id":8573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"17351:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8571,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:27","typeDescriptions":{}}},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8561,"id":8575,"nodeType":"Return","src":"17336:21:27"}]},"documentation":{"id":8555,"nodeType":"StructuredDocumentation","src":"17006:160:27","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":8577,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:27","nodeType":"FunctionDefinition","parameters":{"id":8558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8557,"mutability":"mutable","name":"value","nameLocation":"17197:5:27","nodeType":"VariableDeclaration","scope":8577,"src":"17190:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8556,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:27"},"returnParameters":{"id":8561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8577,"src":"17227:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8559,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:27"},"scope":9424,"src":"17171:193:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8602,"nodeType":"Block","src":"17761:150:27","statements":[{"expression":{"id":8590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8585,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"17771:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8580,"src":"17791:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":8586,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:27","typeDescriptions":{}}},"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":8591,"nodeType":"ExpressionStatement","src":"17771:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8592,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"17811:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8580,"src":"17825:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8601,"nodeType":"IfStatement","src":"17807:98:27","trueBody":{"id":8600,"nodeType":"Block","src":"17832:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8580,"src":"17888:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8595,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"17853:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8599,"nodeType":"RevertStatement","src":"17846:48:27"}]}}]},"documentation":{"id":8578,"nodeType":"StructuredDocumentation","src":"17370:312:27","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8603,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:27","nodeType":"FunctionDefinition","parameters":{"id":8581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8580,"mutability":"mutable","name":"value","nameLocation":"17712:5:27","nodeType":"VariableDeclaration","scope":8603,"src":"17705:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8579,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:27"},"returnParameters":{"id":8584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8583,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:27","nodeType":"VariableDeclaration","scope":8603,"src":"17742:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":8582,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:27"},"scope":9424,"src":"17687:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8628,"nodeType":"Block","src":"18308:150:27","statements":[{"expression":{"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8611,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"18318:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8606,"src":"18338:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":8612,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:27","typeDescriptions":{}}},"id":8615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":8617,"nodeType":"ExpressionStatement","src":"18318:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8618,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"18358:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8606,"src":"18372:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8627,"nodeType":"IfStatement","src":"18354:98:27","trueBody":{"id":8626,"nodeType":"Block","src":"18379:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8606,"src":"18435:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8621,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"18400:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8625,"nodeType":"RevertStatement","src":"18393:48:27"}]}}]},"documentation":{"id":8604,"nodeType":"StructuredDocumentation","src":"17917:312:27","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8629,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:27","nodeType":"FunctionDefinition","parameters":{"id":8607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8606,"mutability":"mutable","name":"value","nameLocation":"18259:5:27","nodeType":"VariableDeclaration","scope":8629,"src":"18252:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8605,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:27"},"returnParameters":{"id":8610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8609,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:27","nodeType":"VariableDeclaration","scope":8629,"src":"18289:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":8608,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:27"},"scope":9424,"src":"18234:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8654,"nodeType":"Block","src":"18855:150:27","statements":[{"expression":{"id":8642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8637,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8635,"src":"18865:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8632,"src":"18885:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":8638,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:27","typeDescriptions":{}}},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":8643,"nodeType":"ExpressionStatement","src":"18865:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8635,"src":"18905:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8632,"src":"18919:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8653,"nodeType":"IfStatement","src":"18901:98:27","trueBody":{"id":8652,"nodeType":"Block","src":"18926:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8632,"src":"18982:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8647,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"18947:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8651,"nodeType":"RevertStatement","src":"18940:48:27"}]}}]},"documentation":{"id":8630,"nodeType":"StructuredDocumentation","src":"18464:312:27","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8655,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:27","nodeType":"FunctionDefinition","parameters":{"id":8633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8632,"mutability":"mutable","name":"value","nameLocation":"18806:5:27","nodeType":"VariableDeclaration","scope":8655,"src":"18799:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8631,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:27"},"returnParameters":{"id":8636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8635,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:27","nodeType":"VariableDeclaration","scope":8655,"src":"18836:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":8634,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:27"},"scope":9424,"src":"18781:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8680,"nodeType":"Block","src":"19402:150:27","statements":[{"expression":{"id":8668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8663,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"19412:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"19432:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":8664,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:27","typeDescriptions":{}}},"id":8667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":8669,"nodeType":"ExpressionStatement","src":"19412:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"19452:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"19466:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8679,"nodeType":"IfStatement","src":"19448:98:27","trueBody":{"id":8678,"nodeType":"Block","src":"19473:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"19529:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8673,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"19494:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8677,"nodeType":"RevertStatement","src":"19487:48:27"}]}}]},"documentation":{"id":8656,"nodeType":"StructuredDocumentation","src":"19011:312:27","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8681,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:27","nodeType":"FunctionDefinition","parameters":{"id":8659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8658,"mutability":"mutable","name":"value","nameLocation":"19353:5:27","nodeType":"VariableDeclaration","scope":8681,"src":"19346:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8657,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:27"},"returnParameters":{"id":8662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8661,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:27","nodeType":"VariableDeclaration","scope":8681,"src":"19383:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":8660,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:27"},"scope":9424,"src":"19328:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8706,"nodeType":"Block","src":"19949:150:27","statements":[{"expression":{"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8689,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"19959:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"19979:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8690,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:27","typeDescriptions":{}}},"id":8693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8695,"nodeType":"ExpressionStatement","src":"19959:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"19999:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"20013:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8705,"nodeType":"IfStatement","src":"19995:98:27","trueBody":{"id":8704,"nodeType":"Block","src":"20020:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"20076:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8699,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"20041:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8703,"nodeType":"RevertStatement","src":"20034:48:27"}]}}]},"documentation":{"id":8682,"nodeType":"StructuredDocumentation","src":"19558:312:27","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8707,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:27","nodeType":"FunctionDefinition","parameters":{"id":8685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8684,"mutability":"mutable","name":"value","nameLocation":"19900:5:27","nodeType":"VariableDeclaration","scope":8707,"src":"19893:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8683,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:27"},"returnParameters":{"id":8688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8687,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:27","nodeType":"VariableDeclaration","scope":8707,"src":"19930:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8686,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:27"},"scope":9424,"src":"19875:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8732,"nodeType":"Block","src":"20496:150:27","statements":[{"expression":{"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8715,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"20506:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"20526:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8716,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:27","typeDescriptions":{}}},"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8721,"nodeType":"ExpressionStatement","src":"20506:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"20546:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"20560:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8731,"nodeType":"IfStatement","src":"20542:98:27","trueBody":{"id":8730,"nodeType":"Block","src":"20567:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"20623:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8725,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"20588:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8729,"nodeType":"RevertStatement","src":"20581:48:27"}]}}]},"documentation":{"id":8708,"nodeType":"StructuredDocumentation","src":"20105:312:27","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8733,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:27","nodeType":"FunctionDefinition","parameters":{"id":8711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8710,"mutability":"mutable","name":"value","nameLocation":"20447:5:27","nodeType":"VariableDeclaration","scope":8733,"src":"20440:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8709,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:27"},"returnParameters":{"id":8714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8713,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:27","nodeType":"VariableDeclaration","scope":8733,"src":"20477:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8712,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:27"},"scope":9424,"src":"20422:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8758,"nodeType":"Block","src":"21043:150:27","statements":[{"expression":{"id":8746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8741,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"21053:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"21073:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8742,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:27","typeDescriptions":{}}},"id":8745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8747,"nodeType":"ExpressionStatement","src":"21053:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"21093:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"21107:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8757,"nodeType":"IfStatement","src":"21089:98:27","trueBody":{"id":8756,"nodeType":"Block","src":"21114:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"21170:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8751,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"21135:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8755,"nodeType":"RevertStatement","src":"21128:48:27"}]}}]},"documentation":{"id":8734,"nodeType":"StructuredDocumentation","src":"20652:312:27","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8759,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:27","nodeType":"FunctionDefinition","parameters":{"id":8737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8736,"mutability":"mutable","name":"value","nameLocation":"20994:5:27","nodeType":"VariableDeclaration","scope":8759,"src":"20987:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8735,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:27"},"returnParameters":{"id":8740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8739,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:27","nodeType":"VariableDeclaration","scope":8759,"src":"21024:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8738,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:27"},"scope":9424,"src":"20969:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8784,"nodeType":"Block","src":"21590:150:27","statements":[{"expression":{"id":8772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8767,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"21600:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8762,"src":"21620:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8768,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:27","typeDescriptions":{}}},"id":8771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8773,"nodeType":"ExpressionStatement","src":"21600:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"21640:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8762,"src":"21654:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8783,"nodeType":"IfStatement","src":"21636:98:27","trueBody":{"id":8782,"nodeType":"Block","src":"21661:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8762,"src":"21717:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8777,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"21682:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8781,"nodeType":"RevertStatement","src":"21675:48:27"}]}}]},"documentation":{"id":8760,"nodeType":"StructuredDocumentation","src":"21199:312:27","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8785,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:27","nodeType":"FunctionDefinition","parameters":{"id":8763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8762,"mutability":"mutable","name":"value","nameLocation":"21541:5:27","nodeType":"VariableDeclaration","scope":8785,"src":"21534:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8761,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:27"},"returnParameters":{"id":8766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8765,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:27","nodeType":"VariableDeclaration","scope":8785,"src":"21571:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8764,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:27"},"scope":9424,"src":"21516:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8810,"nodeType":"Block","src":"22137:150:27","statements":[{"expression":{"id":8798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8793,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"22147:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8788,"src":"22167:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8794,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:27","typeDescriptions":{}}},"id":8797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8799,"nodeType":"ExpressionStatement","src":"22147:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"22187:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8788,"src":"22201:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8809,"nodeType":"IfStatement","src":"22183:98:27","trueBody":{"id":8808,"nodeType":"Block","src":"22208:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8788,"src":"22264:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8803,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"22229:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8807,"nodeType":"RevertStatement","src":"22222:48:27"}]}}]},"documentation":{"id":8786,"nodeType":"StructuredDocumentation","src":"21746:312:27","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8811,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:27","nodeType":"FunctionDefinition","parameters":{"id":8789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8788,"mutability":"mutable","name":"value","nameLocation":"22088:5:27","nodeType":"VariableDeclaration","scope":8811,"src":"22081:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8787,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:27"},"returnParameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8791,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:27","nodeType":"VariableDeclaration","scope":8811,"src":"22118:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8790,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:27"},"scope":9424,"src":"22063:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8836,"nodeType":"Block","src":"22684:150:27","statements":[{"expression":{"id":8824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8819,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"22694:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8814,"src":"22714:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8820,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:27","typeDescriptions":{}}},"id":8823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8825,"nodeType":"ExpressionStatement","src":"22694:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"22734:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8814,"src":"22748:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8835,"nodeType":"IfStatement","src":"22730:98:27","trueBody":{"id":8834,"nodeType":"Block","src":"22755:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8814,"src":"22811:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8829,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"22776:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8833,"nodeType":"RevertStatement","src":"22769:48:27"}]}}]},"documentation":{"id":8812,"nodeType":"StructuredDocumentation","src":"22293:312:27","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8837,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:27","nodeType":"FunctionDefinition","parameters":{"id":8815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8814,"mutability":"mutable","name":"value","nameLocation":"22635:5:27","nodeType":"VariableDeclaration","scope":8837,"src":"22628:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8813,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:27"},"returnParameters":{"id":8818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8817,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:27","nodeType":"VariableDeclaration","scope":8837,"src":"22665:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8816,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:27"},"scope":9424,"src":"22610:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8862,"nodeType":"Block","src":"23231:150:27","statements":[{"expression":{"id":8850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8845,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8843,"src":"23241:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8840,"src":"23261:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8846,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:27","typeDescriptions":{}}},"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8851,"nodeType":"ExpressionStatement","src":"23241:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8843,"src":"23281:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8840,"src":"23295:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8861,"nodeType":"IfStatement","src":"23277:98:27","trueBody":{"id":8860,"nodeType":"Block","src":"23302:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8840,"src":"23358:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8855,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"23323:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8859,"nodeType":"RevertStatement","src":"23316:48:27"}]}}]},"documentation":{"id":8838,"nodeType":"StructuredDocumentation","src":"22840:312:27","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8863,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:27","nodeType":"FunctionDefinition","parameters":{"id":8841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8840,"mutability":"mutable","name":"value","nameLocation":"23182:5:27","nodeType":"VariableDeclaration","scope":8863,"src":"23175:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8839,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:27"},"returnParameters":{"id":8844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8843,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:27","nodeType":"VariableDeclaration","scope":8863,"src":"23212:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8842,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:27"},"scope":9424,"src":"23157:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8888,"nodeType":"Block","src":"23778:150:27","statements":[{"expression":{"id":8876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8871,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"23788:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8866,"src":"23808:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8872,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:27","typeDescriptions":{}}},"id":8875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8877,"nodeType":"ExpressionStatement","src":"23788:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"23828:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8866,"src":"23842:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8887,"nodeType":"IfStatement","src":"23824:98:27","trueBody":{"id":8886,"nodeType":"Block","src":"23849:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8866,"src":"23905:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8881,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"23870:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8885,"nodeType":"RevertStatement","src":"23863:48:27"}]}}]},"documentation":{"id":8864,"nodeType":"StructuredDocumentation","src":"23387:312:27","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8889,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:27","nodeType":"FunctionDefinition","parameters":{"id":8867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8866,"mutability":"mutable","name":"value","nameLocation":"23729:5:27","nodeType":"VariableDeclaration","scope":8889,"src":"23722:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8865,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:27"},"returnParameters":{"id":8870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8869,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:27","nodeType":"VariableDeclaration","scope":8889,"src":"23759:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8868,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:27"},"scope":9424,"src":"23704:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8914,"nodeType":"Block","src":"24325:150:27","statements":[{"expression":{"id":8902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8897,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8895,"src":"24335:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"24355:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8898,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:27","typeDescriptions":{}}},"id":8901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8903,"nodeType":"ExpressionStatement","src":"24335:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8895,"src":"24375:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"24389:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8913,"nodeType":"IfStatement","src":"24371:98:27","trueBody":{"id":8912,"nodeType":"Block","src":"24396:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"24452:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8907,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"24417:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8911,"nodeType":"RevertStatement","src":"24410:48:27"}]}}]},"documentation":{"id":8890,"nodeType":"StructuredDocumentation","src":"23934:312:27","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8915,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:27","nodeType":"FunctionDefinition","parameters":{"id":8893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8892,"mutability":"mutable","name":"value","nameLocation":"24276:5:27","nodeType":"VariableDeclaration","scope":8915,"src":"24269:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8891,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:27"},"returnParameters":{"id":8896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8895,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:27","nodeType":"VariableDeclaration","scope":8915,"src":"24306:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8894,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:27"},"scope":9424,"src":"24251:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8940,"nodeType":"Block","src":"24872:150:27","statements":[{"expression":{"id":8928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8923,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8921,"src":"24882:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"24902:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8924,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:27","typeDescriptions":{}}},"id":8927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8929,"nodeType":"ExpressionStatement","src":"24882:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8921,"src":"24922:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"24936:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8939,"nodeType":"IfStatement","src":"24918:98:27","trueBody":{"id":8938,"nodeType":"Block","src":"24943:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"24999:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8933,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"24964:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8937,"nodeType":"RevertStatement","src":"24957:48:27"}]}}]},"documentation":{"id":8916,"nodeType":"StructuredDocumentation","src":"24481:312:27","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8941,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:27","nodeType":"FunctionDefinition","parameters":{"id":8919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8918,"mutability":"mutable","name":"value","nameLocation":"24823:5:27","nodeType":"VariableDeclaration","scope":8941,"src":"24816:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8917,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:27"},"returnParameters":{"id":8922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8921,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:27","nodeType":"VariableDeclaration","scope":8941,"src":"24853:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8920,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:27"},"scope":9424,"src":"24798:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8966,"nodeType":"Block","src":"25419:150:27","statements":[{"expression":{"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8949,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8947,"src":"25429:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8944,"src":"25449:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8950,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:27","typeDescriptions":{}}},"id":8953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8955,"nodeType":"ExpressionStatement","src":"25429:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8947,"src":"25469:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8944,"src":"25483:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8965,"nodeType":"IfStatement","src":"25465:98:27","trueBody":{"id":8964,"nodeType":"Block","src":"25490:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8944,"src":"25546:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8959,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"25511:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8963,"nodeType":"RevertStatement","src":"25504:48:27"}]}}]},"documentation":{"id":8942,"nodeType":"StructuredDocumentation","src":"25028:312:27","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8967,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:27","nodeType":"FunctionDefinition","parameters":{"id":8945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8944,"mutability":"mutable","name":"value","nameLocation":"25370:5:27","nodeType":"VariableDeclaration","scope":8967,"src":"25363:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8943,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:27"},"returnParameters":{"id":8948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8947,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:27","nodeType":"VariableDeclaration","scope":8967,"src":"25400:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8946,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:27"},"scope":9424,"src":"25345:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8992,"nodeType":"Block","src":"25966:150:27","statements":[{"expression":{"id":8980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8975,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8973,"src":"25976:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8970,"src":"25996:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8976,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:27","typeDescriptions":{}}},"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8981,"nodeType":"ExpressionStatement","src":"25976:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8973,"src":"26016:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8970,"src":"26030:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8991,"nodeType":"IfStatement","src":"26012:98:27","trueBody":{"id":8990,"nodeType":"Block","src":"26037:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8970,"src":"26093:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8985,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"26058:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8989,"nodeType":"RevertStatement","src":"26051:48:27"}]}}]},"documentation":{"id":8968,"nodeType":"StructuredDocumentation","src":"25575:312:27","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8993,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:27","nodeType":"FunctionDefinition","parameters":{"id":8971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8970,"mutability":"mutable","name":"value","nameLocation":"25917:5:27","nodeType":"VariableDeclaration","scope":8993,"src":"25910:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8969,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:27"},"returnParameters":{"id":8974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8973,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:27","nodeType":"VariableDeclaration","scope":8993,"src":"25947:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8972,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:27"},"scope":9424,"src":"25892:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9018,"nodeType":"Block","src":"26513:150:27","statements":[{"expression":{"id":9006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9001,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"26523:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"26543:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":9002,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:27","typeDescriptions":{}}},"id":9005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":9007,"nodeType":"ExpressionStatement","src":"26523:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"26563:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"26577:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9017,"nodeType":"IfStatement","src":"26559:98:27","trueBody":{"id":9016,"nodeType":"Block","src":"26584:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":9012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":9013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"26640:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9011,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"26605:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9015,"nodeType":"RevertStatement","src":"26598:48:27"}]}}]},"documentation":{"id":8994,"nodeType":"StructuredDocumentation","src":"26122:312:27","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":9019,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:27","nodeType":"FunctionDefinition","parameters":{"id":8997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8996,"mutability":"mutable","name":"value","nameLocation":"26464:5:27","nodeType":"VariableDeclaration","scope":9019,"src":"26457:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8995,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:27"},"returnParameters":{"id":9000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8999,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:27","nodeType":"VariableDeclaration","scope":9019,"src":"26494:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8998,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:27"},"scope":9424,"src":"26439:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9044,"nodeType":"Block","src":"27060:150:27","statements":[{"expression":{"id":9032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9027,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9025,"src":"27070:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"27090:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":9028,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:27","typeDescriptions":{}}},"id":9031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":9033,"nodeType":"ExpressionStatement","src":"27070:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9025,"src":"27110:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"27124:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9043,"nodeType":"IfStatement","src":"27106:98:27","trueBody":{"id":9042,"nodeType":"Block","src":"27131:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":9038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":9039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"27187:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9037,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"27152:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9041,"nodeType":"RevertStatement","src":"27145:48:27"}]}}]},"documentation":{"id":9020,"nodeType":"StructuredDocumentation","src":"26669:312:27","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":9045,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:27","nodeType":"FunctionDefinition","parameters":{"id":9023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9022,"mutability":"mutable","name":"value","nameLocation":"27011:5:27","nodeType":"VariableDeclaration","scope":9045,"src":"27004:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9021,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:27"},"returnParameters":{"id":9026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9025,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:27","nodeType":"VariableDeclaration","scope":9045,"src":"27041:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":9024,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:27"},"scope":9424,"src":"26986:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9070,"nodeType":"Block","src":"27607:150:27","statements":[{"expression":{"id":9058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9053,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9051,"src":"27617:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9048,"src":"27637:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":9054,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:27","typeDescriptions":{}}},"id":9057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":9059,"nodeType":"ExpressionStatement","src":"27617:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9051,"src":"27657:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9048,"src":"27671:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9069,"nodeType":"IfStatement","src":"27653:98:27","trueBody":{"id":9068,"nodeType":"Block","src":"27678:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":9064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":9065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9048,"src":"27734:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9063,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"27699:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9067,"nodeType":"RevertStatement","src":"27692:48:27"}]}}]},"documentation":{"id":9046,"nodeType":"StructuredDocumentation","src":"27216:312:27","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":9071,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:27","nodeType":"FunctionDefinition","parameters":{"id":9049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9048,"mutability":"mutable","name":"value","nameLocation":"27558:5:27","nodeType":"VariableDeclaration","scope":9071,"src":"27551:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9047,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:27"},"returnParameters":{"id":9052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9051,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:27","nodeType":"VariableDeclaration","scope":9071,"src":"27588:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":9050,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:27"},"scope":9424,"src":"27533:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9096,"nodeType":"Block","src":"28147:148:27","statements":[{"expression":{"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9079,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"28157:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9074,"src":"28176:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":9080,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:27","typeDescriptions":{}}},"id":9083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":9085,"nodeType":"ExpressionStatement","src":"28157:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"28196:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9074,"src":"28210:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9095,"nodeType":"IfStatement","src":"28192:97:27","trueBody":{"id":9094,"nodeType":"Block","src":"28217:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":9090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":9091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9074,"src":"28272:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9089,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"28238:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9093,"nodeType":"RevertStatement","src":"28231:47:27"}]}}]},"documentation":{"id":9072,"nodeType":"StructuredDocumentation","src":"27763:307:27","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":9097,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:27","nodeType":"FunctionDefinition","parameters":{"id":9075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9074,"mutability":"mutable","name":"value","nameLocation":"28099:5:27","nodeType":"VariableDeclaration","scope":9097,"src":"28092:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9073,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:27"},"returnParameters":{"id":9078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9077,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:27","nodeType":"VariableDeclaration","scope":9097,"src":"28129:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":9076,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:27"},"scope":9424,"src":"28075:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9122,"nodeType":"Block","src":"28685:148:27","statements":[{"expression":{"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9103,"src":"28695:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9100,"src":"28714:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":9106,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:27","typeDescriptions":{}}},"id":9109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":9111,"nodeType":"ExpressionStatement","src":"28695:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9103,"src":"28734:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9100,"src":"28748:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9121,"nodeType":"IfStatement","src":"28730:97:27","trueBody":{"id":9120,"nodeType":"Block","src":"28755:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":9116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":9117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9100,"src":"28810:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9115,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"28776:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9119,"nodeType":"RevertStatement","src":"28769:47:27"}]}}]},"documentation":{"id":9098,"nodeType":"StructuredDocumentation","src":"28301:307:27","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":9123,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:27","nodeType":"FunctionDefinition","parameters":{"id":9101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9100,"mutability":"mutable","name":"value","nameLocation":"28637:5:27","nodeType":"VariableDeclaration","scope":9123,"src":"28630:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9099,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:27"},"returnParameters":{"id":9104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9103,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:27","nodeType":"VariableDeclaration","scope":9123,"src":"28667:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":9102,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:27"},"scope":9424,"src":"28613:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9148,"nodeType":"Block","src":"29223:148:27","statements":[{"expression":{"id":9136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9131,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"29233:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"29252:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":9132,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:27","typeDescriptions":{}}},"id":9135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":9137,"nodeType":"ExpressionStatement","src":"29233:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"29272:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"29286:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9147,"nodeType":"IfStatement","src":"29268:97:27","trueBody":{"id":9146,"nodeType":"Block","src":"29293:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":9142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":9143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"29348:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9141,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"29314:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9145,"nodeType":"RevertStatement","src":"29307:47:27"}]}}]},"documentation":{"id":9124,"nodeType":"StructuredDocumentation","src":"28839:307:27","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":9149,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:27","nodeType":"FunctionDefinition","parameters":{"id":9127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9126,"mutability":"mutable","name":"value","nameLocation":"29175:5:27","nodeType":"VariableDeclaration","scope":9149,"src":"29168:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9125,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:27"},"returnParameters":{"id":9130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9129,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:27","nodeType":"VariableDeclaration","scope":9149,"src":"29205:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":9128,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:27"},"scope":9424,"src":"29151:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9174,"nodeType":"Block","src":"29761:148:27","statements":[{"expression":{"id":9162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"29771:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9152,"src":"29790:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":9158,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:27","typeDescriptions":{}}},"id":9161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":9163,"nodeType":"ExpressionStatement","src":"29771:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"29810:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9152,"src":"29824:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9173,"nodeType":"IfStatement","src":"29806:97:27","trueBody":{"id":9172,"nodeType":"Block","src":"29831:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":9168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":9169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9152,"src":"29886:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9167,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"29852:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9171,"nodeType":"RevertStatement","src":"29845:47:27"}]}}]},"documentation":{"id":9150,"nodeType":"StructuredDocumentation","src":"29377:307:27","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":9175,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:27","nodeType":"FunctionDefinition","parameters":{"id":9153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9152,"mutability":"mutable","name":"value","nameLocation":"29713:5:27","nodeType":"VariableDeclaration","scope":9175,"src":"29706:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9151,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:27"},"returnParameters":{"id":9156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9155,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:27","nodeType":"VariableDeclaration","scope":9175,"src":"29743:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":9154,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:27"},"scope":9424,"src":"29689:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9200,"nodeType":"Block","src":"30299:148:27","statements":[{"expression":{"id":9188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"30309:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9178,"src":"30328:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":9184,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:27","typeDescriptions":{}}},"id":9187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":9189,"nodeType":"ExpressionStatement","src":"30309:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"30348:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9178,"src":"30362:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9199,"nodeType":"IfStatement","src":"30344:97:27","trueBody":{"id":9198,"nodeType":"Block","src":"30369:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":9194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":9195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9178,"src":"30424:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9193,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"30390:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9197,"nodeType":"RevertStatement","src":"30383:47:27"}]}}]},"documentation":{"id":9176,"nodeType":"StructuredDocumentation","src":"29915:307:27","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":9201,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:27","nodeType":"FunctionDefinition","parameters":{"id":9179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9178,"mutability":"mutable","name":"value","nameLocation":"30251:5:27","nodeType":"VariableDeclaration","scope":9201,"src":"30244:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9177,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:27"},"returnParameters":{"id":9182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9181,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:27","nodeType":"VariableDeclaration","scope":9201,"src":"30281:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9180,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:27"},"scope":9424,"src":"30227:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9226,"nodeType":"Block","src":"30837:148:27","statements":[{"expression":{"id":9214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"30847:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"30866:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":9210,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:27","typeDescriptions":{}}},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":9215,"nodeType":"ExpressionStatement","src":"30847:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"30886:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"30900:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9225,"nodeType":"IfStatement","src":"30882:97:27","trueBody":{"id":9224,"nodeType":"Block","src":"30907:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":9220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":9221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"30962:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9219,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"30928:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9223,"nodeType":"RevertStatement","src":"30921:47:27"}]}}]},"documentation":{"id":9202,"nodeType":"StructuredDocumentation","src":"30453:307:27","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":9227,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:27","nodeType":"FunctionDefinition","parameters":{"id":9205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9204,"mutability":"mutable","name":"value","nameLocation":"30789:5:27","nodeType":"VariableDeclaration","scope":9227,"src":"30782:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9203,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:27"},"returnParameters":{"id":9208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9207,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:27","nodeType":"VariableDeclaration","scope":9227,"src":"30819:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":9206,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:27"},"scope":9424,"src":"30765:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9252,"nodeType":"Block","src":"31375:148:27","statements":[{"expression":{"id":9240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"31385:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"31404:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":9236,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:27","typeDescriptions":{}}},"id":9239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":9241,"nodeType":"ExpressionStatement","src":"31385:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"31424:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"31438:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9251,"nodeType":"IfStatement","src":"31420:97:27","trueBody":{"id":9250,"nodeType":"Block","src":"31445:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"31500:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9245,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"31466:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9249,"nodeType":"RevertStatement","src":"31459:47:27"}]}}]},"documentation":{"id":9228,"nodeType":"StructuredDocumentation","src":"30991:307:27","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9253,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:27","nodeType":"FunctionDefinition","parameters":{"id":9231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9230,"mutability":"mutable","name":"value","nameLocation":"31327:5:27","nodeType":"VariableDeclaration","scope":9253,"src":"31320:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9229,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:27"},"returnParameters":{"id":9234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9233,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:27","nodeType":"VariableDeclaration","scope":9253,"src":"31357:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":9232,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:27"},"scope":9424,"src":"31303:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9278,"nodeType":"Block","src":"31913:148:27","statements":[{"expression":{"id":9266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"31923:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"31942:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":9262,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:27","typeDescriptions":{}}},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":9267,"nodeType":"ExpressionStatement","src":"31923:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"31962:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"31976:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9277,"nodeType":"IfStatement","src":"31958:97:27","trueBody":{"id":9276,"nodeType":"Block","src":"31983:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"32038:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"32004:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9275,"nodeType":"RevertStatement","src":"31997:47:27"}]}}]},"documentation":{"id":9254,"nodeType":"StructuredDocumentation","src":"31529:307:27","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:27","nodeType":"FunctionDefinition","parameters":{"id":9257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9256,"mutability":"mutable","name":"value","nameLocation":"31865:5:27","nodeType":"VariableDeclaration","scope":9279,"src":"31858:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9255,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:27"},"returnParameters":{"id":9260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9259,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:27","nodeType":"VariableDeclaration","scope":9279,"src":"31895:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":9258,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:27"},"scope":9424,"src":"31841:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9304,"nodeType":"Block","src":"32451:148:27","statements":[{"expression":{"id":9292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9285,"src":"32461:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"32480:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":9288,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:27","typeDescriptions":{}}},"id":9291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":9293,"nodeType":"ExpressionStatement","src":"32461:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9285,"src":"32500:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"32514:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9303,"nodeType":"IfStatement","src":"32496:97:27","trueBody":{"id":9302,"nodeType":"Block","src":"32521:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"32576:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"32542:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9301,"nodeType":"RevertStatement","src":"32535:47:27"}]}}]},"documentation":{"id":9280,"nodeType":"StructuredDocumentation","src":"32067:307:27","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:27","nodeType":"FunctionDefinition","parameters":{"id":9283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9282,"mutability":"mutable","name":"value","nameLocation":"32403:5:27","nodeType":"VariableDeclaration","scope":9305,"src":"32396:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9281,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:27"},"returnParameters":{"id":9286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9285,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:27","nodeType":"VariableDeclaration","scope":9305,"src":"32433:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9284,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:27"},"scope":9424,"src":"32379:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9330,"nodeType":"Block","src":"32989:148:27","statements":[{"expression":{"id":9318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"32999:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9308,"src":"33018:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":9314,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:27","typeDescriptions":{}}},"id":9317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":9319,"nodeType":"ExpressionStatement","src":"32999:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"33038:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9308,"src":"33052:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9329,"nodeType":"IfStatement","src":"33034:97:27","trueBody":{"id":9328,"nodeType":"Block","src":"33059:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9308,"src":"33114:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"33080:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9327,"nodeType":"RevertStatement","src":"33073:47:27"}]}}]},"documentation":{"id":9306,"nodeType":"StructuredDocumentation","src":"32605:307:27","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:27","nodeType":"FunctionDefinition","parameters":{"id":9309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9308,"mutability":"mutable","name":"value","nameLocation":"32941:5:27","nodeType":"VariableDeclaration","scope":9331,"src":"32934:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9307,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:27"},"returnParameters":{"id":9312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9311,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:27","nodeType":"VariableDeclaration","scope":9331,"src":"32971:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":9310,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:27"},"scope":9424,"src":"32917:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9356,"nodeType":"Block","src":"33527:148:27","statements":[{"expression":{"id":9344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"33537:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9334,"src":"33556:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":9340,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:27","typeDescriptions":{}}},"id":9343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":9345,"nodeType":"ExpressionStatement","src":"33537:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"33576:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9334,"src":"33590:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9355,"nodeType":"IfStatement","src":"33572:97:27","trueBody":{"id":9354,"nodeType":"Block","src":"33597:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9334,"src":"33652:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"33618:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9353,"nodeType":"RevertStatement","src":"33611:47:27"}]}}]},"documentation":{"id":9332,"nodeType":"StructuredDocumentation","src":"33143:307:27","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:27","nodeType":"FunctionDefinition","parameters":{"id":9335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9334,"mutability":"mutable","name":"value","nameLocation":"33479:5:27","nodeType":"VariableDeclaration","scope":9357,"src":"33472:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9333,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:27"},"returnParameters":{"id":9338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9337,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:27","nodeType":"VariableDeclaration","scope":9357,"src":"33509:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":9336,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:27"},"scope":9424,"src":"33455:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9382,"nodeType":"Block","src":"34058:146:27","statements":[{"expression":{"id":9370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"34068:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9360,"src":"34086:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":9366,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:27","typeDescriptions":{}}},"id":9369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":9371,"nodeType":"ExpressionStatement","src":"34068:24:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"34106:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9360,"src":"34120:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9381,"nodeType":"IfStatement","src":"34102:96:27","trueBody":{"id":9380,"nodeType":"Block","src":"34127:71:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9360,"src":"34181:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"34148:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9379,"nodeType":"RevertStatement","src":"34141:46:27"}]}}]},"documentation":{"id":9358,"nodeType":"StructuredDocumentation","src":"33681:302:27","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:27","nodeType":"FunctionDefinition","parameters":{"id":9361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9360,"mutability":"mutable","name":"value","nameLocation":"34011:5:27","nodeType":"VariableDeclaration","scope":9383,"src":"34004:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9359,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:27"},"returnParameters":{"id":9364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9363,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:27","nodeType":"VariableDeclaration","scope":9383,"src":"34041:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":9362,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:27"},"scope":9424,"src":"33988:216:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9412,"nodeType":"Block","src":"34444:250:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"34557:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":9396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9395,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":9394,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":9398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:27","memberName":"max","nodeType":"MemberAccess","src":"34573:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9392,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:27","typeDescriptions":{}}},"id":9399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9406,"nodeType":"IfStatement","src":"34553:105:27","trueBody":{"id":9405,"nodeType":"Block","src":"34592:66:27","statements":[{"errorCall":{"arguments":[{"id":9402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"34641:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9401,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"34613:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":9403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9404,"nodeType":"RevertStatement","src":"34606:41:27"}]}},{"expression":{"arguments":[{"id":9409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"34681:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9407,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:27","typeDescriptions":{}}},"id":9410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9390,"id":9411,"nodeType":"Return","src":"34667:20:27"}]},"documentation":{"id":9384,"nodeType":"StructuredDocumentation","src":"34210:165:27","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":9413,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:27","nodeType":"FunctionDefinition","parameters":{"id":9387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9386,"mutability":"mutable","name":"value","nameLocation":"34406:5:27","nodeType":"VariableDeclaration","scope":9413,"src":"34398:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9385,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:27"},"returnParameters":{"id":9390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9413,"src":"34436:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9388,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:27"},"scope":9424,"src":"34380:314:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9422,"nodeType":"Block","src":"34853:87:27","statements":[{"AST":{"nativeSrc":"34888:46:27","nodeType":"YulBlock","src":"34888:46:27","statements":[{"nativeSrc":"34902:22:27","nodeType":"YulAssignment","src":"34902:22:27","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:27","nodeType":"YulIdentifier","src":"34921:1:27"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:27","nodeType":"YulIdentifier","src":"34914:6:27"},"nativeSrc":"34914:9:27","nodeType":"YulFunctionCall","src":"34914:9:27"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:27","nodeType":"YulIdentifier","src":"34907:6:27"},"nativeSrc":"34907:17:27","nodeType":"YulFunctionCall","src":"34907:17:27"},"variableNames":[{"name":"u","nativeSrc":"34902:1:27","nodeType":"YulIdentifier","src":"34902:1:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9416,"isOffset":false,"isSlot":false,"src":"34921:1:27","valueSize":1},{"declaration":9419,"isOffset":false,"isSlot":false,"src":"34902:1:27","valueSize":1}],"flags":["memory-safe"],"id":9421,"nodeType":"InlineAssembly","src":"34863:71:27"}]},"documentation":{"id":9414,"nodeType":"StructuredDocumentation","src":"34700:90:27","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":9423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:27","nodeType":"FunctionDefinition","parameters":{"id":9417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9416,"mutability":"mutable","name":"b","nameLocation":"34816:1:27","nodeType":"VariableDeclaration","scope":9423,"src":"34811:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9415,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:27"},"returnParameters":{"id":9420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9419,"mutability":"mutable","name":"u","nameLocation":"34850:1:27","nodeType":"VariableDeclaration","scope":9423,"src":"34842:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9418,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:27"},"scope":9424,"src":"34795:145:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9425,"src":"769:34173:27","usedErrors":[7669,7674,7681,7686],"usedEvents":[]}],"src":"192:34751:27"},"id":27},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[9424],"SignedMath":[9568]},"id":9569,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9426,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":9428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9569,"sourceUnit":9425,"src":"135:40:28","symbolAliases":[{"foreign":{"id":9427,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"143:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":9429,"nodeType":"StructuredDocumentation","src":"177:80:28","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9568,"linearizedBaseContracts":[9568],"name":"SignedMath","nameLocation":"266:10:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":9458,"nodeType":"Block","src":"746:215:28","statements":[{"id":9457,"nodeType":"UncheckedBlock","src":"756:199:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9436,"src":"894:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9442,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9434,"src":"900:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9443,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9436,"src":"904:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":9450,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9432,"src":"932:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9448,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"916:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9424_$","typeString":"type(library SafeCast)"}},"id":9449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9423,"src":"916:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":9451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9446,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:28","typeDescriptions":{}}},"id":9452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9440,"id":9456,"nodeType":"Return","src":"887:57:28"}]}]},"documentation":{"id":9430,"nodeType":"StructuredDocumentation","src":"283:374:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":9459,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:28","nodeType":"FunctionDefinition","parameters":{"id":9437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9432,"mutability":"mutable","name":"condition","nameLocation":"684:9:28","nodeType":"VariableDeclaration","scope":9459,"src":"679:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9431,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9434,"mutability":"mutable","name":"a","nameLocation":"702:1:28","nodeType":"VariableDeclaration","scope":9459,"src":"695:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9433,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9436,"mutability":"mutable","name":"b","nameLocation":"712:1:28","nodeType":"VariableDeclaration","scope":9459,"src":"705:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9435,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:28"},"returnParameters":{"id":9440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9459,"src":"738:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9438,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:28"},"scope":9568,"src":"662:299:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9477,"nodeType":"Block","src":"1102:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9462,"src":"1127:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9471,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9464,"src":"1131:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9473,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9462,"src":"1134:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9474,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9464,"src":"1137:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9469,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9459,"src":"1119:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9468,"id":9476,"nodeType":"Return","src":"1112:27:28"}]},"documentation":{"id":9460,"nodeType":"StructuredDocumentation","src":"967:66:28","text":" @dev Returns the largest of two signed numbers."},"id":9478,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:28","nodeType":"FunctionDefinition","parameters":{"id":9465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9462,"mutability":"mutable","name":"a","nameLocation":"1058:1:28","nodeType":"VariableDeclaration","scope":9478,"src":"1051:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9461,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9464,"mutability":"mutable","name":"b","nameLocation":"1068:1:28","nodeType":"VariableDeclaration","scope":9478,"src":"1061:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9463,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:28"},"returnParameters":{"id":9468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9478,"src":"1094:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9466,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:28"},"scope":9568,"src":"1038:108:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9496,"nodeType":"Block","src":"1288:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"1313:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9490,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"1317:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"1320:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9493,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"1323:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9488,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9459,"src":"1305:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9487,"id":9495,"nodeType":"Return","src":"1298:27:28"}]},"documentation":{"id":9479,"nodeType":"StructuredDocumentation","src":"1152:67:28","text":" @dev Returns the smallest of two signed numbers."},"id":9497,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:28","nodeType":"FunctionDefinition","parameters":{"id":9484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9481,"mutability":"mutable","name":"a","nameLocation":"1244:1:28","nodeType":"VariableDeclaration","scope":9497,"src":"1237:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9480,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9483,"mutability":"mutable","name":"b","nameLocation":"1254:1:28","nodeType":"VariableDeclaration","scope":9497,"src":"1247:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9482,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:28"},"returnParameters":{"id":9487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9497,"src":"1280:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9485,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:28"},"scope":9568,"src":"1224:108:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9540,"nodeType":"Block","src":"1537:162:28","statements":[{"assignments":[9508],"declarations":[{"constant":false,"id":9508,"mutability":"mutable","name":"x","nameLocation":"1606:1:28","nodeType":"VariableDeclaration","scope":9540,"src":"1599:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9507,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9521,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9500,"src":"1611:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"1615:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9500,"src":"1622:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9514,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"1626:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":9517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:28"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9522,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9508,"src":"1651:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9527,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9508,"src":"1671:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:28","typeDescriptions":{}}},"id":9528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9523,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:28","typeDescriptions":{}}},"id":9531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9500,"src":"1685:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"1689:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9506,"id":9539,"nodeType":"Return","src":"1644:48:28"}]},"documentation":{"id":9498,"nodeType":"StructuredDocumentation","src":"1338:126:28","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9541,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:28","nodeType":"FunctionDefinition","parameters":{"id":9503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9500,"mutability":"mutable","name":"a","nameLocation":"1493:1:28","nodeType":"VariableDeclaration","scope":9541,"src":"1486:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9499,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9502,"mutability":"mutable","name":"b","nameLocation":"1503:1:28","nodeType":"VariableDeclaration","scope":9541,"src":"1496:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9501,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:28"},"returnParameters":{"id":9506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9541,"src":"1529:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9504,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:28"},"scope":9568,"src":"1469:230:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9566,"nodeType":"Block","src":"1843:767:28","statements":[{"id":9565,"nodeType":"UncheckedBlock","src":"1853:751:28","statements":[{"assignments":[9550],"declarations":[{"constant":false,"id":9550,"mutability":"mutable","name":"mask","nameLocation":"2424:4:28","nodeType":"VariableDeclaration","scope":9565,"src":"2417:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9549,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9554,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9551,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9544,"src":"2431:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9557,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9544,"src":"2576:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9558,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9550,"src":"2580:4:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9561,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9550,"src":"2588:4:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:28","typeDescriptions":{}}},"id":9563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9548,"id":9564,"nodeType":"Return","src":"2560:33:28"}]}]},"documentation":{"id":9542,"nodeType":"StructuredDocumentation","src":"1705:78:28","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9567,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:28","nodeType":"FunctionDefinition","parameters":{"id":9545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9544,"mutability":"mutable","name":"n","nameLocation":"1808:1:28","nodeType":"VariableDeclaration","scope":9567,"src":"1801:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9543,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:28"},"returnParameters":{"id":9548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9567,"src":"1834:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:28"},"scope":9568,"src":"1788:822:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9569,"src":"258:2354:28","usedErrors":[],"usedEvents":[]}],"src":"109:2504:28"},"id":28},"src/Achievements1155Upgradeable.sol":{"ast":{"absolutePath":"src/Achievements1155Upgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"Achievements1155Upgradeable":[10111],"ERC1155SupplyUpgradeable":[2050],"ERC1155Upgradeable":[1811],"Initializable":[632],"Strings":[6026],"UUPSUpgradeable":[814]},"id":10112,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9570,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:29"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":9572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10112,"sourceUnit":633,"src":"58:96:29","symbolAliases":[{"foreign":{"id":9571,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"66:13:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":9574,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10112,"sourceUnit":815,"src":"155:100:29","symbolAliases":[{"foreign":{"id":9573,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"163:15:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","id":9576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10112,"sourceUnit":1812,"src":"256:108:29","symbolAliases":[{"foreign":{"id":9575,"name":"ERC1155Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"264:18:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","id":9578,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10112,"sourceUnit":2051,"src":"365:131:29","symbolAliases":[{"foreign":{"id":9577,"name":"ERC1155SupplyUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"373:24:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":9580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10112,"sourceUnit":365,"src":"497:113:29","symbolAliases":[{"foreign":{"id":9579,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"505:24:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":9582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10112,"sourceUnit":6027,"src":"611:66:29","symbolAliases":[{"foreign":{"id":9581,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"619:7:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9584,"name":"Initializable","nameLocations":["918:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"918:13:29"},"id":9585,"nodeType":"InheritanceSpecifier","src":"918:13:29"},{"baseName":{"id":9586,"name":"ERC1155Upgradeable","nameLocations":["937:18:29"],"nodeType":"IdentifierPath","referencedDeclaration":1811,"src":"937:18:29"},"id":9587,"nodeType":"InheritanceSpecifier","src":"937:18:29"},{"baseName":{"id":9588,"name":"ERC1155SupplyUpgradeable","nameLocations":["961:24:29"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"961:24:29"},"id":9589,"nodeType":"InheritanceSpecifier","src":"961:24:29"},{"baseName":{"id":9590,"name":"AccessControlUpgradeable","nameLocations":["991:24:29"],"nodeType":"IdentifierPath","referencedDeclaration":364,"src":"991:24:29"},"id":9591,"nodeType":"InheritanceSpecifier","src":"991:24:29"},{"baseName":{"id":9592,"name":"UUPSUpgradeable","nameLocations":["1021:15:29"],"nodeType":"IdentifierPath","referencedDeclaration":814,"src":"1021:15:29"},"id":9593,"nodeType":"InheritanceSpecifier","src":"1021:15:29"}],"canonicalName":"Achievements1155Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":9583,"nodeType":"StructuredDocumentation","src":"679:194:29","text":" the capsule honor badges - upgradeable ERC-1155 for achievements\n - Soulbound per achievement (toggleable)\n - 1-per-user-per-achievement enforced\n - EIP-712 signer-gated minting"},"fullyImplemented":true,"id":10111,"linearizedBaseContracts":[10111,814,2250,364,2050,1811,2387,2872,2814,2136,6038,2219,2096,632],"name":"Achievements1155Upgradeable","nameLocation":"883:27:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9596,"libraryName":{"id":9594,"name":"Strings","nameLocations":["1049:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":6026,"src":"1049:7:29"},"nodeType":"UsingForDirective","src":"1043:26:29","typeName":{"id":9595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1061:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"f72c0d8b","id":9601,"mutability":"constant","name":"UPGRADER_ROLE","nameLocation":"1099:13:29","nodeType":"VariableDeclaration","scope":10111,"src":"1075:66:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1075:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"55504752414445525f524f4c45","id":9599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1125:15:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""},"value":"UPGRADER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""}],"id":9598,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1115:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1115:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"a1ebf35d","id":9606,"mutability":"constant","name":"SIGNER_ROLE","nameLocation":"1171:11:29","nodeType":"VariableDeclaration","scope":10111,"src":"1147:62:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1147:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5349474e45525f524f4c45","id":9604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1195:13:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70","typeString":"literal_string \"SIGNER_ROLE\""},"value":"SIGNER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70","typeString":"literal_string \"SIGNER_ROLE\""}],"id":9603,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1185:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1185:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"Achievements1155Upgradeable.AchievementDef","id":9613,"members":[{"constant":false,"id":9608,"mutability":"mutable","name":"enabled","nameLocation":"1253:7:29","nodeType":"VariableDeclaration","scope":9613,"src":"1248:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9607,"name":"bool","nodeType":"ElementaryTypeName","src":"1248:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9610,"mutability":"mutable","name":"soulbound","nameLocation":"1275:9:29","nodeType":"VariableDeclaration","scope":9613,"src":"1270:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9609,"name":"bool","nodeType":"ElementaryTypeName","src":"1270:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9612,"mutability":"mutable","name":"uri","nameLocation":"1301:3:29","nodeType":"VariableDeclaration","scope":9613,"src":"1294:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9611,"name":"string","nodeType":"ElementaryTypeName","src":"1294:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"AchievementDef","nameLocation":"1223:14:29","nodeType":"StructDefinition","scope":10111,"src":"1216:151:29","visibility":"public"},{"constant":false,"functionSelector":"27aed72e","id":9618,"mutability":"mutable","name":"achievements","nameLocation":"1415:12:29","nodeType":"VariableDeclaration","scope":10111,"src":"1373:54:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AchievementDef_$9613_storage_$","typeString":"mapping(uint256 => struct Achievements1155Upgradeable.AchievementDef)"},"typeName":{"id":9617,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1381:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1373:34:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AchievementDef_$9613_storage_$","typeString":"mapping(uint256 => struct Achievements1155Upgradeable.AchievementDef)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9616,"nodeType":"UserDefinedTypeName","pathNode":{"id":9615,"name":"AchievementDef","nameLocations":["1392:14:29"],"nodeType":"IdentifierPath","referencedDeclaration":9613,"src":"1392:14:29"},"referencedDeclaration":9613,"src":"1392:14:29","typeDescriptions":{"typeIdentifier":"t_struct$_AchievementDef_$9613_storage_ptr","typeString":"struct Achievements1155Upgradeable.AchievementDef"}}},"visibility":"public"},{"constant":false,"functionSelector":"03780733","id":9624,"mutability":"mutable","name":"hasMinted","nameLocation":"1485:9:29","nodeType":"VariableDeclaration","scope":10111,"src":"1433:61:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":9623,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1441:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1433:44:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9622,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9620,"name":"address","nodeType":"ElementaryTypeName","src":"1460:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1452:24:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9621,"name":"bool","nodeType":"ElementaryTypeName","src":"1471:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"06fdde03","id":9626,"mutability":"mutable","name":"name","nameLocation":"1537:4:29","nodeType":"VariableDeclaration","scope":10111,"src":"1523:18:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9625,"name":"string","nodeType":"ElementaryTypeName","src":"1523:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":9628,"mutability":"mutable","name":"symbol","nameLocation":"1561:6:29","nodeType":"VariableDeclaration","scope":10111,"src":"1547:20:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9627,"name":"string","nodeType":"ElementaryTypeName","src":"1547:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"6c0360eb","id":9630,"mutability":"mutable","name":"baseURI","nameLocation":"1587:7:29","nodeType":"VariableDeclaration","scope":10111,"src":"1573:21:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9629,"name":"string","nodeType":"ElementaryTypeName","src":"1573:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"id":9632,"mutability":"mutable","name":"_DOMAIN_SEPARATOR","nameLocation":"1655:17:29","nodeType":"VariableDeclaration","scope":10111,"src":"1639:33:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1639:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":9637,"mutability":"constant","name":"_TYPEHASH","nameLocation":"1703:9:29","nodeType":"VariableDeclaration","scope":10111,"src":"1678:114:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1678:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d696e745065726d6974286164647265737320746f2c75696e743235362069642c75696e7432353620646561646c696e652c62797465733332206e6f6e636529","id":9635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1725:66:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_18ee0c6e30bf6cd4d37bc78510848a916e713be58f7d4ebf54cd34e2f446b5e5","typeString":"literal_string \"MintPermit(address to,uint256 id,uint256 deadline,bytes32 nonce)\""},"value":"MintPermit(address to,uint256 id,uint256 deadline,bytes32 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_18ee0c6e30bf6cd4d37bc78510848a916e713be58f7d4ebf54cd34e2f446b5e5","typeString":"literal_string \"MintPermit(address to,uint256 id,uint256 deadline,bytes32 nonce)\""}],"id":9634,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1715:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:77:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"functionSelector":"6a8a6894","id":9643,"mutability":"mutable","name":"usedNonces","nameLocation":"1850:10:29","nodeType":"VariableDeclaration","scope":10111,"src":"1798:62:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":9642,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9638,"name":"address","nodeType":"ElementaryTypeName","src":"1806:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1798:44:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9641,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1825:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1817:24:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9640,"name":"bool","nodeType":"ElementaryTypeName","src":"1836:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"body":{"id":9701,"nodeType":"Block","src":"2074:377:29","statements":[{"expression":{"arguments":[{"hexValue":"","id":9659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2099:2:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9658,"name":"__ERC1155_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"2084:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":9660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9661,"nodeType":"ExpressionStatement","src":"2084:18:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9662,"name":"__ERC1155Supply_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"2112:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2112:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9664,"nodeType":"ExpressionStatement","src":"2112:22:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9665,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2144:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2144:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9667,"nodeType":"ExpressionStatement","src":"2144:22:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9668,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"2176:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9670,"nodeType":"ExpressionStatement","src":"2176:24:29"},{"expression":{"id":9673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9671,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9626,"src":"2211:4:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9672,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9645,"src":"2218:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2211:12:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9674,"nodeType":"ExpressionStatement","src":"2211:12:29"},{"expression":{"id":9677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9675,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9628,"src":"2233:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9676,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9647,"src":"2242:7:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2233:16:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9678,"nodeType":"ExpressionStatement","src":"2233:16:29"},{"expression":{"id":9681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9679,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9630,"src":"2259:7:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9680,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"2269:8:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2259:18:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9682,"nodeType":"ExpressionStatement","src":"2259:18:29"},{"expression":{"arguments":[{"id":9684,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2299:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9685,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9651,"src":"2319:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9683,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2288:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2288:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9687,"nodeType":"ExpressionStatement","src":"2288:37:29"},{"expression":{"arguments":[{"id":9689,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"2346:13:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9690,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9651,"src":"2361:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9688,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2335:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9692,"nodeType":"ExpressionStatement","src":"2335:32:29"},{"expression":{"arguments":[{"id":9694,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9606,"src":"2388:11:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9695,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"2401:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9693,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2377:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2377:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9697,"nodeType":"ExpressionStatement","src":"2377:31:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9698,"name":"_rebuildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9836,"src":"2419:23:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2419:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9700,"nodeType":"ExpressionStatement","src":"2419:25:29"}]},"functionSelector":"d6d0faee","id":9702,"implemented":true,"kind":"function","modifiers":[{"id":9656,"kind":"modifierInvocation","modifierName":{"id":9655,"name":"initializer","nameLocations":["2062:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":472,"src":"2062:11:29"},"nodeType":"ModifierInvocation","src":"2062:11:29"}],"name":"initialize","nameLocation":"1899:10:29","nodeType":"FunctionDefinition","parameters":{"id":9654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9645,"mutability":"mutable","name":"_name","nameLocation":"1933:5:29","nodeType":"VariableDeclaration","scope":9702,"src":"1919:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9644,"name":"string","nodeType":"ElementaryTypeName","src":"1919:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9647,"mutability":"mutable","name":"_symbol","nameLocation":"1962:7:29","nodeType":"VariableDeclaration","scope":9702,"src":"1948:21:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9646,"name":"string","nodeType":"ElementaryTypeName","src":"1948:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9649,"mutability":"mutable","name":"_baseURI","nameLocation":"1993:8:29","nodeType":"VariableDeclaration","scope":9702,"src":"1979:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9648,"name":"string","nodeType":"ElementaryTypeName","src":"1979:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9651,"mutability":"mutable","name":"admin","nameLocation":"2019:5:29","nodeType":"VariableDeclaration","scope":9702,"src":"2011:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9650,"name":"address","nodeType":"ElementaryTypeName","src":"2011:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9653,"mutability":"mutable","name":"signer","nameLocation":"2042:6:29","nodeType":"VariableDeclaration","scope":9702,"src":"2034:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9652,"name":"address","nodeType":"ElementaryTypeName","src":"2034:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1909:145:29"},"returnParameters":{"id":9657,"nodeType":"ParameterList","parameters":[],"src":"2074:0:29"},"scope":10111,"src":"1890:561:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[768],"body":{"id":9711,"nodeType":"Block","src":"2553:2:29","statements":[]},"id":9712,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9708,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"2538:13:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9709,"kind":"modifierInvocation","modifierName":{"id":9707,"name":"onlyRole","nameLocations":["2529:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2529:8:29"},"nodeType":"ModifierInvocation","src":"2529:23:29"}],"name":"_authorizeUpgrade","nameLocation":"2466:17:29","nodeType":"FunctionDefinition","overrides":{"id":9706,"nodeType":"OverrideSpecifier","overrides":[],"src":"2520:8:29"},"parameters":{"id":9705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9704,"mutability":"mutable","name":"newImplementation","nameLocation":"2492:17:29","nodeType":"VariableDeclaration","scope":9712,"src":"2484:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9703,"name":"address","nodeType":"ElementaryTypeName","src":"2484:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2483:27:29"},"returnParameters":{"id":9710,"nodeType":"ParameterList","parameters":[],"src":"2553:0:29"},"scope":10111,"src":"2457:98:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9731,"nodeType":"Block","src":"2644:86:29","statements":[{"expression":{"id":9722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9720,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9630,"src":"2654:7:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9721,"name":"newBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9714,"src":"2664:7:29","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"2654:17:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9723,"nodeType":"ExpressionStatement","src":"2654:17:29"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":9726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2694:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9725,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[9795],"referencedDeclaration":9795,"src":"2690:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":9727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2690:6:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":9728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2698:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9724,"name":"URI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"2686:3:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256)"}},"id":9729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2686:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9730,"nodeType":"EmitStatement","src":"2681:19:29"}]},"functionSelector":"55f804b3","id":9732,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9717,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2624:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9718,"kind":"modifierInvocation","modifierName":{"id":9716,"name":"onlyRole","nameLocations":["2615:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2615:8:29"},"nodeType":"ModifierInvocation","src":"2615:28:29"}],"name":"setBaseURI","nameLocation":"2570:10:29","nodeType":"FunctionDefinition","parameters":{"id":9715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9714,"mutability":"mutable","name":"newBase","nameLocation":"2597:7:29","nodeType":"VariableDeclaration","scope":9732,"src":"2581:23:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9713,"name":"string","nodeType":"ElementaryTypeName","src":"2581:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2580:25:29"},"returnParameters":{"id":9719,"nodeType":"ParameterList","parameters":[],"src":"2644:0:29"},"scope":10111,"src":"2561:169:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9756,"nodeType":"Block","src":"2866:107:29","statements":[{"expression":{"id":9754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9746,"name":"achievements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"2876:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AchievementDef_$9613_storage_$","typeString":"mapping(uint256 => struct Achievements1155Upgradeable.AchievementDef storage ref)"}},"id":9748,"indexExpression":{"id":9747,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9734,"src":"2889:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2876:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_AchievementDef_$9613_storage","typeString":"struct Achievements1155Upgradeable.AchievementDef storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9750,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9736,"src":"2920:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9751,"name":"soulbound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9738,"src":"2940:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9752,"name":"perIdURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9740,"src":"2956:8:29","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":9749,"name":"AchievementDef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9613,"src":"2895:14:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AchievementDef_$9613_storage_ptr_$","typeString":"type(struct Achievements1155Upgradeable.AchievementDef storage pointer)"}},"id":9753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2911:7:29","2929:9:29","2951:3:29"],"names":["enabled","soulbound","uri"],"nodeType":"FunctionCall","src":"2895:71:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AchievementDef_$9613_memory_ptr","typeString":"struct Achievements1155Upgradeable.AchievementDef memory"}},"src":"2876:90:29","typeDescriptions":{"typeIdentifier":"t_struct$_AchievementDef_$9613_storage","typeString":"struct Achievements1155Upgradeable.AchievementDef storage ref"}},"id":9755,"nodeType":"ExpressionStatement","src":"2876:90:29"}]},"functionSelector":"034fc4b8","id":9757,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9743,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2846:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9744,"kind":"modifierInvocation","modifierName":{"id":9742,"name":"onlyRole","nameLocations":["2837:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2837:8:29"},"nodeType":"ModifierInvocation","src":"2837:28:29"}],"name":"setAchievement","nameLocation":"2745:14:29","nodeType":"FunctionDefinition","parameters":{"id":9741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9734,"mutability":"mutable","name":"id","nameLocation":"2768:2:29","nodeType":"VariableDeclaration","scope":9757,"src":"2760:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2760:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9736,"mutability":"mutable","name":"enabled","nameLocation":"2777:7:29","nodeType":"VariableDeclaration","scope":9757,"src":"2772:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9735,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9738,"mutability":"mutable","name":"soulbound","nameLocation":"2791:9:29","nodeType":"VariableDeclaration","scope":9757,"src":"2786:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9737,"name":"bool","nodeType":"ElementaryTypeName","src":"2786:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9740,"mutability":"mutable","name":"perIdURI","nameLocation":"2818:8:29","nodeType":"VariableDeclaration","scope":9757,"src":"2802:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9739,"name":"string","nodeType":"ElementaryTypeName","src":"2802:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2759:68:29"},"returnParameters":{"id":9745,"nodeType":"ParameterList","parameters":[],"src":"2866:0:29"},"scope":10111,"src":"2736:237:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[956],"body":{"id":9794,"nodeType":"Block","src":"3049:179:29","statements":[{"assignments":[9766],"declarations":[{"constant":false,"id":9766,"mutability":"mutable","name":"per","nameLocation":"3073:3:29","nodeType":"VariableDeclaration","scope":9794,"src":"3059:17:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9765,"name":"string","nodeType":"ElementaryTypeName","src":"3059:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":9771,"initialValue":{"expression":{"baseExpression":{"id":9767,"name":"achievements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"3079:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AchievementDef_$9613_storage_$","typeString":"mapping(uint256 => struct Achievements1155Upgradeable.AchievementDef storage ref)"}},"id":9769,"indexExpression":{"id":9768,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9759,"src":"3092:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3079:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_AchievementDef_$9613_storage","typeString":"struct Achievements1155Upgradeable.AchievementDef storage ref"}},"id":9770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3096:3:29","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":9612,"src":"3079:20:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3059:40:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9774,"name":"per","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"3119:3:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3113:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9772,"name":"bytes","nodeType":"ElementaryTypeName","src":"3113:5:29","typeDescriptions":{}}},"id":9775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3113:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3124:6:29","memberName":"length","nodeType":"MemberAccess","src":"3113:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3134:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3113:22:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9781,"nodeType":"IfStatement","src":"3109:38:29","trueBody":{"expression":{"id":9779,"name":"per","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"3144:3:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9764,"id":9780,"nodeType":"Return","src":"3137:10:29"}},{"expression":{"arguments":[{"arguments":[{"id":9786,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9630,"src":"3188:7:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9787,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9759,"src":"3197:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3200:8:29","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4738,"src":"3197:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":9789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3197:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e6a736f6e","id":9790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3212:7:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""},"value":".json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""}],"expression":{"id":9784,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3171:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3175:12:29","memberName":"encodePacked","nodeType":"MemberAccess","src":"3171:16:29","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3171:49:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3164:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":9782,"name":"string","nodeType":"ElementaryTypeName","src":"3164:6:29","typeDescriptions":{}}},"id":9792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3164:57:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9764,"id":9793,"nodeType":"Return","src":"3157:64:29"}]},"functionSelector":"0e89341c","id":9795,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2988:3:29","nodeType":"FunctionDefinition","overrides":{"id":9761,"nodeType":"OverrideSpecifier","overrides":[],"src":"3016:8:29"},"parameters":{"id":9760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9759,"mutability":"mutable","name":"id","nameLocation":"3000:2:29","nodeType":"VariableDeclaration","scope":9795,"src":"2992:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2992:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2991:12:29"},"returnParameters":{"id":9764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9795,"src":"3034:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9762,"name":"string","nodeType":"ElementaryTypeName","src":"3034:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3033:15:29"},"scope":10111,"src":"2979:249:29","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9802,"nodeType":"Block","src":"3291:29:29","statements":[{"expression":{"id":9800,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9632,"src":"3300:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9799,"id":9801,"nodeType":"Return","src":"3293:24:29"}]},"functionSelector":"f698da25","id":9803,"implemented":true,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"3243:15:29","nodeType":"FunctionDefinition","parameters":{"id":9796,"nodeType":"ParameterList","parameters":[],"src":"3258:2:29"},"returnParameters":{"id":9799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9803,"src":"3282:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3282:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3281:9:29"},"scope":10111,"src":"3234:86:29","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9835,"nodeType":"Block","src":"3370:348:29","statements":[{"expression":{"id":9833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9806,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9632,"src":"3380:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":9811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3461:84:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":9810,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3451:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:95:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":9816,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9626,"src":"3580:4:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":9815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3574:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9814,"name":"bytes","nodeType":"ElementaryTypeName","src":"3574:5:29","typeDescriptions":{}}},"id":9817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":9813,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3564:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"hexValue":"31","id":9822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3620:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":9821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9820,"name":"bytes","nodeType":"ElementaryTypeName","src":"3614:5:29","typeDescriptions":{}}},"id":9823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9819,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3604:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3604:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9825,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3643:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3649:7:29","memberName":"chainid","nodeType":"MemberAccess","src":"3643:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":9829,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3682:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_Achievements1155Upgradeable_$10111","typeString":"contract Achievements1155Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Achievements1155Upgradeable_$10111","typeString":"contract Achievements1155Upgradeable"}],"id":9828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3674:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9827,"name":"address","nodeType":"ElementaryTypeName","src":"3674:7:29","typeDescriptions":{}}},"id":9830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3674:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9808,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3423:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3427:6:29","memberName":"encode","nodeType":"MemberAccess","src":"3423:10:29","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3423:278:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9807,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3400:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3400:311:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3380:331:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9834,"nodeType":"ExpressionStatement","src":"3380:331:29"}]},"id":9836,"implemented":true,"kind":"function","modifiers":[],"name":"_rebuildDomainSeparator","nameLocation":"3335:23:29","nodeType":"FunctionDefinition","parameters":{"id":9804,"nodeType":"ParameterList","parameters":[],"src":"3358:2:29"},"returnParameters":{"id":9805,"nodeType":"ParameterList","parameters":[],"src":"3370:0:29"},"scope":10111,"src":"3326:392:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9867,"nodeType":"Block","src":"3834:163:29","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":9852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3891:10:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":9853,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9632,"src":"3903:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":9857,"name":"_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9637,"src":"3943:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9858,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9838,"src":"3954:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9859,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9840,"src":"3958:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9860,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"3962:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9861,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9844,"src":"3972:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9855,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3932:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3936:6:29","memberName":"encode","nodeType":"MemberAccess","src":"3932:10:29","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3932:46:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9854,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3922:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3922:57:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9850,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3874:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3878:12:29","memberName":"encodePacked","nodeType":"MemberAccess","src":"3874:16:29","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:106:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9849,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3851:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:139:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9848,"id":9866,"nodeType":"Return","src":"3844:146:29"}]},"id":9868,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPermit","nameLocation":"3733:11:29","nodeType":"FunctionDefinition","parameters":{"id":9845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9838,"mutability":"mutable","name":"to","nameLocation":"3753:2:29","nodeType":"VariableDeclaration","scope":9868,"src":"3745:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9837,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9840,"mutability":"mutable","name":"id","nameLocation":"3765:2:29","nodeType":"VariableDeclaration","scope":9868,"src":"3757:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9839,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9842,"mutability":"mutable","name":"deadline","nameLocation":"3777:8:29","nodeType":"VariableDeclaration","scope":9868,"src":"3769:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9841,"name":"uint256","nodeType":"ElementaryTypeName","src":"3769:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9844,"mutability":"mutable","name":"nonce","nameLocation":"3795:5:29","nodeType":"VariableDeclaration","scope":9868,"src":"3787:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3787:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3744:57:29"},"returnParameters":{"id":9848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9868,"src":"3825:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3825:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3824:9:29"},"scope":10111,"src":"3724:273:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9970,"nodeType":"Block","src":"4165:532:29","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":9882,"name":"achievements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"4183:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AchievementDef_$9613_storage_$","typeString":"mapping(uint256 => struct Achievements1155Upgradeable.AchievementDef storage ref)"}},"id":9884,"indexExpression":{"id":9883,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"4196:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4183:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_AchievementDef_$9613_storage","typeString":"struct Achievements1155Upgradeable.AchievementDef storage ref"}},"id":9885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4200:7:29","memberName":"enabled","nodeType":"MemberAccess","referencedDeclaration":9608,"src":"4183:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64697361626c6564","id":9886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4209:10:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_37a170f786e458179522ad8acdf045019b62598928e7a1acbbae427b70fe1ee5","typeString":"literal_string \"disabled\""},"value":"disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37a170f786e458179522ad8acdf045019b62598928e7a1acbbae427b70fe1ee5","typeString":"literal_string \"disabled\""}],"id":9881,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4175:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4175:45:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9888,"nodeType":"ExpressionStatement","src":"4175:45:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9890,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4238:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4244:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"4238:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9892,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"4257:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4238:27:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"65787069726564","id":9894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4267:9:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_64ca1ae50619f7f4ab23f4c22c6b85b70cfc49c072d731be4f91487f95764c93","typeString":"literal_string \"expired\""},"value":"expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64ca1ae50619f7f4ab23f4c22c6b85b70cfc49c072d731be4f91487f95764c93","typeString":"literal_string \"expired\""}],"id":9889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4230:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:47:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9896,"nodeType":"ExpressionStatement","src":"4230:47:29"},{"expression":{"arguments":[{"id":9906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4295:31:29","subExpression":{"baseExpression":{"baseExpression":{"id":9898,"name":"usedNonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9643,"src":"4296:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":9900,"indexExpression":{"id":9899,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"4307:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4296:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":9905,"indexExpression":{"arguments":[{"id":9903,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9876,"src":"4319:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4311:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9901,"name":"uint256","nodeType":"ElementaryTypeName","src":"4311:7:29","typeDescriptions":{}}},"id":9904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4311:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4296:30:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f6e63652075736564","id":9907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4328:12:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_93401b78a9a15fdd9637202256dc22545d2892602bcb5ead8f30e328fe8cde91","typeString":"literal_string \"nonce used\""},"value":"nonce used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93401b78a9a15fdd9637202256dc22545d2892602bcb5ead8f30e328fe8cde91","typeString":"literal_string \"nonce used\""}],"id":9897,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4287:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:54:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9909,"nodeType":"ExpressionStatement","src":"4287:54:29"},{"expression":{"arguments":[{"id":9916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4359:18:29","subExpression":{"baseExpression":{"baseExpression":{"id":9911,"name":"hasMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9624,"src":"4360:9:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9913,"indexExpression":{"id":9912,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"4370:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9915,"indexExpression":{"id":9914,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"4374:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616c7265616479206d696e746564","id":9917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4379:16:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc1d79576d9c1e03d6ff90e81fd853c5eac89b9ed9cb54114db3e1e1ab962297","typeString":"literal_string \"already minted\""},"value":"already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc1d79576d9c1e03d6ff90e81fd853c5eac89b9ed9cb54114db3e1e1ab962297","typeString":"literal_string \"already minted\""}],"id":9910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:45:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9919,"nodeType":"ExpressionStatement","src":"4351:45:29"},{"assignments":[9921],"declarations":[{"constant":false,"id":9921,"mutability":"mutable","name":"digest","nameLocation":"4415:6:29","nodeType":"VariableDeclaration","scope":9970,"src":"4407:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4407:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9928,"initialValue":{"arguments":[{"id":9923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"4436:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9924,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"4440:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9925,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"4444:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9926,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9876,"src":"4454:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9922,"name":"_hashPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9868,"src":"4424:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (address,uint256,uint256,bytes32) view returns (bytes32)"}},"id":9927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:36:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4407:53:29"},{"assignments":[9930],"declarations":[{"constant":false,"id":9930,"mutability":"mutable","name":"recovered","nameLocation":"4478:9:29","nodeType":"VariableDeclaration","scope":9970,"src":"4470:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9929,"name":"address","nodeType":"ElementaryTypeName","src":"4470:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9935,"initialValue":{"arguments":[{"id":9932,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"4499:6:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9933,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9878,"src":"4507:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":9931,"name":"_recover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10029,"src":"4490:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":9934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4490:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4470:47:29"},{"expression":{"arguments":[{"arguments":[{"id":9938,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9606,"src":"4543:11:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9939,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9930,"src":"4556:9:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9937,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4535:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":9940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4535:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"62616420736967","id":9941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4568:9:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ea973a0052a4e6a834e07d94ae8fecb501158013d52044186e8b1a997ca8d08","typeString":"literal_string \"bad sig\""},"value":"bad sig"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ea973a0052a4e6a834e07d94ae8fecb501158013d52044186e8b1a997ca8d08","typeString":"literal_string \"bad sig\""}],"id":9936,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4527:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4527:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9943,"nodeType":"ExpressionStatement","src":"4527:51:29"},{"expression":{"id":9953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9944,"name":"usedNonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9643,"src":"4589:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":9950,"indexExpression":{"id":9945,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"4600:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4589:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":9951,"indexExpression":{"arguments":[{"id":9948,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9876,"src":"4612:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4604:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9946,"name":"uint256","nodeType":"ElementaryTypeName","src":"4604:7:29","typeDescriptions":{}}},"id":9949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4604:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4589:30:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4622:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4589:37:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9954,"nodeType":"ExpressionStatement","src":"4589:37:29"},{"expression":{"id":9961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9955,"name":"hasMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9624,"src":"4636:9:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9958,"indexExpression":{"id":9956,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"4646:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4636:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9959,"indexExpression":{"id":9957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"4650:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4636:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4656:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4636:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9962,"nodeType":"ExpressionStatement","src":"4636:24:29"},{"expression":{"arguments":[{"id":9964,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"4676:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9965,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"4680:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4684:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":9967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4687:2:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9963,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"4670:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":9968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4670:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9969,"nodeType":"ExpressionStatement","src":"4670:20:29"}]},"functionSelector":"78ad847c","id":9971,"implemented":true,"kind":"function","modifiers":[],"name":"mintWithPermit","nameLocation":"4012:14:29","nodeType":"FunctionDefinition","parameters":{"id":9879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9870,"mutability":"mutable","name":"to","nameLocation":"4044:2:29","nodeType":"VariableDeclaration","scope":9971,"src":"4036:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9869,"name":"address","nodeType":"ElementaryTypeName","src":"4036:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9872,"mutability":"mutable","name":"id","nameLocation":"4064:2:29","nodeType":"VariableDeclaration","scope":9971,"src":"4056:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4056:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9874,"mutability":"mutable","name":"deadline","nameLocation":"4084:8:29","nodeType":"VariableDeclaration","scope":9971,"src":"4076:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9873,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9876,"mutability":"mutable","name":"nonce","nameLocation":"4110:5:29","nodeType":"VariableDeclaration","scope":9971,"src":"4102:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4102:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9878,"mutability":"mutable","name":"signature","nameLocation":"4140:9:29","nodeType":"VariableDeclaration","scope":9971,"src":"4125:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9877,"name":"bytes","nodeType":"ElementaryTypeName","src":"4125:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4026:129:29"},"returnParameters":{"id":9880,"nodeType":"ParameterList","parameters":[],"src":"4165:0:29"},"scope":10111,"src":"4003:694:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10028,"nodeType":"Block","src":"4787:373:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9980,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"4801:3:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4805:6:29","memberName":"length","nodeType":"MemberAccess","src":"4801:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3635","id":9982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4815:2:29","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"4801:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9989,"nodeType":"IfStatement","src":"4797:39:29","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":9986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4834:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4826:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9984,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:29","typeDescriptions":{}}},"id":9987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4826:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9979,"id":9988,"nodeType":"Return","src":"4819:17:29"}},{"assignments":[9991],"declarations":[{"constant":false,"id":9991,"mutability":"mutable","name":"r","nameLocation":"4854:1:29","nodeType":"VariableDeclaration","scope":10028,"src":"4846:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4846:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9992,"nodeType":"VariableDeclarationStatement","src":"4846:9:29"},{"assignments":[9994],"declarations":[{"constant":false,"id":9994,"mutability":"mutable","name":"s","nameLocation":"4865:1:29","nodeType":"VariableDeclaration","scope":10028,"src":"4857:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4857:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9995,"nodeType":"VariableDeclarationStatement","src":"4857:9:29"},{"assignments":[9997],"declarations":[{"constant":false,"id":9997,"mutability":"mutable","name":"v","nameLocation":"4874:1:29","nodeType":"VariableDeclaration","scope":10028,"src":"4868:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9996,"name":"uint8","nodeType":"ElementaryTypeName","src":"4868:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":9998,"nodeType":"VariableDeclarationStatement","src":"4868:7:29"},{"AST":{"nativeSrc":"4894:137:29","nodeType":"YulBlock","src":"4894:137:29","statements":[{"nativeSrc":"4908:26:29","nodeType":"YulAssignment","src":"4908:26:29","value":{"arguments":[{"arguments":[{"name":"sig","nativeSrc":"4923:3:29","nodeType":"YulIdentifier","src":"4923:3:29"},{"kind":"number","nativeSrc":"4928:4:29","nodeType":"YulLiteral","src":"4928:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4919:3:29","nodeType":"YulIdentifier","src":"4919:3:29"},"nativeSrc":"4919:14:29","nodeType":"YulFunctionCall","src":"4919:14:29"}],"functionName":{"name":"mload","nativeSrc":"4913:5:29","nodeType":"YulIdentifier","src":"4913:5:29"},"nativeSrc":"4913:21:29","nodeType":"YulFunctionCall","src":"4913:21:29"},"variableNames":[{"name":"r","nativeSrc":"4908:1:29","nodeType":"YulIdentifier","src":"4908:1:29"}]},{"nativeSrc":"4947:26:29","nodeType":"YulAssignment","src":"4947:26:29","value":{"arguments":[{"arguments":[{"name":"sig","nativeSrc":"4962:3:29","nodeType":"YulIdentifier","src":"4962:3:29"},{"kind":"number","nativeSrc":"4967:4:29","nodeType":"YulLiteral","src":"4967:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4958:3:29","nodeType":"YulIdentifier","src":"4958:3:29"},"nativeSrc":"4958:14:29","nodeType":"YulFunctionCall","src":"4958:14:29"}],"functionName":{"name":"mload","nativeSrc":"4952:5:29","nodeType":"YulIdentifier","src":"4952:5:29"},"nativeSrc":"4952:21:29","nodeType":"YulFunctionCall","src":"4952:21:29"},"variableNames":[{"name":"s","nativeSrc":"4947:1:29","nodeType":"YulIdentifier","src":"4947:1:29"}]},{"nativeSrc":"4986:35:29","nodeType":"YulAssignment","src":"4986:35:29","value":{"arguments":[{"kind":"number","nativeSrc":"4996:1:29","nodeType":"YulLiteral","src":"4996:1:29","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"sig","nativeSrc":"5009:3:29","nodeType":"YulIdentifier","src":"5009:3:29"},{"kind":"number","nativeSrc":"5014:4:29","nodeType":"YulLiteral","src":"5014:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"5005:3:29","nodeType":"YulIdentifier","src":"5005:3:29"},"nativeSrc":"5005:14:29","nodeType":"YulFunctionCall","src":"5005:14:29"}],"functionName":{"name":"mload","nativeSrc":"4999:5:29","nodeType":"YulIdentifier","src":"4999:5:29"},"nativeSrc":"4999:21:29","nodeType":"YulFunctionCall","src":"4999:21:29"}],"functionName":{"name":"byte","nativeSrc":"4991:4:29","nodeType":"YulIdentifier","src":"4991:4:29"},"nativeSrc":"4991:30:29","nodeType":"YulFunctionCall","src":"4991:30:29"},"variableNames":[{"name":"v","nativeSrc":"4986:1:29","nodeType":"YulIdentifier","src":"4986:1:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9991,"isOffset":false,"isSlot":false,"src":"4908:1:29","valueSize":1},{"declaration":9994,"isOffset":false,"isSlot":false,"src":"4947:1:29","valueSize":1},{"declaration":9975,"isOffset":false,"isSlot":false,"src":"4923:3:29","valueSize":1},{"declaration":9975,"isOffset":false,"isSlot":false,"src":"4962:3:29","valueSize":1},{"declaration":9975,"isOffset":false,"isSlot":false,"src":"5009:3:29","valueSize":1},{"declaration":9997,"isOffset":false,"isSlot":false,"src":"4986:1:29","valueSize":1}],"id":9999,"nodeType":"InlineAssembly","src":"4885:146:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10000,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"5044:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3237","id":10001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5048:2:29","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"5044:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10007,"nodeType":"IfStatement","src":"5040:19:29","trueBody":{"expression":{"id":10005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10003,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"5052:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3237","id":10004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5057:2:29","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"5052:7:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10006,"nodeType":"ExpressionStatement","src":"5052:7:29"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10008,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"5073:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3237","id":10009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5078:2:29","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"5073:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10011,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"5084:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3238","id":10012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:2:29","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"5084:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5073:18:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10020,"nodeType":"IfStatement","src":"5069:41:29","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":10017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5108:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5100:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10015,"name":"address","nodeType":"ElementaryTypeName","src":"5100:7:29","typeDescriptions":{}}},"id":10018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5100:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9979,"id":10019,"nodeType":"Return","src":"5093:17:29"}},{"expression":{"arguments":[{"id":10022,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"5137:6:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10023,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"5145:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":10024,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9991,"src":"5148:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10025,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9994,"src":"5151:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10021,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"5127:9:29","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":10026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9979,"id":10027,"nodeType":"Return","src":"5120:33:29"}]},"id":10029,"implemented":true,"kind":"function","modifiers":[],"name":"_recover","nameLocation":"4712:8:29","nodeType":"FunctionDefinition","parameters":{"id":9976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9973,"mutability":"mutable","name":"digest","nameLocation":"4729:6:29","nodeType":"VariableDeclaration","scope":10029,"src":"4721:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4721:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9975,"mutability":"mutable","name":"sig","nameLocation":"4750:3:29","nodeType":"VariableDeclaration","scope":10029,"src":"4737:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9974,"name":"bytes","nodeType":"ElementaryTypeName","src":"4737:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4720:34:29"},"returnParameters":{"id":9979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10029,"src":"4778:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9977,"name":"address","nodeType":"ElementaryTypeName","src":"4778:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4777:9:29"},"scope":10111,"src":"4703:457:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1344,2049],"body":{"id":10093,"nodeType":"Block","src":"5358:308:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10045,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"5372:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5388:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5380:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10046,"name":"address","nodeType":"ElementaryTypeName","src":"5380:7:29","typeDescriptions":{}}},"id":10049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5372:18:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10051,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10033,"src":"5394:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5408:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5400:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10052,"name":"address","nodeType":"ElementaryTypeName","src":"5400:7:29","typeDescriptions":{}}},"id":10055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5400:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5394:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5372:38:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10083,"nodeType":"IfStatement","src":"5368:246:29","trueBody":{"id":10082,"nodeType":"Block","src":"5412:202:29","statements":[{"body":{"id":10080,"nodeType":"Block","src":"5518:86:29","statements":[{"expression":{"arguments":[{"id":10076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5544:31:29","subExpression":{"expression":{"baseExpression":{"id":10070,"name":"achievements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"5545:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AchievementDef_$9613_storage_$","typeString":"mapping(uint256 => struct Achievements1155Upgradeable.AchievementDef storage ref)"}},"id":10074,"indexExpression":{"baseExpression":{"id":10071,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10036,"src":"5558:3:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10073,"indexExpression":{"id":10072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10059,"src":"5562:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5558:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5545:20:29","typeDescriptions":{"typeIdentifier":"t_struct$_AchievementDef_$9613_storage","typeString":"struct Achievements1155Upgradeable.AchievementDef storage ref"}},"id":10075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5566:9:29","memberName":"soulbound","nodeType":"MemberAccess","referencedDeclaration":9610,"src":"5545:30:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736f756c626f756e64","id":10077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5577:11:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e7ed7f8e6dcd193d98e2fd5ebd44790ad3072ac13a6c8399c17d661a1faa4bd","typeString":"literal_string \"soulbound\""},"value":"soulbound"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e7ed7f8e6dcd193d98e2fd5ebd44790ad3072ac13a6c8399c17d661a1faa4bd","typeString":"literal_string \"soulbound\""}],"id":10069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5536:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:53:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10079,"nodeType":"ExpressionStatement","src":"5536:53:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10059,"src":"5497:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10063,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10036,"src":"5501:3:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:6:29","memberName":"length","nodeType":"MemberAccess","src":"5501:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5497:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10081,"initializationExpression":{"assignments":[10059],"declarations":[{"constant":false,"id":10059,"mutability":"mutable","name":"i","nameLocation":"5490:1:29","nodeType":"VariableDeclaration","scope":10081,"src":"5482:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10058,"name":"uint256","nodeType":"ElementaryTypeName","src":"5482:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10061,"initialValue":{"hexValue":"30","id":10060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5494:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5482:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5513:3:29","subExpression":{"id":10066,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10059,"src":"5513:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10068,"nodeType":"ExpressionStatement","src":"5513:3:29"},"nodeType":"ForStatement","src":"5477:127:29"}]}},{"expression":{"arguments":[{"id":10087,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"5637:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10033,"src":"5643:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10089,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10036,"src":"5647:3:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":10090,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10039,"src":"5652:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":10084,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5623:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Achievements1155Upgradeable_$10111_$","typeString":"type(contract super Achievements1155Upgradeable)"}},"id":10086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5629:7:29","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"5623:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":10091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5623:36:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10092,"nodeType":"ExpressionStatement","src":"5623:36:29"}]},"id":10094,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5175:7:29","nodeType":"FunctionDefinition","overrides":{"id":10043,"nodeType":"OverrideSpecifier","overrides":[{"id":10041,"name":"ERC1155Upgradeable","nameLocations":["5312:18:29"],"nodeType":"IdentifierPath","referencedDeclaration":1811,"src":"5312:18:29"},{"id":10042,"name":"ERC1155SupplyUpgradeable","nameLocations":["5332:24:29"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"5332:24:29"}],"src":"5303:54:29"},"parameters":{"id":10040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10031,"mutability":"mutable","name":"from","nameLocation":"5200:4:29","nodeType":"VariableDeclaration","scope":10094,"src":"5192:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10030,"name":"address","nodeType":"ElementaryTypeName","src":"5192:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10033,"mutability":"mutable","name":"to","nameLocation":"5222:2:29","nodeType":"VariableDeclaration","scope":10094,"src":"5214:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10032,"name":"address","nodeType":"ElementaryTypeName","src":"5214:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10036,"mutability":"mutable","name":"ids","nameLocation":"5251:3:29","nodeType":"VariableDeclaration","scope":10094,"src":"5234:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10034,"name":"uint256","nodeType":"ElementaryTypeName","src":"5234:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10035,"nodeType":"ArrayTypeName","src":"5234:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10039,"mutability":"mutable","name":"values","nameLocation":"5281:6:29","nodeType":"VariableDeclaration","scope":10094,"src":"5264:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10037,"name":"uint256","nodeType":"ElementaryTypeName","src":"5264:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10038,"nodeType":"ArrayTypeName","src":"5264:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5182:111:29"},"returnParameters":{"id":10044,"nodeType":"ParameterList","parameters":[],"src":"5358:0:29"},"scope":10111,"src":"5166:500:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[93,938],"body":{"id":10109,"nodeType":"Block","src":"5837:60:29","statements":[{"expression":{"arguments":[{"id":10106,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10096,"src":"5878:11:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":10104,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5854:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Achievements1155Upgradeable_$10111_$","typeString":"type(contract super Achievements1155Upgradeable)"}},"id":10105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5860:17:29","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":93,"src":"5854:23:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":10107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5854:36:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10103,"id":10108,"nodeType":"Return","src":"5847:43:29"}]},"functionSelector":"01ffc9a7","id":10110,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"5681:17:29","nodeType":"FunctionDefinition","overrides":{"id":10100,"nodeType":"OverrideSpecifier","overrides":[{"id":10098,"name":"ERC1155Upgradeable","nameLocations":["5764:18:29"],"nodeType":"IdentifierPath","referencedDeclaration":1811,"src":"5764:18:29"},{"id":10099,"name":"AccessControlUpgradeable","nameLocations":["5784:24:29"],"nodeType":"IdentifierPath","referencedDeclaration":364,"src":"5784:24:29"}],"src":"5755:54:29"},"parameters":{"id":10097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10096,"mutability":"mutable","name":"interfaceId","nameLocation":"5706:11:29","nodeType":"VariableDeclaration","scope":10110,"src":"5699:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10095,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5699:6:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"5698:20:29"},"returnParameters":{"id":10103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10110,"src":"5827:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10101,"name":"bool","nodeType":"ElementaryTypeName","src":"5827:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5826:6:29"},"scope":10111,"src":"5672:225:29","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":10112,"src":"874:5025:29","usedErrors":[381,384,659,664,2146,2149,2352,2357,2362,2369,2374,2379,2386,2407,2420,3036,4309],"usedEvents":[389,2158,2167,2176,2227,2711,2726,2735,2742]}],"src":"32:5869:29"},"id":29}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ERC1155Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":\"ERC1155Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x366f804cd7571a67c51bec726d9f25b44cb0fb52bdeeed88b397c24c7ea0865f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8fccf68ef3ff40ed155e23ed8e3d0de299dcef6012a0536828b16c65af2b3c8\",\"dweb:/ipfs/Qmahy3CJAgMoNJEpbJMjEKsZMc6sU8gCYrFan4WnmBrMZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"ERC1155SupplyUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","exists(uint256)":"4f558e79","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","totalSupply(uint256)":"bd85b039","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted. NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens that can be minted. CAUTION: This extension should not be added in an upgrade to an already deployed contract.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":\"ERC1155SupplyUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x366f804cd7571a67c51bec726d9f25b44cb0fb52bdeeed88b397c24c7ea0865f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8fccf68ef3ff40ed155e23ed8e3d0de299dcef6012a0536828b16c65af2b3c8\",\"dweb:/ipfs/Qmahy3CJAgMoNJEpbJMjEKsZMc6sU8gCYrFan4WnmBrMZT\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":{\"keccak256\":\"0xb9823676cbde3953a1578db316962b3c14d1518c246293d92acf9bb276ce5da4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63565d7926edaed0e116338a9240edd2d391cf808d009f937762bd930d8a6c86\",\"dweb:/ipfs/QmUyfwAxYDnzSqNhCnqUqjFuM42wFNbHM4VRgjuFkc8yNW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d7a2971376891496b37216d93c14b69d992693a7f65420db0cf49d919e3ce07e64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 LOG2 SWAP8 SGT PUSH23 0x891496B37216D93C14B69D992693A7F65420DB0CF49D91 SWAP15 EXTCODECOPY 0xE0 PUSH31 0x64736F6C634300081800330000000000000000000000000000000000000000 ","sourceMap":"496:5741:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d7a2971376891496b37216d93c14b69d992693a7f65420db0cf49d919e3ce07e64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 LOG2 SWAP8 SGT PUSH23 0x891496B37216D93C14B69D992693A7F65420DB0CF49D91 SWAP15 EXTCODECOPY 0xE0 PUSH31 0x64736F6C634300081800330000000000000000000000000000000000000000 ","sourceMap":"496:5741:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a5c0feaccdc8eed1c1f5a1ec03c6afd6a30b6c19fa9a641c7e7be018a911b1f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A TLOAD 0xF 0xEA 0xCC 0xDC DUP15 0xED SHR 0x1F GAS 0x1E 0xC0 EXTCODECOPY PUSH11 0xFD6A30B6C19FA9A641C7E7 0xBE ADD DUP11 SWAP2 SHL 0x1F PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"439:3114:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;439:3114:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a5c0feaccdc8eed1c1f5a1ec03c6afd6a30b6c19fa9a641c7e7be018a911b1f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A TLOAD 0xF 0xEA 0xCC 0xDC DUP15 0xED SHR 0x1F GAS 0x1E 0xC0 EXTCODECOPY PUSH11 0xFD6A30B6C19FA9A641C7E7 0xBE ADD DUP11 SWAP2 SHL 0x1F PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"439:3114:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ceb427b58d6be86075c859cfcb19f1a1a4919378f6ccde5b819117ea6bcba9a964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xB4 0x27 0xB5 DUP14 PUSH12 0xE86075C859CFCB19F1A1A491 SWAP4 PUSH25 0xF6CCDE5B819117EA6BCBA9A964736F6C634300081800330000 ","sourceMap":"233:5762:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5762:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ceb427b58d6be86075c859cfcb19f1a1a4919378f6ccde5b819117ea6bcba9a964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xB4 0x27 0xB5 DUP14 PUSH12 0xE86075C859CFCB19F1A1A491 SWAP4 PUSH25 0xF6CCDE5B819117EA6BCBA9A964736F6C634300081800330000 ","sourceMap":"233:5762:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122092599da230be7c25a9a08b0ed0481b9f35b9c7fb8a1d152f3f2d892764ec8f1864736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 MSIZE SWAP14 LOG2 ADDRESS 0xBE PUSH29 0x25A9A08B0ED0481B9F35B9C7FB8A1D152F3F2D892764EC8F1864736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"459:20446:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:20446:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122092599da230be7c25a9a08b0ed0481b9f35b9c7fb8a1d152f3f2d892764ec8f1864736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 MSIZE SWAP14 LOG2 ADDRESS 0xBE PUSH29 0x25A9A08B0ED0481B9F35B9C7FB8A1D152F3F2D892764EC8F1864736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"459:20446:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a4870ff262fac5de9fb213a49eab32e1c4cda293e24f53ae39944c42e9979b464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 BASEFEE PUSH17 0xFF262FAC5DE9FB213A49EAB32E1C4CDA29 RETURNDATACOPY 0x24 CREATE2 GASPRICE 0xE3 SWAP10 PREVRANDAO 0xC4 0x2E SWAP10 PUSH26 0xB464736F6C634300081800330000000000000000000000000000 ","sourceMap":"224:218:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a4870ff262fac5de9fb213a49eab32e1c4cda293e24f53ae39944c42e9979b464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 BASEFEE PUSH17 0xFF262FAC5DE9FB213A49EAB32E1C4CDA29 RETURNDATACOPY 0x24 CREATE2 GASPRICE 0xE3 SWAP10 PREVRANDAO 0xC4 0x2E SWAP10 PUSH26 0xB464736F6C634300081800330000000000000000000000000000 ","sourceMap":"224:218:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dcf6fef9bdee0a2c32c287cc6aabdc9ec4f704aea12441fdb62ac7f887c8d75864736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xF6 INVALID 0xF9 0xBD 0xEE EXP 0x2C ORIGIN 0xC2 DUP8 0xCC PUSH11 0xABDC9EC4F704AEA12441FD 0xB6 0x2A 0xC7 0xF8 DUP8 0xC8 0xD7 PC PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"411:484:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dcf6fef9bdee0a2c32c287cc6aabdc9ec4f704aea12441fdb62ac7f887c8d75864736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xF6 INVALID 0xF9 0xBD 0xEE EXP 0x2C ORIGIN 0xC2 DUP8 0xCC PUSH11 0xABDC9EC4F704AEA12441FD 0xB6 0x2A 0xC7 0xF8 DUP8 0xC8 0xD7 PC PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"411:484:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fec73f632edd47d0e7ae9933b51e8f4da78eb465818c4263bebf6623ab05aff164736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xC7 EXTCODEHASH PUSH4 0x2EDD47D0 0xE7 0xAE SWAP10 CALLER 0xB5 0x1E DUP16 0x4D 0xA7 DUP15 0xB4 PUSH6 0x818C4263BEBF PUSH7 0x23AB05AFF16473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"657:1315:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fec73f632edd47d0e7ae9933b51e8f4da78eb465818c4263bebf6623ab05aff164736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xC7 EXTCODEHASH PUSH4 0x2EDD47D0 0xE7 0xAE SWAP10 CALLER 0xB5 0x1E DUP16 0x4D 0xA7 DUP15 0xB4 PUSH6 0x818C4263BEBF PUSH7 0x23AB05AFF16473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"657:1315:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e901b79119997b07f80befbaf88b1194203b25c18bc28cf377804389e7a9bbfb64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 ADD 0xB7 SWAP2 NOT SWAP10 PUSH28 0x7F80BEFBAF88B1194203B25C18BC28CF377804389E7A9BBFB64736F PUSH13 0x63430008180033000000000000 ","sourceMap":"1599:3723:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1599:3723:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e901b79119997b07f80befbaf88b1194203b25c18bc28cf377804389e7a9bbfb64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 ADD 0xB7 SWAP2 NOT SWAP10 PUSH28 0x7F80BEFBAF88B1194203B25C18BC28CF377804389E7A9BBFB64736F PUSH13 0x63430008180033000000000000 ","sourceMap":"1599:3723:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d2fe06b1bb59ae338afa04ee6dce686409d6cdc8b507ba3749c3e142db493ae64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x2F 0xE0 PUSH12 0x1BB59AE338AFA04EE6DCE686 BLOCKHASH SWAP14 PUSH13 0xDC8B507BA3749C3E142DB493AE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1407:2774:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d2fe06b1bb59ae338afa04ee6dce686409d6cdc8b507ba3749c3e142db493ae64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x2F 0xE0 PUSH12 0x1BB59AE338AFA04EE6DCE686 BLOCKHASH SWAP14 PUSH13 0xDC8B507BA3749C3E142DB493AE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1407:2774:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3fa6b95cf4f76e64227a9b2373ccb228efd9715fd7983e0646867999cceb9fb64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 STATICCALL PUSH12 0x95CF4F76E64227A9B2373CCB 0x22 DUP15 REVERT SWAP8 ISZERO REVERT PUSH26 0x83E0646867999CCEB9FB64736F6C634300081800330000000000 ","sourceMap":"297:18982:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3fa6b95cf4f76e64227a9b2373ccb228efd9715fd7983e0646867999cceb9fb64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 STATICCALL PUSH12 0x95CF4F76E64227A9B2373CCB 0x22 DUP15 REVERT SWAP8 ISZERO REVERT PUSH26 0x83E0646867999CCEB9FB64736F6C634300081800330000000000 ","sourceMap":"297:18982:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a7690e42315e6899c9737c1a5db38b11240b326a07950b4befbf4ae90b02e56464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 PUSH10 0xE42315E6899C9737C1A TSTORE 0xB3 DUP12 GT 0x24 SIGNEXTEND ORIGIN PUSH11 0x7950B4BEFBF4AE90B02E5 PUSH5 0x64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:31863:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a7690e42315e6899c9737c1a5db38b11240b326a07950b4befbf4ae90b02e56464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 PUSH10 0xE42315E6899C9737C1A TSTORE 0xB3 DUP12 GT 0x24 SIGNEXTEND ORIGIN PUSH11 0x7950B4BEFBF4AE90B02E5 PUSH5 0x64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:31863:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c97bba8d553a67561101942b2a9afa3628667de55efed8df898d3aab783793c64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP8 0xBB 0xA8 0xD5 MSTORE8 0xA6 PUSH22 0x61101942B2A9AFA3628667DE55EFED8DF898D3AAB783 PUSH26 0x3C64736F6C634300081800330000000000000000000000000000 ","sourceMap":"769:34173:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:27;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c97bba8d553a67561101942b2a9afa3628667de55efed8df898d3aab783793c64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP8 0xBB 0xA8 0xD5 MSTORE8 0xA6 PUSH22 0x61101942B2A9AFA3628667DE55EFED8DF898D3AAB783 PUSH26 0x3C64736F6C634300081800330000000000000000000000000000 ","sourceMap":"769:34173:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220680917e17f715636462292a9029e0058e294bcd5d4d4fc83a420501ebb37147664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x917E17F7156364622 SWAP3 0xA9 MUL SWAP15 STOP PC 0xE2 SWAP5 0xBC 0xD5 0xD4 0xD4 0xFC DUP4 LOG4 KECCAK256 POP 0x1E 0xBB CALLDATACOPY EQ PUSH23 0x64736F6C63430008180033000000000000000000000000 ","sourceMap":"258:2354:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220680917e17f715636462292a9029e0058e294bcd5d4d4fc83a420501ebb37147664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x917E17F7156364622 SWAP3 0xA9 MUL SWAP15 STOP PC 0xE2 SWAP5 0xBC 0xD5 0xD4 0xD4 0xFC DUP4 LOG4 KECCAK256 POP 0x1E 0xBB CALLDATACOPY EQ PUSH23 0x64736F6C63430008180033000000000000000000000000 ","sourceMap":"258:2354:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"src/Achievements1155Upgradeable.sol":{"Achievements1155Upgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SIGNER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"achievements","outputs":[{"internalType":"bool","name":"enabled","type":"bool"},{"internalType":"bool","name":"soulbound","type":"bool"},{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasMinted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"string","name":"_baseURI","type":"string"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"address","name":"signer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"mintWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bool","name":"enabled","type":"bool"},{"internalType":"bool","name":"soulbound","type":"bool"},{"internalType":"string","name":"perIdURI","type":"string"}],"name":"setAchievement","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newBase","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"usedNonces","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x2FF6 PUSH2 0x3E PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x13F6 ADD MSTORE DUP2 DUP2 PUSH2 0x141F ADD MSTORE PUSH2 0x1584 ADD MSTORE PUSH2 0x2FF6 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1ED JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55F804B3 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD6D0FAEE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD6D0FAEE EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xF698DA25 EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xA1EBF35D EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x6A8A6894 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0x78AD847C EQ PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27AED72E GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27AED72E EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x34FC4B8 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x3780733 EQ PUSH2 0x277 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x23F9 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x24AE JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x251C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x25AB JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x4A593662EE04D27B6A00EBB31BE7FE0C102C2ADE82A7C5D764F2DF05DC4E2801 SLOAD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x25AB JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x25AB JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x272E JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x251C JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x251C JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D7 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH2 0x275 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x28E5 JUMP JUMPDEST PUSH2 0xBBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x25AB JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A593662EE04D27B6A00EBB31BE7FE0C102C2ADE82A7C5D764F2DF05DC4E2800 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0xBDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2928 JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x23F9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0xC58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x505 CALLDATASIZE PUSH1 0x4 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x525 CALLDATASIZE PUSH1 0x4 PUSH2 0x251C JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0xF09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x5A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x29D9 JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x5F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x25AB JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A593662EE04D27B6A00EBB31BE7FE0C102C2ADE82A7C5D764F2DF05DC4E2800 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x640 CALLDATASIZE PUSH1 0x4 PUSH2 0x251C JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x660 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A03 JUMP JUMPDEST PUSH2 0xF3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x680 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAC JUMP JUMPDEST PUSH2 0x10F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x6A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71F DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73B DUP2 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 SWAP1 SWAP5 MSTORE POP POP DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP3 DUP7 ADD MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR PUSH2 0x100 SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP4 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x7DA SWAP1 DUP3 PUSH2 0x2BBC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x7F2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x81E SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x86B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x840 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x86B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x84E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x894 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8C0 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ PUSH2 0x923 JUMPI SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH2 0x92E DUP5 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x93F SWAP3 SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP2 SWAP1 PUSH2 0x9A7 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D3 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA20 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA20 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA03 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xA4B JUMPI POP PUSH2 0xA49 DUP7 DUP3 PUSH2 0x10F3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1263 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA9F DUP3 PUSH2 0x956 JUMP JUMPDEST PUSH2 0xAA8 DUP2 PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0xAB2 DUP4 DUP4 PUSH2 0x12CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAEB DUP3 DUP3 PUSH2 0x136F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB21 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3C PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB65 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0xB8F SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x6EE JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBA1 JUMPI PUSH2 0xBA1 PUSH2 0x2D23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xB6B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBC4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xBCD DUP3 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0xBD7 DUP3 DUP3 PUSH2 0x14BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE5 PUSH2 0x1579 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC03 DUP2 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xC10 DUP4 DUP6 DUP4 PUSH2 0x2D39 JUMP JUMPDEST POP PUSH1 0x0 PUSH32 0x6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B PUSH2 0xC3E PUSH1 0x0 PUSH2 0x873 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4B SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x7F2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x191A5CD8589B1959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDB98D9481D5CD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x185B1C9958591E481B5A5B9D1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBB DUP8 DUP8 DUP8 DUP8 PUSH2 0x15C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDFF DUP3 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1679 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP PUSH2 0xE2B PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP3 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x62616420736967 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE DUP13 DUP6 MSTORE DUP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 DUP6 MSTORE SWAP5 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND DUP2 OR SWAP1 SWAP5 SSTORE DUP1 MLOAD SWAP2 DUP3 ADD SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH2 0xEC7 SWAP2 DUP11 SWAP2 DUP11 SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x7F2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0xBD7 CALLER DUP4 DUP4 PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0xF2A DUP3 PUSH2 0x956 JUMP JUMPDEST PUSH2 0xF33 DUP2 PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0xAB2 DUP4 DUP4 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF47 PUSH2 0x184B JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xF6E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xF8A JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xF98 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xFE0 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xFF8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x1000 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1008 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1010 PUSH2 0x1885 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x101C DUP12 DUP3 PUSH2 0x2BBC JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x1029 DUP11 DUP3 PUSH2 0x2BBC JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x1036 DUP10 DUP3 PUSH2 0x2BBC JUMP JUMPDEST POP PUSH2 0x1042 PUSH1 0x0 DUP9 PUSH2 0x12CA JUMP JUMPDEST POP PUSH2 0x106D PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP9 PUSH2 0x12CA JUMP JUMPDEST POP PUSH2 0x1098 PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP8 PUSH2 0x12CA JUMP JUMPDEST POP PUSH2 0x10A1 PUSH2 0x188D JUMP JUMPDEST DUP4 ISZERO PUSH2 0x10E7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4501 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x1161 JUMPI POP PUSH2 0x115F DUP7 DUP3 PUSH2 0x10F3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xA8E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x71F JUMPI POP PUSH2 0x71F DUP3 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x11CE DUP2 CALLER PUSH2 0x1A1A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x11DE DUP4 PUSH2 0x1A53 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x11FD JUMPI PUSH2 0x11FD PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1227 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1231 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x12B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x12C3 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B2B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x12E5 DUP5 DUP5 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x1365 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x131B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x71F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x71F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x138A DUP5 DUP5 PUSH2 0xED1 JUMP JUMPDEST ISZERO PUSH2 0x1365 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x71F JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1472 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1466 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0xBD7 DUP2 PUSH2 0x11C4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1516 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1513 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x153E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x156F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAEB DUP4 DUP4 PUSH2 0x1B7E JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x18EE0C6E30BF6CD4D37BC78510848A916E713BE58F7D4EBF54CD34E2F446B5E5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1659 SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x168C JUMPI POP PUSH1 0x0 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x16B5 JUMPI PUSH2 0x16B2 PUSH1 0x1B DUP3 PUSH2 0x2E27 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x16CD JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1731 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xA8E PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x17DB JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP8 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x187C PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x11CE DUP2 PUSH2 0x1BF9 JUMP JUMPDEST PUSH2 0x1490 PUSH2 0x1BD4 JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x18BD SWAP2 SWAP1 PUSH2 0x2E40 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1966 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x198F JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x19C1 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1B2B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x19FB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x71F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x71F JUMP JUMPDEST PUSH2 0x1A24 DUP3 DUP3 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0xBD7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1A92 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1ABE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1ADC JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1AF4 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1B08 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B1A JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x71F JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B37 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x12C3 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x1B70 JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x1B69 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1CC6 JUMP JUMPDEST POP POP PUSH2 0xA8E JUMP JUMPDEST PUSH2 0xA8E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1DEA JUMP JUMPDEST PUSH2 0x1B87 DUP3 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1BCC JUMPI PUSH2 0xAEB DUP3 DUP3 PUSH2 0x1F38 JUMP JUMPDEST PUSH2 0xBD7 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x1BDC PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C01 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x11CE DUP2 PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C2A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1CBA JUMPI PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1CB8 JUMPI PUSH1 0x0 DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C50 JUMPI PUSH2 0x1C50 PUSH2 0x2D23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1CDBDD5B189BDD5B99 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C32 JUMP JUMPDEST POP JUMPDEST PUSH2 0xAB2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1D0A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E4C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D45 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1D42 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2E91 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DAE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1D73 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D78 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1DA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x19C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1E2E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2EAE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E69 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1E66 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2E91 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E97 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1D73 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x19C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x1F09 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F55 SWAP2 SWAP1 PUSH2 0x2F0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F90 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1FA5 DUP6 DUP4 DUP4 PUSH2 0x2131 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD7 PUSH2 0x184B JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4502 PUSH2 0xAEB DUP4 DUP3 PUSH2 0x2BBC JUMP JUMPDEST PUSH32 0x4A593662EE04D27B6A00EBB31BE7FE0C102C2ADE82A7C5D764F2DF05DC4E2800 PUSH2 0x204E DUP6 DUP6 DUP6 DUP6 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x20CF JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP8 ADD DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x2098 SWAP1 DUP5 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x20A8 SWAP1 POP DUP2 DUP5 PUSH2 0x2F28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x2060 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20C8 SWAP2 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x12C3 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x211D JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP8 ADD DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x20E1 JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2146 JUMPI PUSH2 0x2141 DUP3 PUSH2 0x23B5 JUMP JUMPDEST PUSH2 0x2189 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x215D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x2186 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 EQ PUSH2 0x21CF JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xA78 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x22D5 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP7 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP7 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x2286 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x225F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x22CB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x22C5 SWAP1 DUP5 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x21D3 JUMP JUMPDEST POP DUP4 MLOAD PUSH1 0x1 SUB PUSH2 0x2356 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2347 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0xA8E JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x23A5 SWAP3 SWAP2 SWAP1 PUSH2 0x2F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x23C4 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x23F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x240C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2415 DUP4 PUSH2 0x23DD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x11CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2189 DUP2 PUSH2 0x2423 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x23F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x248F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x24D6 PUSH1 0x20 DUP8 ADD PUSH2 0x2456 JUMP JUMPDEST SWAP4 POP PUSH2 0x24E4 PUSH1 0x40 DUP8 ADD PUSH2 0x2456 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x250B DUP9 DUP3 DUP10 ADD PUSH2 0x2466 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x252F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x253F PUSH1 0x20 DUP5 ADD PUSH2 0x23DD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2563 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x254B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2584 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2189 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1FA5 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x256C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2625 JUMPI PUSH2 0x2625 PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2646 JUMPI PUSH2 0x2646 PUSH2 0x25E7 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2676 PUSH2 0x2671 DUP4 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x25FD JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x2698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x26B4 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x269D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x26E9 JUMPI PUSH2 0x26E9 PUSH2 0x25E7 JUMP JUMPDEST PUSH2 0x26FC PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x25FD JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x274F DUP7 PUSH2 0x23DD JUMP JUMPDEST SWAP5 POP PUSH2 0x275D PUSH1 0x20 DUP8 ADD PUSH2 0x23DD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2785 DUP10 DUP4 DUP11 ADD PUSH2 0x2650 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x279B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27A7 DUP10 DUP4 DUP11 ADD PUSH2 0x2650 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27CA DUP9 DUP3 DUP10 ADD PUSH2 0x26BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2825 PUSH2 0x2671 DUP4 PUSH2 0x262D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x2844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2869 JUMPI PUSH2 0x285A DUP7 PUSH2 0x23DD JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x2849 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x287F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288C DUP6 DUP3 DUP7 ADD PUSH2 0x2650 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28C7 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x28AB JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2189 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2901 DUP4 PUSH2 0x23DD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x291C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x288C DUP6 DUP3 DUP7 ADD PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x293B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x295D DUP6 DUP3 DUP7 ADD PUSH2 0x2466 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x298B DUP8 PUSH2 0x23DD JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x29BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29C7 DUP10 DUP3 DUP11 ADD PUSH2 0x2466 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29F5 DUP4 PUSH2 0x23DD JUMP JUMPDEST SWAP2 POP PUSH2 0x253F PUSH1 0x20 DUP5 ADD PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2A32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A3E DUP10 DUP4 DUP11 ADD PUSH2 0x26BF JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A60 DUP10 DUP4 DUP11 ADD PUSH2 0x26BF JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A83 DUP9 DUP3 DUP10 ADD PUSH2 0x26BF JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2A92 PUSH1 0x60 DUP8 ADD PUSH2 0x23DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA0 PUSH1 0x80 DUP8 ADD PUSH2 0x23DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2ABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AC8 DUP4 PUSH2 0x23DD JUMP JUMPDEST SWAP2 POP PUSH2 0x253F PUSH1 0x20 DUP5 ADD PUSH2 0x23DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2AEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AF7 DUP7 PUSH2 0x23DD JUMP JUMPDEST SWAP5 POP PUSH2 0x2B05 PUSH1 0x20 DUP8 ADD PUSH2 0x23DD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27CA DUP9 DUP3 DUP10 ADD PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2B4E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2B6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2B9D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA8E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2BA9 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2BD5 JUMPI PUSH2 0x2BD5 PUSH2 0x25E7 JUMP JUMPDEST PUSH2 0x2BE9 DUP2 PUSH2 0x2BE3 DUP5 SLOAD PUSH2 0x2B3A JUMP JUMPDEST DUP5 PUSH2 0x2B74 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C1E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2C06 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C4D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2C2E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2C6B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2C88 DUP2 PUSH2 0x2B3A JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x2CA0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2CB5 JUMPI PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x2CE4 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2CDB JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x2CC2 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CFA DUP3 DUP6 PUSH2 0x2C7B JUMP JUMPDEST DUP4 MLOAD PUSH2 0x2D0A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2548 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x2D50 JUMPI PUSH2 0x2D50 PUSH2 0x25E7 JUMP JUMPDEST PUSH2 0x2D64 DUP4 PUSH2 0x2D5E DUP4 SLOAD PUSH2 0x2B3A JUMP JUMPDEST DUP4 PUSH2 0x2B74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2D98 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x2D80 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2DC9 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2DA9 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x2DE6 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71F PUSH2 0x2E11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2189 DUP3 DUP5 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2E86 SWAP1 DUP4 ADD DUP5 PUSH2 0x256C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2189 DUP2 PUSH2 0x2423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2EDA SWAP1 DUP4 ADD DUP7 PUSH2 0x2896 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2EEC DUP2 DUP7 PUSH2 0x2896 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2F00 DUP2 DUP6 PUSH2 0x256C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2F1E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2548 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71F PUSH2 0x2E11 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2F4E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2896 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1FA5 DUP2 DUP6 PUSH2 0x2896 JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC88BE536D5240C274A3B1D3 LOG1 0xBE SLOAD BASEFEE 0x2F 0xD9 0xCA LOG2 SWAP5 CREATE DUP13 PUSH3 0xA7CDE5 PUSH10 0xF49A3C450002DD7BC7DE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x96011FEDCA1C DUP2 DUP11 PUSH14 0xA1C1104CFDC1ABD6D51755D91572 TSTORE 0xAC GAS 0xDD SHR SWAP7 PUSH22 0x1D64736F6C6343000818003300000000000000000000 ","sourceMap":"874:5025:29:-:0;;;1171:4:2;1128:48;;874:5025:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":null,"id":30,"parameterSlots":0,"returnSlots":0},"@SIGNER_ROLE_9606":{"entryPoint":null,"id":9606,"parameterSlots":0,"returnSlots":0},"@UPGRADER_ROLE_9601":{"entryPoint":null,"id":9601,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_656":{"entryPoint":null,"id":656,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_65":{"entryPoint":null,"id":65,"parameterSlots":0,"returnSlots":0},"@__ERC1155Supply_init_1853":{"entryPoint":6277,"id":1853,"parameterSlots":0,"returnSlots":0},"@__ERC1155_init_895":{"entryPoint":6260,"id":895,"parameterSlots":1,"returnSlots":0},"@__ERC1155_init_unchained_907":{"entryPoint":7161,"id":907,"parameterSlots":1,"returnSlots":0},"@__UUPSUpgradeable_init_686":{"entryPoint":null,"id":686,"parameterSlots":0,"returnSlots":0},"@_asSingletonArrays_1810":{"entryPoint":null,"id":1810,"parameterSlots":2,"returnSlots":2},"@_authorizeUpgrade_9712":{"entryPoint":5266,"id":9712,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_540":{"entryPoint":7124,"id":540,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_2680":{"entryPoint":8110,"id":2680,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_762":{"entryPoint":5497,"id":762,"parameterSlots":0,"returnSlots":0},"@_checkProxy_746":{"entryPoint":5099,"id":746,"parameterSlots":0,"returnSlots":0},"@_checkRole_131":{"entryPoint":4548,"id":131,"parameterSlots":1,"returnSlots":0},"@_checkRole_152":{"entryPoint":6682,"id":152,"parameterSlots":2,"returnSlots":0},"@_getAccessControlStorage_48":{"entryPoint":null,"id":48,"parameterSlots":0,"returnSlots":1},"@_getERC1155Storage_882":{"entryPoint":null,"id":882,"parameterSlots":0,"returnSlots":1},"@_getERC1155SupplyStorage_1847":{"entryPoint":null,"id":1847,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_631":{"entryPoint":6219,"id":631,"parameterSlots":0,"returnSlots":1},"@_grantRole_317":{"entryPoint":4810,"id":317,"parameterSlots":2,"returnSlots":1},"@_hashPermit_9868":{"entryPoint":5570,"id":9868,"parameterSlots":4,"returnSlots":1},"@_initializableStorageSlot_617":{"entryPoint":null,"id":617,"parameterSlots":0,"returnSlots":1},"@_isInitializing_608":{"entryPoint":8141,"id":608,"parameterSlots":0,"returnSlots":1},"@_mint_1616":{"entryPoint":5958,"id":1616,"parameterSlots":4,"returnSlots":0},"@_msgSender_2078":{"entryPoint":null,"id":2078,"parameterSlots":0,"returnSlots":1},"@_rebuildDomainSeparator_9836":{"entryPoint":6285,"id":9836,"parameterSlots":0,"returnSlots":0},"@_recover_10029":{"entryPoint":5753,"id":10029,"parameterSlots":2,"returnSlots":1},"@_revert_3285":{"entryPoint":9141,"id":3285,"parameterSlots":1,"returnSlots":0},"@_revokeRole_363":{"entryPoint":4975,"id":363,"parameterSlots":2,"returnSlots":1},"@_safeBatchTransferFrom_1545":{"entryPoint":4707,"id":1545,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_1490":{"entryPoint":6460,"id":1490,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1794":{"entryPoint":6051,"id":1794,"parameterSlots":3,"returnSlots":0},"@_setImplementation_2460":{"entryPoint":7891,"id":2460,"parameterSlots":1,"returnSlots":0},"@_setURI_1564":{"entryPoint":8167,"id":1564,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_1424":{"entryPoint":6955,"id":1424,"parameterSlots":5,"returnSlots":0},"@_update_10094":{"entryPoint":7178,"id":10094,"parameterSlots":4,"returnSlots":0},"@_update_1344":{"entryPoint":8592,"id":1344,"parameterSlots":4,"returnSlots":0},"@_update_2049":{"entryPoint":8225,"id":2049,"parameterSlots":4,"returnSlots":0},"@_upgradeToAndCallUUPS_813":{"entryPoint":5308,"id":813,"parameterSlots":2,"returnSlots":0},"@achievements_9618":{"entryPoint":2424,"id":9618,"parameterSlots":0,"returnSlots":0},"@balanceOfBatch_1050":{"entryPoint":2800,"id":1050,"parameterSlots":2,"returnSlots":1},"@balanceOf_980":{"entryPoint":1774,"id":980,"parameterSlots":2,"returnSlots":1},"@baseURI_9630":{"entryPoint":3160,"id":9630,"parameterSlots":0,"returnSlots":0},"@checkOnERC1155BatchReceived_3025":{"entryPoint":7658,"id":3025,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_2951":{"entryPoint":7366,"id":2951,"parameterSlots":6,"returnSlots":0},"@domainSeparator_9803":{"entryPoint":null,"id":9803,"parameterSlots":0,"returnSlots":1},"@exists_1910":{"entryPoint":null,"id":1910,"parameterSlots":1,"returnSlots":1},"@functionDelegateCall_3203":{"entryPoint":7992,"id":3203,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_4535":{"entryPoint":null,"id":4535,"parameterSlots":1,"returnSlots":1},"@getImplementation_2433":{"entryPoint":null,"id":2433,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_173":{"entryPoint":2390,"id":173,"parameterSlots":1,"returnSlots":1},"@grantRole_192":{"entryPoint":2710,"id":192,"parameterSlots":2,"returnSlots":0},"@hasMinted_9624":{"entryPoint":null,"id":9624,"parameterSlots":0,"returnSlots":0},"@hasRole_118":{"entryPoint":3793,"id":118,"parameterSlots":2,"returnSlots":1},"@initialize_9702":{"entryPoint":3901,"id":9702,"parameterSlots":5,"returnSlots":0},"@isApprovedForAll_1090":{"entryPoint":4339,"id":1090,"parameterSlots":2,"returnSlots":1},"@log10_7491":{"entryPoint":6739,"id":7491,"parameterSlots":1,"returnSlots":1},"@mintWithPermit_9971":{"entryPoint":3173,"id":9971,"parameterSlots":6,"returnSlots":0},"@name_9626":{"entryPoint":2021,"id":9626,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_704":{"entryPoint":3035,"id":704,"parameterSlots":0,"returnSlots":1},"@renounceRole_234":{"entryPoint":2744,"id":234,"parameterSlots":2,"returnSlots":0},"@revokeRole_211":{"entryPoint":3873,"id":211,"parameterSlots":2,"returnSlots":0},"@safeBatchTransferFrom_1180":{"entryPoint":2602,"id":1180,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_1134":{"entryPoint":4416,"id":1134,"parameterSlots":5,"returnSlots":0},"@setAchievement_9757":{"entryPoint":1840,"id":9757,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_1066":{"entryPoint":3862,"id":1066,"parameterSlots":2,"returnSlots":0},"@setBaseURI_9732":{"entryPoint":3064,"id":9732,"parameterSlots":2,"returnSlots":0},"@supportsInterface_10110":{"entryPoint":1829,"id":10110,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2135":{"entryPoint":null,"id":2135,"parameterSlots":1,"returnSlots":1},"@supportsInterface_93":{"entryPoint":4511,"id":93,"parameterSlots":1,"returnSlots":1},"@supportsInterface_938":{"entryPoint":6602,"id":938,"parameterSlots":1,"returnSlots":1},"@symbol_9628":{"entryPoint":3849,"id":9628,"parameterSlots":0,"returnSlots":0},"@toString_4738":{"entryPoint":4561,"id":4738,"parameterSlots":1,"returnSlots":1},"@totalSupply_1879":{"entryPoint":null,"id":1879,"parameterSlots":1,"returnSlots":1},"@totalSupply_1895":{"entryPoint":null,"id":1895,"parameterSlots":0,"returnSlots":1},"@unsafeMemoryAccess_4156":{"entryPoint":null,"id":4156,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_4182":{"entryPoint":null,"id":4182,"parameterSlots":2,"returnSlots":1},"@upgradeToAndCall_2496":{"entryPoint":7038,"id":2496,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_724":{"entryPoint":3004,"id":724,"parameterSlots":2,"returnSlots":0},"@uri_9795":{"entryPoint":2163,"id":9795,"parameterSlots":1,"returnSlots":1},"@usedNonces_9643":{"entryPoint":null,"id":9643,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_3243":{"entryPoint":8497,"id":3243,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":9181,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":9808,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool":{"entryPoint":9302,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes":{"entryPoint":9919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":9318,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_address":{"entryPoint":10924,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":10030,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":10966,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10713,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":10469,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9209,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes32t_bytes_calldata_ptr":{"entryPoint":10601,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10199,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":11768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":11921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":10536,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_addresst_address":{"entryPoint":10755,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":9643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":9500,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_boolt_boolt_string_calldata_ptr":{"entryPoint":9390,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_array_uint256_dyn":{"entryPoint":10390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":9580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":11387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11502,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11950,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11852,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12091,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool_t_string_memory_ptr__to_t_bool_t_bool_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9668,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2ea973a0052a4e6a834e07d94ae8fecb501158013d52044186e8b1a997ca8d08__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37a170f786e458179522ad8acdf045019b62598928e7a1acbbae427b70fe1ee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_64ca1ae50619f7f4ab23f4c22c6b85b70cfc49c072d731be4f91487f95764c93__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_93401b78a9a15fdd9637202256dc22545d2892602bcb5ead8f30e328fe8cde91__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9e7ed7f8e6dcd193d98e2fd5ebd44790ad3072ac13a6c8399c17d661a1faa4bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc1d79576d9c1e03d6ff90e81fd853c5eac89b9ed9cb54114db3e1e1ab962297__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":9725,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":9773,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12072,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":11815,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":11124,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":11577,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":11196,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9544,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11066,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11793,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11555,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9703,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":9251,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:26781:30","nodeType":"YulBlock","src":"0:26781:30","statements":[{"nativeSrc":"6:3:30","nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nativeSrc":"63:124:30","nodeType":"YulBlock","src":"63:124:30","statements":[{"nativeSrc":"73:29:30","nodeType":"YulAssignment","src":"73:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:30","nodeType":"YulIdentifier","src":"95:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:30","nodeType":"YulIdentifier","src":"82:12:30"},"nativeSrc":"82:20:30","nodeType":"YulFunctionCall","src":"82:20:30"},"variableNames":[{"name":"value","nativeSrc":"73:5:30","nodeType":"YulIdentifier","src":"73:5:30"}]},{"body":{"nativeSrc":"165:16:30","nodeType":"YulBlock","src":"165:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:30","nodeType":"YulLiteral","src":"174:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:30","nodeType":"YulLiteral","src":"177:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:30","nodeType":"YulIdentifier","src":"167:6:30"},"nativeSrc":"167:12:30","nodeType":"YulFunctionCall","src":"167:12:30"},"nativeSrc":"167:12:30","nodeType":"YulExpressionStatement","src":"167:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:30","nodeType":"YulIdentifier","src":"124:5:30"},{"arguments":[{"name":"value","nativeSrc":"135:5:30","nodeType":"YulIdentifier","src":"135:5:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:30","nodeType":"YulLiteral","src":"150:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:30","nodeType":"YulLiteral","src":"155:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:30","nodeType":"YulIdentifier","src":"146:3:30"},"nativeSrc":"146:11:30","nodeType":"YulFunctionCall","src":"146:11:30"},{"kind":"number","nativeSrc":"159:1:30","nodeType":"YulLiteral","src":"159:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:30","nodeType":"YulIdentifier","src":"142:3:30"},"nativeSrc":"142:19:30","nodeType":"YulFunctionCall","src":"142:19:30"}],"functionName":{"name":"and","nativeSrc":"131:3:30","nodeType":"YulIdentifier","src":"131:3:30"},"nativeSrc":"131:31:30","nodeType":"YulFunctionCall","src":"131:31:30"}],"functionName":{"name":"eq","nativeSrc":"121:2:30","nodeType":"YulIdentifier","src":"121:2:30"},"nativeSrc":"121:42:30","nodeType":"YulFunctionCall","src":"121:42:30"}],"functionName":{"name":"iszero","nativeSrc":"114:6:30","nodeType":"YulIdentifier","src":"114:6:30"},"nativeSrc":"114:50:30","nodeType":"YulFunctionCall","src":"114:50:30"},"nativeSrc":"111:70:30","nodeType":"YulIf","src":"111:70:30"}]},"name":"abi_decode_address","nativeSrc":"14:173:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:30","nodeType":"YulTypedName","src":"42:6:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:30","nodeType":"YulTypedName","src":"53:5:30","type":""}],"src":"14:173:30"},{"body":{"nativeSrc":"279:167:30","nodeType":"YulBlock","src":"279:167:30","statements":[{"body":{"nativeSrc":"325:16:30","nodeType":"YulBlock","src":"325:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"334:1:30","nodeType":"YulLiteral","src":"334:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"337:1:30","nodeType":"YulLiteral","src":"337:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"327:6:30","nodeType":"YulIdentifier","src":"327:6:30"},"nativeSrc":"327:12:30","nodeType":"YulFunctionCall","src":"327:12:30"},"nativeSrc":"327:12:30","nodeType":"YulExpressionStatement","src":"327:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"300:7:30","nodeType":"YulIdentifier","src":"300:7:30"},{"name":"headStart","nativeSrc":"309:9:30","nodeType":"YulIdentifier","src":"309:9:30"}],"functionName":{"name":"sub","nativeSrc":"296:3:30","nodeType":"YulIdentifier","src":"296:3:30"},"nativeSrc":"296:23:30","nodeType":"YulFunctionCall","src":"296:23:30"},{"kind":"number","nativeSrc":"321:2:30","nodeType":"YulLiteral","src":"321:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"292:3:30","nodeType":"YulIdentifier","src":"292:3:30"},"nativeSrc":"292:32:30","nodeType":"YulFunctionCall","src":"292:32:30"},"nativeSrc":"289:52:30","nodeType":"YulIf","src":"289:52:30"},{"nativeSrc":"350:39:30","nodeType":"YulAssignment","src":"350:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"379:9:30","nodeType":"YulIdentifier","src":"379:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"360:18:30","nodeType":"YulIdentifier","src":"360:18:30"},"nativeSrc":"360:29:30","nodeType":"YulFunctionCall","src":"360:29:30"},"variableNames":[{"name":"value0","nativeSrc":"350:6:30","nodeType":"YulIdentifier","src":"350:6:30"}]},{"nativeSrc":"398:42:30","nodeType":"YulAssignment","src":"398:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"425:9:30","nodeType":"YulIdentifier","src":"425:9:30"},{"kind":"number","nativeSrc":"436:2:30","nodeType":"YulLiteral","src":"436:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"421:3:30","nodeType":"YulIdentifier","src":"421:3:30"},"nativeSrc":"421:18:30","nodeType":"YulFunctionCall","src":"421:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"408:12:30","nodeType":"YulIdentifier","src":"408:12:30"},"nativeSrc":"408:32:30","nodeType":"YulFunctionCall","src":"408:32:30"},"variableNames":[{"name":"value1","nativeSrc":"398:6:30","nodeType":"YulIdentifier","src":"398:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"192:254:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"237:9:30","nodeType":"YulTypedName","src":"237:9:30","type":""},{"name":"dataEnd","nativeSrc":"248:7:30","nodeType":"YulTypedName","src":"248:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"260:6:30","nodeType":"YulTypedName","src":"260:6:30","type":""},{"name":"value1","nativeSrc":"268:6:30","nodeType":"YulTypedName","src":"268:6:30","type":""}],"src":"192:254:30"},{"body":{"nativeSrc":"552:76:30","nodeType":"YulBlock","src":"552:76:30","statements":[{"nativeSrc":"562:26:30","nodeType":"YulAssignment","src":"562:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"574:9:30","nodeType":"YulIdentifier","src":"574:9:30"},{"kind":"number","nativeSrc":"585:2:30","nodeType":"YulLiteral","src":"585:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"570:3:30","nodeType":"YulIdentifier","src":"570:3:30"},"nativeSrc":"570:18:30","nodeType":"YulFunctionCall","src":"570:18:30"},"variableNames":[{"name":"tail","nativeSrc":"562:4:30","nodeType":"YulIdentifier","src":"562:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"604:9:30","nodeType":"YulIdentifier","src":"604:9:30"},{"name":"value0","nativeSrc":"615:6:30","nodeType":"YulIdentifier","src":"615:6:30"}],"functionName":{"name":"mstore","nativeSrc":"597:6:30","nodeType":"YulIdentifier","src":"597:6:30"},"nativeSrc":"597:25:30","nodeType":"YulFunctionCall","src":"597:25:30"},"nativeSrc":"597:25:30","nodeType":"YulExpressionStatement","src":"597:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"451:177:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"521:9:30","nodeType":"YulTypedName","src":"521:9:30","type":""},{"name":"value0","nativeSrc":"532:6:30","nodeType":"YulTypedName","src":"532:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"543:4:30","nodeType":"YulTypedName","src":"543:4:30","type":""}],"src":"451:177:30"},{"body":{"nativeSrc":"677:87:30","nodeType":"YulBlock","src":"677:87:30","statements":[{"body":{"nativeSrc":"742:16:30","nodeType":"YulBlock","src":"742:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"751:1:30","nodeType":"YulLiteral","src":"751:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"754:1:30","nodeType":"YulLiteral","src":"754:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"744:6:30","nodeType":"YulIdentifier","src":"744:6:30"},"nativeSrc":"744:12:30","nodeType":"YulFunctionCall","src":"744:12:30"},"nativeSrc":"744:12:30","nodeType":"YulExpressionStatement","src":"744:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"700:5:30","nodeType":"YulIdentifier","src":"700:5:30"},{"arguments":[{"name":"value","nativeSrc":"711:5:30","nodeType":"YulIdentifier","src":"711:5:30"},{"arguments":[{"kind":"number","nativeSrc":"722:3:30","nodeType":"YulLiteral","src":"722:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"727:10:30","nodeType":"YulLiteral","src":"727:10:30","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"718:3:30","nodeType":"YulIdentifier","src":"718:3:30"},"nativeSrc":"718:20:30","nodeType":"YulFunctionCall","src":"718:20:30"}],"functionName":{"name":"and","nativeSrc":"707:3:30","nodeType":"YulIdentifier","src":"707:3:30"},"nativeSrc":"707:32:30","nodeType":"YulFunctionCall","src":"707:32:30"}],"functionName":{"name":"eq","nativeSrc":"697:2:30","nodeType":"YulIdentifier","src":"697:2:30"},"nativeSrc":"697:43:30","nodeType":"YulFunctionCall","src":"697:43:30"}],"functionName":{"name":"iszero","nativeSrc":"690:6:30","nodeType":"YulIdentifier","src":"690:6:30"},"nativeSrc":"690:51:30","nodeType":"YulFunctionCall","src":"690:51:30"},"nativeSrc":"687:71:30","nodeType":"YulIf","src":"687:71:30"}]},"name":"validator_revert_bytes4","nativeSrc":"633:131:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"666:5:30","nodeType":"YulTypedName","src":"666:5:30","type":""}],"src":"633:131:30"},{"body":{"nativeSrc":"838:176:30","nodeType":"YulBlock","src":"838:176:30","statements":[{"body":{"nativeSrc":"884:16:30","nodeType":"YulBlock","src":"884:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"893:1:30","nodeType":"YulLiteral","src":"893:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"896:1:30","nodeType":"YulLiteral","src":"896:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"886:6:30","nodeType":"YulIdentifier","src":"886:6:30"},"nativeSrc":"886:12:30","nodeType":"YulFunctionCall","src":"886:12:30"},"nativeSrc":"886:12:30","nodeType":"YulExpressionStatement","src":"886:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"859:7:30","nodeType":"YulIdentifier","src":"859:7:30"},{"name":"headStart","nativeSrc":"868:9:30","nodeType":"YulIdentifier","src":"868:9:30"}],"functionName":{"name":"sub","nativeSrc":"855:3:30","nodeType":"YulIdentifier","src":"855:3:30"},"nativeSrc":"855:23:30","nodeType":"YulFunctionCall","src":"855:23:30"},{"kind":"number","nativeSrc":"880:2:30","nodeType":"YulLiteral","src":"880:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"851:3:30","nodeType":"YulIdentifier","src":"851:3:30"},"nativeSrc":"851:32:30","nodeType":"YulFunctionCall","src":"851:32:30"},"nativeSrc":"848:52:30","nodeType":"YulIf","src":"848:52:30"},{"nativeSrc":"909:36:30","nodeType":"YulVariableDeclaration","src":"909:36:30","value":{"arguments":[{"name":"headStart","nativeSrc":"935:9:30","nodeType":"YulIdentifier","src":"935:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"922:12:30","nodeType":"YulIdentifier","src":"922:12:30"},"nativeSrc":"922:23:30","nodeType":"YulFunctionCall","src":"922:23:30"},"variables":[{"name":"value","nativeSrc":"913:5:30","nodeType":"YulTypedName","src":"913:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"978:5:30","nodeType":"YulIdentifier","src":"978:5:30"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"954:23:30","nodeType":"YulIdentifier","src":"954:23:30"},"nativeSrc":"954:30:30","nodeType":"YulFunctionCall","src":"954:30:30"},"nativeSrc":"954:30:30","nodeType":"YulExpressionStatement","src":"954:30:30"},{"nativeSrc":"993:15:30","nodeType":"YulAssignment","src":"993:15:30","value":{"name":"value","nativeSrc":"1003:5:30","nodeType":"YulIdentifier","src":"1003:5:30"},"variableNames":[{"name":"value0","nativeSrc":"993:6:30","nodeType":"YulIdentifier","src":"993:6:30"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"769:245:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"804:9:30","nodeType":"YulTypedName","src":"804:9:30","type":""},{"name":"dataEnd","nativeSrc":"815:7:30","nodeType":"YulTypedName","src":"815:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"827:6:30","nodeType":"YulTypedName","src":"827:6:30","type":""}],"src":"769:245:30"},{"body":{"nativeSrc":"1114:92:30","nodeType":"YulBlock","src":"1114:92:30","statements":[{"nativeSrc":"1124:26:30","nodeType":"YulAssignment","src":"1124:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1136:9:30","nodeType":"YulIdentifier","src":"1136:9:30"},{"kind":"number","nativeSrc":"1147:2:30","nodeType":"YulLiteral","src":"1147:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1132:3:30","nodeType":"YulIdentifier","src":"1132:3:30"},"nativeSrc":"1132:18:30","nodeType":"YulFunctionCall","src":"1132:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1124:4:30","nodeType":"YulIdentifier","src":"1124:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1166:9:30","nodeType":"YulIdentifier","src":"1166:9:30"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1191:6:30","nodeType":"YulIdentifier","src":"1191:6:30"}],"functionName":{"name":"iszero","nativeSrc":"1184:6:30","nodeType":"YulIdentifier","src":"1184:6:30"},"nativeSrc":"1184:14:30","nodeType":"YulFunctionCall","src":"1184:14:30"}],"functionName":{"name":"iszero","nativeSrc":"1177:6:30","nodeType":"YulIdentifier","src":"1177:6:30"},"nativeSrc":"1177:22:30","nodeType":"YulFunctionCall","src":"1177:22:30"}],"functionName":{"name":"mstore","nativeSrc":"1159:6:30","nodeType":"YulIdentifier","src":"1159:6:30"},"nativeSrc":"1159:41:30","nodeType":"YulFunctionCall","src":"1159:41:30"},"nativeSrc":"1159:41:30","nodeType":"YulExpressionStatement","src":"1159:41:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1019:187:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1083:9:30","nodeType":"YulTypedName","src":"1083:9:30","type":""},{"name":"value0","nativeSrc":"1094:6:30","nodeType":"YulTypedName","src":"1094:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1105:4:30","nodeType":"YulTypedName","src":"1105:4:30","type":""}],"src":"1019:187:30"},{"body":{"nativeSrc":"1257:114:30","nodeType":"YulBlock","src":"1257:114:30","statements":[{"nativeSrc":"1267:29:30","nodeType":"YulAssignment","src":"1267:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"1289:6:30","nodeType":"YulIdentifier","src":"1289:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"1276:12:30","nodeType":"YulIdentifier","src":"1276:12:30"},"nativeSrc":"1276:20:30","nodeType":"YulFunctionCall","src":"1276:20:30"},"variableNames":[{"name":"value","nativeSrc":"1267:5:30","nodeType":"YulIdentifier","src":"1267:5:30"}]},{"body":{"nativeSrc":"1349:16:30","nodeType":"YulBlock","src":"1349:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1358:1:30","nodeType":"YulLiteral","src":"1358:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1361:1:30","nodeType":"YulLiteral","src":"1361:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1351:6:30","nodeType":"YulIdentifier","src":"1351:6:30"},"nativeSrc":"1351:12:30","nodeType":"YulFunctionCall","src":"1351:12:30"},"nativeSrc":"1351:12:30","nodeType":"YulExpressionStatement","src":"1351:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1318:5:30","nodeType":"YulIdentifier","src":"1318:5:30"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1339:5:30","nodeType":"YulIdentifier","src":"1339:5:30"}],"functionName":{"name":"iszero","nativeSrc":"1332:6:30","nodeType":"YulIdentifier","src":"1332:6:30"},"nativeSrc":"1332:13:30","nodeType":"YulFunctionCall","src":"1332:13:30"}],"functionName":{"name":"iszero","nativeSrc":"1325:6:30","nodeType":"YulIdentifier","src":"1325:6:30"},"nativeSrc":"1325:21:30","nodeType":"YulFunctionCall","src":"1325:21:30"}],"functionName":{"name":"eq","nativeSrc":"1315:2:30","nodeType":"YulIdentifier","src":"1315:2:30"},"nativeSrc":"1315:32:30","nodeType":"YulFunctionCall","src":"1315:32:30"}],"functionName":{"name":"iszero","nativeSrc":"1308:6:30","nodeType":"YulIdentifier","src":"1308:6:30"},"nativeSrc":"1308:40:30","nodeType":"YulFunctionCall","src":"1308:40:30"},"nativeSrc":"1305:60:30","nodeType":"YulIf","src":"1305:60:30"}]},"name":"abi_decode_bool","nativeSrc":"1211:160:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1236:6:30","nodeType":"YulTypedName","src":"1236:6:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1247:5:30","nodeType":"YulTypedName","src":"1247:5:30","type":""}],"src":"1211:160:30"},{"body":{"nativeSrc":"1449:275:30","nodeType":"YulBlock","src":"1449:275:30","statements":[{"body":{"nativeSrc":"1498:16:30","nodeType":"YulBlock","src":"1498:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1507:1:30","nodeType":"YulLiteral","src":"1507:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1510:1:30","nodeType":"YulLiteral","src":"1510:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1500:6:30","nodeType":"YulIdentifier","src":"1500:6:30"},"nativeSrc":"1500:12:30","nodeType":"YulFunctionCall","src":"1500:12:30"},"nativeSrc":"1500:12:30","nodeType":"YulExpressionStatement","src":"1500:12:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1477:6:30","nodeType":"YulIdentifier","src":"1477:6:30"},{"kind":"number","nativeSrc":"1485:4:30","nodeType":"YulLiteral","src":"1485:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1473:3:30","nodeType":"YulIdentifier","src":"1473:3:30"},"nativeSrc":"1473:17:30","nodeType":"YulFunctionCall","src":"1473:17:30"},{"name":"end","nativeSrc":"1492:3:30","nodeType":"YulIdentifier","src":"1492:3:30"}],"functionName":{"name":"slt","nativeSrc":"1469:3:30","nodeType":"YulIdentifier","src":"1469:3:30"},"nativeSrc":"1469:27:30","nodeType":"YulFunctionCall","src":"1469:27:30"}],"functionName":{"name":"iszero","nativeSrc":"1462:6:30","nodeType":"YulIdentifier","src":"1462:6:30"},"nativeSrc":"1462:35:30","nodeType":"YulFunctionCall","src":"1462:35:30"},"nativeSrc":"1459:55:30","nodeType":"YulIf","src":"1459:55:30"},{"nativeSrc":"1523:30:30","nodeType":"YulAssignment","src":"1523:30:30","value":{"arguments":[{"name":"offset","nativeSrc":"1546:6:30","nodeType":"YulIdentifier","src":"1546:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"1533:12:30","nodeType":"YulIdentifier","src":"1533:12:30"},"nativeSrc":"1533:20:30","nodeType":"YulFunctionCall","src":"1533:20:30"},"variableNames":[{"name":"length","nativeSrc":"1523:6:30","nodeType":"YulIdentifier","src":"1523:6:30"}]},{"body":{"nativeSrc":"1596:16:30","nodeType":"YulBlock","src":"1596:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1605:1:30","nodeType":"YulLiteral","src":"1605:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1608:1:30","nodeType":"YulLiteral","src":"1608:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1598:6:30","nodeType":"YulIdentifier","src":"1598:6:30"},"nativeSrc":"1598:12:30","nodeType":"YulFunctionCall","src":"1598:12:30"},"nativeSrc":"1598:12:30","nodeType":"YulExpressionStatement","src":"1598:12:30"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1568:6:30","nodeType":"YulIdentifier","src":"1568:6:30"},{"kind":"number","nativeSrc":"1576:18:30","nodeType":"YulLiteral","src":"1576:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1565:2:30","nodeType":"YulIdentifier","src":"1565:2:30"},"nativeSrc":"1565:30:30","nodeType":"YulFunctionCall","src":"1565:30:30"},"nativeSrc":"1562:50:30","nodeType":"YulIf","src":"1562:50:30"},{"nativeSrc":"1621:29:30","nodeType":"YulAssignment","src":"1621:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"1637:6:30","nodeType":"YulIdentifier","src":"1637:6:30"},{"kind":"number","nativeSrc":"1645:4:30","nodeType":"YulLiteral","src":"1645:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1633:3:30","nodeType":"YulIdentifier","src":"1633:3:30"},"nativeSrc":"1633:17:30","nodeType":"YulFunctionCall","src":"1633:17:30"},"variableNames":[{"name":"arrayPos","nativeSrc":"1621:8:30","nodeType":"YulIdentifier","src":"1621:8:30"}]},{"body":{"nativeSrc":"1702:16:30","nodeType":"YulBlock","src":"1702:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1711:1:30","nodeType":"YulLiteral","src":"1711:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1714:1:30","nodeType":"YulLiteral","src":"1714:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1704:6:30","nodeType":"YulIdentifier","src":"1704:6:30"},"nativeSrc":"1704:12:30","nodeType":"YulFunctionCall","src":"1704:12:30"},"nativeSrc":"1704:12:30","nodeType":"YulExpressionStatement","src":"1704:12:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1673:6:30","nodeType":"YulIdentifier","src":"1673:6:30"},{"name":"length","nativeSrc":"1681:6:30","nodeType":"YulIdentifier","src":"1681:6:30"}],"functionName":{"name":"add","nativeSrc":"1669:3:30","nodeType":"YulIdentifier","src":"1669:3:30"},"nativeSrc":"1669:19:30","nodeType":"YulFunctionCall","src":"1669:19:30"},{"kind":"number","nativeSrc":"1690:4:30","nodeType":"YulLiteral","src":"1690:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1665:3:30","nodeType":"YulIdentifier","src":"1665:3:30"},"nativeSrc":"1665:30:30","nodeType":"YulFunctionCall","src":"1665:30:30"},{"name":"end","nativeSrc":"1697:3:30","nodeType":"YulIdentifier","src":"1697:3:30"}],"functionName":{"name":"gt","nativeSrc":"1662:2:30","nodeType":"YulIdentifier","src":"1662:2:30"},"nativeSrc":"1662:39:30","nodeType":"YulFunctionCall","src":"1662:39:30"},"nativeSrc":"1659:59:30","nodeType":"YulIf","src":"1659:59:30"}]},"name":"abi_decode_string_calldata","nativeSrc":"1376:348:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1412:6:30","nodeType":"YulTypedName","src":"1412:6:30","type":""},{"name":"end","nativeSrc":"1420:3:30","nodeType":"YulTypedName","src":"1420:3:30","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"1428:8:30","nodeType":"YulTypedName","src":"1428:8:30","type":""},{"name":"length","nativeSrc":"1438:6:30","nodeType":"YulTypedName","src":"1438:6:30","type":""}],"src":"1376:348:30"},{"body":{"nativeSrc":"1864:481:30","nodeType":"YulBlock","src":"1864:481:30","statements":[{"body":{"nativeSrc":"1911:16:30","nodeType":"YulBlock","src":"1911:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1920:1:30","nodeType":"YulLiteral","src":"1920:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1923:1:30","nodeType":"YulLiteral","src":"1923:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1913:6:30","nodeType":"YulIdentifier","src":"1913:6:30"},"nativeSrc":"1913:12:30","nodeType":"YulFunctionCall","src":"1913:12:30"},"nativeSrc":"1913:12:30","nodeType":"YulExpressionStatement","src":"1913:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1885:7:30","nodeType":"YulIdentifier","src":"1885:7:30"},{"name":"headStart","nativeSrc":"1894:9:30","nodeType":"YulIdentifier","src":"1894:9:30"}],"functionName":{"name":"sub","nativeSrc":"1881:3:30","nodeType":"YulIdentifier","src":"1881:3:30"},"nativeSrc":"1881:23:30","nodeType":"YulFunctionCall","src":"1881:23:30"},{"kind":"number","nativeSrc":"1906:3:30","nodeType":"YulLiteral","src":"1906:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1877:3:30","nodeType":"YulIdentifier","src":"1877:3:30"},"nativeSrc":"1877:33:30","nodeType":"YulFunctionCall","src":"1877:33:30"},"nativeSrc":"1874:53:30","nodeType":"YulIf","src":"1874:53:30"},{"nativeSrc":"1936:33:30","nodeType":"YulAssignment","src":"1936:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1959:9:30","nodeType":"YulIdentifier","src":"1959:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"1946:12:30","nodeType":"YulIdentifier","src":"1946:12:30"},"nativeSrc":"1946:23:30","nodeType":"YulFunctionCall","src":"1946:23:30"},"variableNames":[{"name":"value0","nativeSrc":"1936:6:30","nodeType":"YulIdentifier","src":"1936:6:30"}]},{"nativeSrc":"1978:45:30","nodeType":"YulAssignment","src":"1978:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2008:9:30","nodeType":"YulIdentifier","src":"2008:9:30"},{"kind":"number","nativeSrc":"2019:2:30","nodeType":"YulLiteral","src":"2019:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2004:3:30","nodeType":"YulIdentifier","src":"2004:3:30"},"nativeSrc":"2004:18:30","nodeType":"YulFunctionCall","src":"2004:18:30"}],"functionName":{"name":"abi_decode_bool","nativeSrc":"1988:15:30","nodeType":"YulIdentifier","src":"1988:15:30"},"nativeSrc":"1988:35:30","nodeType":"YulFunctionCall","src":"1988:35:30"},"variableNames":[{"name":"value1","nativeSrc":"1978:6:30","nodeType":"YulIdentifier","src":"1978:6:30"}]},{"nativeSrc":"2032:45:30","nodeType":"YulAssignment","src":"2032:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2062:9:30","nodeType":"YulIdentifier","src":"2062:9:30"},{"kind":"number","nativeSrc":"2073:2:30","nodeType":"YulLiteral","src":"2073:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2058:3:30","nodeType":"YulIdentifier","src":"2058:3:30"},"nativeSrc":"2058:18:30","nodeType":"YulFunctionCall","src":"2058:18:30"}],"functionName":{"name":"abi_decode_bool","nativeSrc":"2042:15:30","nodeType":"YulIdentifier","src":"2042:15:30"},"nativeSrc":"2042:35:30","nodeType":"YulFunctionCall","src":"2042:35:30"},"variableNames":[{"name":"value2","nativeSrc":"2032:6:30","nodeType":"YulIdentifier","src":"2032:6:30"}]},{"nativeSrc":"2086:46:30","nodeType":"YulVariableDeclaration","src":"2086:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2117:9:30","nodeType":"YulIdentifier","src":"2117:9:30"},{"kind":"number","nativeSrc":"2128:2:30","nodeType":"YulLiteral","src":"2128:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2113:3:30","nodeType":"YulIdentifier","src":"2113:3:30"},"nativeSrc":"2113:18:30","nodeType":"YulFunctionCall","src":"2113:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"2100:12:30","nodeType":"YulIdentifier","src":"2100:12:30"},"nativeSrc":"2100:32:30","nodeType":"YulFunctionCall","src":"2100:32:30"},"variables":[{"name":"offset","nativeSrc":"2090:6:30","nodeType":"YulTypedName","src":"2090:6:30","type":""}]},{"body":{"nativeSrc":"2175:16:30","nodeType":"YulBlock","src":"2175:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2184:1:30","nodeType":"YulLiteral","src":"2184:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2187:1:30","nodeType":"YulLiteral","src":"2187:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2177:6:30","nodeType":"YulIdentifier","src":"2177:6:30"},"nativeSrc":"2177:12:30","nodeType":"YulFunctionCall","src":"2177:12:30"},"nativeSrc":"2177:12:30","nodeType":"YulExpressionStatement","src":"2177:12:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2147:6:30","nodeType":"YulIdentifier","src":"2147:6:30"},{"kind":"number","nativeSrc":"2155:18:30","nodeType":"YulLiteral","src":"2155:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2144:2:30","nodeType":"YulIdentifier","src":"2144:2:30"},"nativeSrc":"2144:30:30","nodeType":"YulFunctionCall","src":"2144:30:30"},"nativeSrc":"2141:50:30","nodeType":"YulIf","src":"2141:50:30"},{"nativeSrc":"2200:85:30","nodeType":"YulVariableDeclaration","src":"2200:85:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2257:9:30","nodeType":"YulIdentifier","src":"2257:9:30"},{"name":"offset","nativeSrc":"2268:6:30","nodeType":"YulIdentifier","src":"2268:6:30"}],"functionName":{"name":"add","nativeSrc":"2253:3:30","nodeType":"YulIdentifier","src":"2253:3:30"},"nativeSrc":"2253:22:30","nodeType":"YulFunctionCall","src":"2253:22:30"},{"name":"dataEnd","nativeSrc":"2277:7:30","nodeType":"YulIdentifier","src":"2277:7:30"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"2226:26:30","nodeType":"YulIdentifier","src":"2226:26:30"},"nativeSrc":"2226:59:30","nodeType":"YulFunctionCall","src":"2226:59:30"},"variables":[{"name":"value3_1","nativeSrc":"2204:8:30","nodeType":"YulTypedName","src":"2204:8:30","type":""},{"name":"value4_1","nativeSrc":"2214:8:30","nodeType":"YulTypedName","src":"2214:8:30","type":""}]},{"nativeSrc":"2294:18:30","nodeType":"YulAssignment","src":"2294:18:30","value":{"name":"value3_1","nativeSrc":"2304:8:30","nodeType":"YulIdentifier","src":"2304:8:30"},"variableNames":[{"name":"value3","nativeSrc":"2294:6:30","nodeType":"YulIdentifier","src":"2294:6:30"}]},{"nativeSrc":"2321:18:30","nodeType":"YulAssignment","src":"2321:18:30","value":{"name":"value4_1","nativeSrc":"2331:8:30","nodeType":"YulIdentifier","src":"2331:8:30"},"variableNames":[{"name":"value4","nativeSrc":"2321:6:30","nodeType":"YulIdentifier","src":"2321:6:30"}]}]},"name":"abi_decode_tuple_t_uint256t_boolt_boolt_string_calldata_ptr","nativeSrc":"1729:616:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1798:9:30","nodeType":"YulTypedName","src":"1798:9:30","type":""},{"name":"dataEnd","nativeSrc":"1809:7:30","nodeType":"YulTypedName","src":"1809:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1821:6:30","nodeType":"YulTypedName","src":"1821:6:30","type":""},{"name":"value1","nativeSrc":"1829:6:30","nodeType":"YulTypedName","src":"1829:6:30","type":""},{"name":"value2","nativeSrc":"1837:6:30","nodeType":"YulTypedName","src":"1837:6:30","type":""},{"name":"value3","nativeSrc":"1845:6:30","nodeType":"YulTypedName","src":"1845:6:30","type":""},{"name":"value4","nativeSrc":"1853:6:30","nodeType":"YulTypedName","src":"1853:6:30","type":""}],"src":"1729:616:30"},{"body":{"nativeSrc":"2437:167:30","nodeType":"YulBlock","src":"2437:167:30","statements":[{"body":{"nativeSrc":"2483:16:30","nodeType":"YulBlock","src":"2483:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2492:1:30","nodeType":"YulLiteral","src":"2492:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2495:1:30","nodeType":"YulLiteral","src":"2495:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2485:6:30","nodeType":"YulIdentifier","src":"2485:6:30"},"nativeSrc":"2485:12:30","nodeType":"YulFunctionCall","src":"2485:12:30"},"nativeSrc":"2485:12:30","nodeType":"YulExpressionStatement","src":"2485:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2458:7:30","nodeType":"YulIdentifier","src":"2458:7:30"},{"name":"headStart","nativeSrc":"2467:9:30","nodeType":"YulIdentifier","src":"2467:9:30"}],"functionName":{"name":"sub","nativeSrc":"2454:3:30","nodeType":"YulIdentifier","src":"2454:3:30"},"nativeSrc":"2454:23:30","nodeType":"YulFunctionCall","src":"2454:23:30"},{"kind":"number","nativeSrc":"2479:2:30","nodeType":"YulLiteral","src":"2479:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2450:3:30","nodeType":"YulIdentifier","src":"2450:3:30"},"nativeSrc":"2450:32:30","nodeType":"YulFunctionCall","src":"2450:32:30"},"nativeSrc":"2447:52:30","nodeType":"YulIf","src":"2447:52:30"},{"nativeSrc":"2508:33:30","nodeType":"YulAssignment","src":"2508:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2531:9:30","nodeType":"YulIdentifier","src":"2531:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"2518:12:30","nodeType":"YulIdentifier","src":"2518:12:30"},"nativeSrc":"2518:23:30","nodeType":"YulFunctionCall","src":"2518:23:30"},"variableNames":[{"name":"value0","nativeSrc":"2508:6:30","nodeType":"YulIdentifier","src":"2508:6:30"}]},{"nativeSrc":"2550:48:30","nodeType":"YulAssignment","src":"2550:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2583:9:30","nodeType":"YulIdentifier","src":"2583:9:30"},{"kind":"number","nativeSrc":"2594:2:30","nodeType":"YulLiteral","src":"2594:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2579:3:30","nodeType":"YulIdentifier","src":"2579:3:30"},"nativeSrc":"2579:18:30","nodeType":"YulFunctionCall","src":"2579:18:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2560:18:30","nodeType":"YulIdentifier","src":"2560:18:30"},"nativeSrc":"2560:38:30","nodeType":"YulFunctionCall","src":"2560:38:30"},"variableNames":[{"name":"value1","nativeSrc":"2550:6:30","nodeType":"YulIdentifier","src":"2550:6:30"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"2350:254:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2395:9:30","nodeType":"YulTypedName","src":"2395:9:30","type":""},{"name":"dataEnd","nativeSrc":"2406:7:30","nodeType":"YulTypedName","src":"2406:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2418:6:30","nodeType":"YulTypedName","src":"2418:6:30","type":""},{"name":"value1","nativeSrc":"2426:6:30","nodeType":"YulTypedName","src":"2426:6:30","type":""}],"src":"2350:254:30"},{"body":{"nativeSrc":"2675:184:30","nodeType":"YulBlock","src":"2675:184:30","statements":[{"nativeSrc":"2685:10:30","nodeType":"YulVariableDeclaration","src":"2685:10:30","value":{"kind":"number","nativeSrc":"2694:1:30","nodeType":"YulLiteral","src":"2694:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2689:1:30","nodeType":"YulTypedName","src":"2689:1:30","type":""}]},{"body":{"nativeSrc":"2754:63:30","nodeType":"YulBlock","src":"2754:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2779:3:30","nodeType":"YulIdentifier","src":"2779:3:30"},{"name":"i","nativeSrc":"2784:1:30","nodeType":"YulIdentifier","src":"2784:1:30"}],"functionName":{"name":"add","nativeSrc":"2775:3:30","nodeType":"YulIdentifier","src":"2775:3:30"},"nativeSrc":"2775:11:30","nodeType":"YulFunctionCall","src":"2775:11:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2798:3:30","nodeType":"YulIdentifier","src":"2798:3:30"},{"name":"i","nativeSrc":"2803:1:30","nodeType":"YulIdentifier","src":"2803:1:30"}],"functionName":{"name":"add","nativeSrc":"2794:3:30","nodeType":"YulIdentifier","src":"2794:3:30"},"nativeSrc":"2794:11:30","nodeType":"YulFunctionCall","src":"2794:11:30"}],"functionName":{"name":"mload","nativeSrc":"2788:5:30","nodeType":"YulIdentifier","src":"2788:5:30"},"nativeSrc":"2788:18:30","nodeType":"YulFunctionCall","src":"2788:18:30"}],"functionName":{"name":"mstore","nativeSrc":"2768:6:30","nodeType":"YulIdentifier","src":"2768:6:30"},"nativeSrc":"2768:39:30","nodeType":"YulFunctionCall","src":"2768:39:30"},"nativeSrc":"2768:39:30","nodeType":"YulExpressionStatement","src":"2768:39:30"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2715:1:30","nodeType":"YulIdentifier","src":"2715:1:30"},{"name":"length","nativeSrc":"2718:6:30","nodeType":"YulIdentifier","src":"2718:6:30"}],"functionName":{"name":"lt","nativeSrc":"2712:2:30","nodeType":"YulIdentifier","src":"2712:2:30"},"nativeSrc":"2712:13:30","nodeType":"YulFunctionCall","src":"2712:13:30"},"nativeSrc":"2704:113:30","nodeType":"YulForLoop","post":{"nativeSrc":"2726:19:30","nodeType":"YulBlock","src":"2726:19:30","statements":[{"nativeSrc":"2728:15:30","nodeType":"YulAssignment","src":"2728:15:30","value":{"arguments":[{"name":"i","nativeSrc":"2737:1:30","nodeType":"YulIdentifier","src":"2737:1:30"},{"kind":"number","nativeSrc":"2740:2:30","nodeType":"YulLiteral","src":"2740:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2733:3:30","nodeType":"YulIdentifier","src":"2733:3:30"},"nativeSrc":"2733:10:30","nodeType":"YulFunctionCall","src":"2733:10:30"},"variableNames":[{"name":"i","nativeSrc":"2728:1:30","nodeType":"YulIdentifier","src":"2728:1:30"}]}]},"pre":{"nativeSrc":"2708:3:30","nodeType":"YulBlock","src":"2708:3:30","statements":[]},"src":"2704:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2837:3:30","nodeType":"YulIdentifier","src":"2837:3:30"},{"name":"length","nativeSrc":"2842:6:30","nodeType":"YulIdentifier","src":"2842:6:30"}],"functionName":{"name":"add","nativeSrc":"2833:3:30","nodeType":"YulIdentifier","src":"2833:3:30"},"nativeSrc":"2833:16:30","nodeType":"YulFunctionCall","src":"2833:16:30"},{"kind":"number","nativeSrc":"2851:1:30","nodeType":"YulLiteral","src":"2851:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2826:6:30","nodeType":"YulIdentifier","src":"2826:6:30"},"nativeSrc":"2826:27:30","nodeType":"YulFunctionCall","src":"2826:27:30"},"nativeSrc":"2826:27:30","nodeType":"YulExpressionStatement","src":"2826:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2609:250:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2653:3:30","nodeType":"YulTypedName","src":"2653:3:30","type":""},{"name":"dst","nativeSrc":"2658:3:30","nodeType":"YulTypedName","src":"2658:3:30","type":""},{"name":"length","nativeSrc":"2663:6:30","nodeType":"YulTypedName","src":"2663:6:30","type":""}],"src":"2609:250:30"},{"body":{"nativeSrc":"2914:221:30","nodeType":"YulBlock","src":"2914:221:30","statements":[{"nativeSrc":"2924:26:30","nodeType":"YulVariableDeclaration","src":"2924:26:30","value":{"arguments":[{"name":"value","nativeSrc":"2944:5:30","nodeType":"YulIdentifier","src":"2944:5:30"}],"functionName":{"name":"mload","nativeSrc":"2938:5:30","nodeType":"YulIdentifier","src":"2938:5:30"},"nativeSrc":"2938:12:30","nodeType":"YulFunctionCall","src":"2938:12:30"},"variables":[{"name":"length","nativeSrc":"2928:6:30","nodeType":"YulTypedName","src":"2928:6:30","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2966:3:30","nodeType":"YulIdentifier","src":"2966:3:30"},{"name":"length","nativeSrc":"2971:6:30","nodeType":"YulIdentifier","src":"2971:6:30"}],"functionName":{"name":"mstore","nativeSrc":"2959:6:30","nodeType":"YulIdentifier","src":"2959:6:30"},"nativeSrc":"2959:19:30","nodeType":"YulFunctionCall","src":"2959:19:30"},"nativeSrc":"2959:19:30","nodeType":"YulExpressionStatement","src":"2959:19:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3026:5:30","nodeType":"YulIdentifier","src":"3026:5:30"},{"kind":"number","nativeSrc":"3033:4:30","nodeType":"YulLiteral","src":"3033:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3022:3:30","nodeType":"YulIdentifier","src":"3022:3:30"},"nativeSrc":"3022:16:30","nodeType":"YulFunctionCall","src":"3022:16:30"},{"arguments":[{"name":"pos","nativeSrc":"3044:3:30","nodeType":"YulIdentifier","src":"3044:3:30"},{"kind":"number","nativeSrc":"3049:4:30","nodeType":"YulLiteral","src":"3049:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3040:3:30","nodeType":"YulIdentifier","src":"3040:3:30"},"nativeSrc":"3040:14:30","nodeType":"YulFunctionCall","src":"3040:14:30"},{"name":"length","nativeSrc":"3056:6:30","nodeType":"YulIdentifier","src":"3056:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2987:34:30","nodeType":"YulIdentifier","src":"2987:34:30"},"nativeSrc":"2987:76:30","nodeType":"YulFunctionCall","src":"2987:76:30"},"nativeSrc":"2987:76:30","nodeType":"YulExpressionStatement","src":"2987:76:30"},{"nativeSrc":"3072:57:30","nodeType":"YulAssignment","src":"3072:57:30","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"3087:3:30","nodeType":"YulIdentifier","src":"3087:3:30"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3100:6:30","nodeType":"YulIdentifier","src":"3100:6:30"},{"kind":"number","nativeSrc":"3108:2:30","nodeType":"YulLiteral","src":"3108:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3096:3:30","nodeType":"YulIdentifier","src":"3096:3:30"},"nativeSrc":"3096:15:30","nodeType":"YulFunctionCall","src":"3096:15:30"},{"arguments":[{"kind":"number","nativeSrc":"3117:2:30","nodeType":"YulLiteral","src":"3117:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3113:3:30","nodeType":"YulIdentifier","src":"3113:3:30"},"nativeSrc":"3113:7:30","nodeType":"YulFunctionCall","src":"3113:7:30"}],"functionName":{"name":"and","nativeSrc":"3092:3:30","nodeType":"YulIdentifier","src":"3092:3:30"},"nativeSrc":"3092:29:30","nodeType":"YulFunctionCall","src":"3092:29:30"}],"functionName":{"name":"add","nativeSrc":"3083:3:30","nodeType":"YulIdentifier","src":"3083:3:30"},"nativeSrc":"3083:39:30","nodeType":"YulFunctionCall","src":"3083:39:30"},{"kind":"number","nativeSrc":"3124:4:30","nodeType":"YulLiteral","src":"3124:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3079:3:30","nodeType":"YulIdentifier","src":"3079:3:30"},"nativeSrc":"3079:50:30","nodeType":"YulFunctionCall","src":"3079:50:30"},"variableNames":[{"name":"end","nativeSrc":"3072:3:30","nodeType":"YulIdentifier","src":"3072:3:30"}]}]},"name":"abi_encode_string","nativeSrc":"2864:271:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2891:5:30","nodeType":"YulTypedName","src":"2891:5:30","type":""},{"name":"pos","nativeSrc":"2898:3:30","nodeType":"YulTypedName","src":"2898:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2906:3:30","nodeType":"YulTypedName","src":"2906:3:30","type":""}],"src":"2864:271:30"},{"body":{"nativeSrc":"3261:99:30","nodeType":"YulBlock","src":"3261:99:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3278:9:30","nodeType":"YulIdentifier","src":"3278:9:30"},{"kind":"number","nativeSrc":"3289:2:30","nodeType":"YulLiteral","src":"3289:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3271:6:30","nodeType":"YulIdentifier","src":"3271:6:30"},"nativeSrc":"3271:21:30","nodeType":"YulFunctionCall","src":"3271:21:30"},"nativeSrc":"3271:21:30","nodeType":"YulExpressionStatement","src":"3271:21:30"},{"nativeSrc":"3301:53:30","nodeType":"YulAssignment","src":"3301:53:30","value":{"arguments":[{"name":"value0","nativeSrc":"3327:6:30","nodeType":"YulIdentifier","src":"3327:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"3339:9:30","nodeType":"YulIdentifier","src":"3339:9:30"},{"kind":"number","nativeSrc":"3350:2:30","nodeType":"YulLiteral","src":"3350:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3335:3:30","nodeType":"YulIdentifier","src":"3335:3:30"},"nativeSrc":"3335:18:30","nodeType":"YulFunctionCall","src":"3335:18:30"}],"functionName":{"name":"abi_encode_string","nativeSrc":"3309:17:30","nodeType":"YulIdentifier","src":"3309:17:30"},"nativeSrc":"3309:45:30","nodeType":"YulFunctionCall","src":"3309:45:30"},"variableNames":[{"name":"tail","nativeSrc":"3301:4:30","nodeType":"YulIdentifier","src":"3301:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3140:220:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3230:9:30","nodeType":"YulTypedName","src":"3230:9:30","type":""},{"name":"value0","nativeSrc":"3241:6:30","nodeType":"YulTypedName","src":"3241:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3252:4:30","nodeType":"YulTypedName","src":"3252:4:30","type":""}],"src":"3140:220:30"},{"body":{"nativeSrc":"3435:110:30","nodeType":"YulBlock","src":"3435:110:30","statements":[{"body":{"nativeSrc":"3481:16:30","nodeType":"YulBlock","src":"3481:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3490:1:30","nodeType":"YulLiteral","src":"3490:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3493:1:30","nodeType":"YulLiteral","src":"3493:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3483:6:30","nodeType":"YulIdentifier","src":"3483:6:30"},"nativeSrc":"3483:12:30","nodeType":"YulFunctionCall","src":"3483:12:30"},"nativeSrc":"3483:12:30","nodeType":"YulExpressionStatement","src":"3483:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3456:7:30","nodeType":"YulIdentifier","src":"3456:7:30"},{"name":"headStart","nativeSrc":"3465:9:30","nodeType":"YulIdentifier","src":"3465:9:30"}],"functionName":{"name":"sub","nativeSrc":"3452:3:30","nodeType":"YulIdentifier","src":"3452:3:30"},"nativeSrc":"3452:23:30","nodeType":"YulFunctionCall","src":"3452:23:30"},{"kind":"number","nativeSrc":"3477:2:30","nodeType":"YulLiteral","src":"3477:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3448:3:30","nodeType":"YulIdentifier","src":"3448:3:30"},"nativeSrc":"3448:32:30","nodeType":"YulFunctionCall","src":"3448:32:30"},"nativeSrc":"3445:52:30","nodeType":"YulIf","src":"3445:52:30"},{"nativeSrc":"3506:33:30","nodeType":"YulAssignment","src":"3506:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3529:9:30","nodeType":"YulIdentifier","src":"3529:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"3516:12:30","nodeType":"YulIdentifier","src":"3516:12:30"},"nativeSrc":"3516:23:30","nodeType":"YulFunctionCall","src":"3516:23:30"},"variableNames":[{"name":"value0","nativeSrc":"3506:6:30","nodeType":"YulIdentifier","src":"3506:6:30"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3365:180:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3401:9:30","nodeType":"YulTypedName","src":"3401:9:30","type":""},{"name":"dataEnd","nativeSrc":"3412:7:30","nodeType":"YulTypedName","src":"3412:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3424:6:30","nodeType":"YulTypedName","src":"3424:6:30","type":""}],"src":"3365:180:30"},{"body":{"nativeSrc":"3620:110:30","nodeType":"YulBlock","src":"3620:110:30","statements":[{"body":{"nativeSrc":"3666:16:30","nodeType":"YulBlock","src":"3666:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3675:1:30","nodeType":"YulLiteral","src":"3675:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3678:1:30","nodeType":"YulLiteral","src":"3678:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3668:6:30","nodeType":"YulIdentifier","src":"3668:6:30"},"nativeSrc":"3668:12:30","nodeType":"YulFunctionCall","src":"3668:12:30"},"nativeSrc":"3668:12:30","nodeType":"YulExpressionStatement","src":"3668:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3641:7:30","nodeType":"YulIdentifier","src":"3641:7:30"},{"name":"headStart","nativeSrc":"3650:9:30","nodeType":"YulIdentifier","src":"3650:9:30"}],"functionName":{"name":"sub","nativeSrc":"3637:3:30","nodeType":"YulIdentifier","src":"3637:3:30"},"nativeSrc":"3637:23:30","nodeType":"YulFunctionCall","src":"3637:23:30"},{"kind":"number","nativeSrc":"3662:2:30","nodeType":"YulLiteral","src":"3662:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3633:3:30","nodeType":"YulIdentifier","src":"3633:3:30"},"nativeSrc":"3633:32:30","nodeType":"YulFunctionCall","src":"3633:32:30"},"nativeSrc":"3630:52:30","nodeType":"YulIf","src":"3630:52:30"},{"nativeSrc":"3691:33:30","nodeType":"YulAssignment","src":"3691:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3714:9:30","nodeType":"YulIdentifier","src":"3714:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"3701:12:30","nodeType":"YulIdentifier","src":"3701:12:30"},"nativeSrc":"3701:23:30","nodeType":"YulFunctionCall","src":"3701:23:30"},"variableNames":[{"name":"value0","nativeSrc":"3691:6:30","nodeType":"YulIdentifier","src":"3691:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"3550:180:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3586:9:30","nodeType":"YulTypedName","src":"3586:9:30","type":""},{"name":"dataEnd","nativeSrc":"3597:7:30","nodeType":"YulTypedName","src":"3597:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3609:6:30","nodeType":"YulTypedName","src":"3609:6:30","type":""}],"src":"3550:180:30"},{"body":{"nativeSrc":"3836:76:30","nodeType":"YulBlock","src":"3836:76:30","statements":[{"nativeSrc":"3846:26:30","nodeType":"YulAssignment","src":"3846:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3858:9:30","nodeType":"YulIdentifier","src":"3858:9:30"},{"kind":"number","nativeSrc":"3869:2:30","nodeType":"YulLiteral","src":"3869:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3854:3:30","nodeType":"YulIdentifier","src":"3854:3:30"},"nativeSrc":"3854:18:30","nodeType":"YulFunctionCall","src":"3854:18:30"},"variableNames":[{"name":"tail","nativeSrc":"3846:4:30","nodeType":"YulIdentifier","src":"3846:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3888:9:30","nodeType":"YulIdentifier","src":"3888:9:30"},{"name":"value0","nativeSrc":"3899:6:30","nodeType":"YulIdentifier","src":"3899:6:30"}],"functionName":{"name":"mstore","nativeSrc":"3881:6:30","nodeType":"YulIdentifier","src":"3881:6:30"},"nativeSrc":"3881:25:30","nodeType":"YulFunctionCall","src":"3881:25:30"},"nativeSrc":"3881:25:30","nodeType":"YulExpressionStatement","src":"3881:25:30"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"3735:177:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3805:9:30","nodeType":"YulTypedName","src":"3805:9:30","type":""},{"name":"value0","nativeSrc":"3816:6:30","nodeType":"YulTypedName","src":"3816:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3827:4:30","nodeType":"YulTypedName","src":"3827:4:30","type":""}],"src":"3735:177:30"},{"body":{"nativeSrc":"4082:217:30","nodeType":"YulBlock","src":"4082:217:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4099:9:30","nodeType":"YulIdentifier","src":"4099:9:30"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4124:6:30","nodeType":"YulIdentifier","src":"4124:6:30"}],"functionName":{"name":"iszero","nativeSrc":"4117:6:30","nodeType":"YulIdentifier","src":"4117:6:30"},"nativeSrc":"4117:14:30","nodeType":"YulFunctionCall","src":"4117:14:30"}],"functionName":{"name":"iszero","nativeSrc":"4110:6:30","nodeType":"YulIdentifier","src":"4110:6:30"},"nativeSrc":"4110:22:30","nodeType":"YulFunctionCall","src":"4110:22:30"}],"functionName":{"name":"mstore","nativeSrc":"4092:6:30","nodeType":"YulIdentifier","src":"4092:6:30"},"nativeSrc":"4092:41:30","nodeType":"YulFunctionCall","src":"4092:41:30"},"nativeSrc":"4092:41:30","nodeType":"YulExpressionStatement","src":"4092:41:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4153:9:30","nodeType":"YulIdentifier","src":"4153:9:30"},{"kind":"number","nativeSrc":"4164:2:30","nodeType":"YulLiteral","src":"4164:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4149:3:30","nodeType":"YulIdentifier","src":"4149:3:30"},"nativeSrc":"4149:18:30","nodeType":"YulFunctionCall","src":"4149:18:30"},{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"4183:6:30","nodeType":"YulIdentifier","src":"4183:6:30"}],"functionName":{"name":"iszero","nativeSrc":"4176:6:30","nodeType":"YulIdentifier","src":"4176:6:30"},"nativeSrc":"4176:14:30","nodeType":"YulFunctionCall","src":"4176:14:30"}],"functionName":{"name":"iszero","nativeSrc":"4169:6:30","nodeType":"YulIdentifier","src":"4169:6:30"},"nativeSrc":"4169:22:30","nodeType":"YulFunctionCall","src":"4169:22:30"}],"functionName":{"name":"mstore","nativeSrc":"4142:6:30","nodeType":"YulIdentifier","src":"4142:6:30"},"nativeSrc":"4142:50:30","nodeType":"YulFunctionCall","src":"4142:50:30"},"nativeSrc":"4142:50:30","nodeType":"YulExpressionStatement","src":"4142:50:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4212:9:30","nodeType":"YulIdentifier","src":"4212:9:30"},{"kind":"number","nativeSrc":"4223:2:30","nodeType":"YulLiteral","src":"4223:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4208:3:30","nodeType":"YulIdentifier","src":"4208:3:30"},"nativeSrc":"4208:18:30","nodeType":"YulFunctionCall","src":"4208:18:30"},{"kind":"number","nativeSrc":"4228:2:30","nodeType":"YulLiteral","src":"4228:2:30","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"4201:6:30","nodeType":"YulIdentifier","src":"4201:6:30"},"nativeSrc":"4201:30:30","nodeType":"YulFunctionCall","src":"4201:30:30"},"nativeSrc":"4201:30:30","nodeType":"YulExpressionStatement","src":"4201:30:30"},{"nativeSrc":"4240:53:30","nodeType":"YulAssignment","src":"4240:53:30","value":{"arguments":[{"name":"value2","nativeSrc":"4266:6:30","nodeType":"YulIdentifier","src":"4266:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"4278:9:30","nodeType":"YulIdentifier","src":"4278:9:30"},{"kind":"number","nativeSrc":"4289:2:30","nodeType":"YulLiteral","src":"4289:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4274:3:30","nodeType":"YulIdentifier","src":"4274:3:30"},"nativeSrc":"4274:18:30","nodeType":"YulFunctionCall","src":"4274:18:30"}],"functionName":{"name":"abi_encode_string","nativeSrc":"4248:17:30","nodeType":"YulIdentifier","src":"4248:17:30"},"nativeSrc":"4248:45:30","nodeType":"YulFunctionCall","src":"4248:45:30"},"variableNames":[{"name":"tail","nativeSrc":"4240:4:30","nodeType":"YulIdentifier","src":"4240:4:30"}]}]},"name":"abi_encode_tuple_t_bool_t_bool_t_string_memory_ptr__to_t_bool_t_bool_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3917:382:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4035:9:30","nodeType":"YulTypedName","src":"4035:9:30","type":""},{"name":"value2","nativeSrc":"4046:6:30","nodeType":"YulTypedName","src":"4046:6:30","type":""},{"name":"value1","nativeSrc":"4054:6:30","nodeType":"YulTypedName","src":"4054:6:30","type":""},{"name":"value0","nativeSrc":"4062:6:30","nodeType":"YulTypedName","src":"4062:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4073:4:30","nodeType":"YulTypedName","src":"4073:4:30","type":""}],"src":"3917:382:30"},{"body":{"nativeSrc":"4336:95:30","nodeType":"YulBlock","src":"4336:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4353:1:30","nodeType":"YulLiteral","src":"4353:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4360:3:30","nodeType":"YulLiteral","src":"4360:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"4365:10:30","nodeType":"YulLiteral","src":"4365:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4356:3:30","nodeType":"YulIdentifier","src":"4356:3:30"},"nativeSrc":"4356:20:30","nodeType":"YulFunctionCall","src":"4356:20:30"}],"functionName":{"name":"mstore","nativeSrc":"4346:6:30","nodeType":"YulIdentifier","src":"4346:6:30"},"nativeSrc":"4346:31:30","nodeType":"YulFunctionCall","src":"4346:31:30"},"nativeSrc":"4346:31:30","nodeType":"YulExpressionStatement","src":"4346:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4393:1:30","nodeType":"YulLiteral","src":"4393:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"4396:4:30","nodeType":"YulLiteral","src":"4396:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"4386:6:30","nodeType":"YulIdentifier","src":"4386:6:30"},"nativeSrc":"4386:15:30","nodeType":"YulFunctionCall","src":"4386:15:30"},"nativeSrc":"4386:15:30","nodeType":"YulExpressionStatement","src":"4386:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4417:1:30","nodeType":"YulLiteral","src":"4417:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"4420:4:30","nodeType":"YulLiteral","src":"4420:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4410:6:30","nodeType":"YulIdentifier","src":"4410:6:30"},"nativeSrc":"4410:15:30","nodeType":"YulFunctionCall","src":"4410:15:30"},"nativeSrc":"4410:15:30","nodeType":"YulExpressionStatement","src":"4410:15:30"}]},"name":"panic_error_0x41","nativeSrc":"4304:127:30","nodeType":"YulFunctionDefinition","src":"4304:127:30"},{"body":{"nativeSrc":"4481:230:30","nodeType":"YulBlock","src":"4481:230:30","statements":[{"nativeSrc":"4491:19:30","nodeType":"YulAssignment","src":"4491:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"4507:2:30","nodeType":"YulLiteral","src":"4507:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"4501:5:30","nodeType":"YulIdentifier","src":"4501:5:30"},"nativeSrc":"4501:9:30","nodeType":"YulFunctionCall","src":"4501:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"4491:6:30","nodeType":"YulIdentifier","src":"4491:6:30"}]},{"nativeSrc":"4519:58:30","nodeType":"YulVariableDeclaration","src":"4519:58:30","value":{"arguments":[{"name":"memPtr","nativeSrc":"4541:6:30","nodeType":"YulIdentifier","src":"4541:6:30"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"4557:4:30","nodeType":"YulIdentifier","src":"4557:4:30"},{"kind":"number","nativeSrc":"4563:2:30","nodeType":"YulLiteral","src":"4563:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4553:3:30","nodeType":"YulIdentifier","src":"4553:3:30"},"nativeSrc":"4553:13:30","nodeType":"YulFunctionCall","src":"4553:13:30"},{"arguments":[{"kind":"number","nativeSrc":"4572:2:30","nodeType":"YulLiteral","src":"4572:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4568:3:30","nodeType":"YulIdentifier","src":"4568:3:30"},"nativeSrc":"4568:7:30","nodeType":"YulFunctionCall","src":"4568:7:30"}],"functionName":{"name":"and","nativeSrc":"4549:3:30","nodeType":"YulIdentifier","src":"4549:3:30"},"nativeSrc":"4549:27:30","nodeType":"YulFunctionCall","src":"4549:27:30"}],"functionName":{"name":"add","nativeSrc":"4537:3:30","nodeType":"YulIdentifier","src":"4537:3:30"},"nativeSrc":"4537:40:30","nodeType":"YulFunctionCall","src":"4537:40:30"},"variables":[{"name":"newFreePtr","nativeSrc":"4523:10:30","nodeType":"YulTypedName","src":"4523:10:30","type":""}]},{"body":{"nativeSrc":"4652:22:30","nodeType":"YulBlock","src":"4652:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4654:16:30","nodeType":"YulIdentifier","src":"4654:16:30"},"nativeSrc":"4654:18:30","nodeType":"YulFunctionCall","src":"4654:18:30"},"nativeSrc":"4654:18:30","nodeType":"YulExpressionStatement","src":"4654:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4595:10:30","nodeType":"YulIdentifier","src":"4595:10:30"},{"kind":"number","nativeSrc":"4607:18:30","nodeType":"YulLiteral","src":"4607:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4592:2:30","nodeType":"YulIdentifier","src":"4592:2:30"},"nativeSrc":"4592:34:30","nodeType":"YulFunctionCall","src":"4592:34:30"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4631:10:30","nodeType":"YulIdentifier","src":"4631:10:30"},{"name":"memPtr","nativeSrc":"4643:6:30","nodeType":"YulIdentifier","src":"4643:6:30"}],"functionName":{"name":"lt","nativeSrc":"4628:2:30","nodeType":"YulIdentifier","src":"4628:2:30"},"nativeSrc":"4628:22:30","nodeType":"YulFunctionCall","src":"4628:22:30"}],"functionName":{"name":"or","nativeSrc":"4589:2:30","nodeType":"YulIdentifier","src":"4589:2:30"},"nativeSrc":"4589:62:30","nodeType":"YulFunctionCall","src":"4589:62:30"},"nativeSrc":"4586:88:30","nodeType":"YulIf","src":"4586:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4690:2:30","nodeType":"YulLiteral","src":"4690:2:30","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4694:10:30","nodeType":"YulIdentifier","src":"4694:10:30"}],"functionName":{"name":"mstore","nativeSrc":"4683:6:30","nodeType":"YulIdentifier","src":"4683:6:30"},"nativeSrc":"4683:22:30","nodeType":"YulFunctionCall","src":"4683:22:30"},"nativeSrc":"4683:22:30","nodeType":"YulExpressionStatement","src":"4683:22:30"}]},"name":"allocate_memory","nativeSrc":"4436:275:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"4461:4:30","nodeType":"YulTypedName","src":"4461:4:30","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"4470:6:30","nodeType":"YulTypedName","src":"4470:6:30","type":""}],"src":"4436:275:30"},{"body":{"nativeSrc":"4785:114:30","nodeType":"YulBlock","src":"4785:114:30","statements":[{"body":{"nativeSrc":"4829:22:30","nodeType":"YulBlock","src":"4829:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4831:16:30","nodeType":"YulIdentifier","src":"4831:16:30"},"nativeSrc":"4831:18:30","nodeType":"YulFunctionCall","src":"4831:18:30"},"nativeSrc":"4831:18:30","nodeType":"YulExpressionStatement","src":"4831:18:30"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4801:6:30","nodeType":"YulIdentifier","src":"4801:6:30"},{"kind":"number","nativeSrc":"4809:18:30","nodeType":"YulLiteral","src":"4809:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4798:2:30","nodeType":"YulIdentifier","src":"4798:2:30"},"nativeSrc":"4798:30:30","nodeType":"YulFunctionCall","src":"4798:30:30"},"nativeSrc":"4795:56:30","nodeType":"YulIf","src":"4795:56:30"},{"nativeSrc":"4860:33:30","nodeType":"YulAssignment","src":"4860:33:30","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4876:1:30","nodeType":"YulLiteral","src":"4876:1:30","type":"","value":"5"},{"name":"length","nativeSrc":"4879:6:30","nodeType":"YulIdentifier","src":"4879:6:30"}],"functionName":{"name":"shl","nativeSrc":"4872:3:30","nodeType":"YulIdentifier","src":"4872:3:30"},"nativeSrc":"4872:14:30","nodeType":"YulFunctionCall","src":"4872:14:30"},{"kind":"number","nativeSrc":"4888:4:30","nodeType":"YulLiteral","src":"4888:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4868:3:30","nodeType":"YulIdentifier","src":"4868:3:30"},"nativeSrc":"4868:25:30","nodeType":"YulFunctionCall","src":"4868:25:30"},"variableNames":[{"name":"size","nativeSrc":"4860:4:30","nodeType":"YulIdentifier","src":"4860:4:30"}]}]},"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"4716:183:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"4765:6:30","nodeType":"YulTypedName","src":"4765:6:30","type":""}],"returnVariables":[{"name":"size","nativeSrc":"4776:4:30","nodeType":"YulTypedName","src":"4776:4:30","type":""}],"src":"4716:183:30"},{"body":{"nativeSrc":"4968:604:30","nodeType":"YulBlock","src":"4968:604:30","statements":[{"body":{"nativeSrc":"5017:16:30","nodeType":"YulBlock","src":"5017:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5026:1:30","nodeType":"YulLiteral","src":"5026:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"5029:1:30","nodeType":"YulLiteral","src":"5029:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5019:6:30","nodeType":"YulIdentifier","src":"5019:6:30"},"nativeSrc":"5019:12:30","nodeType":"YulFunctionCall","src":"5019:12:30"},"nativeSrc":"5019:12:30","nodeType":"YulExpressionStatement","src":"5019:12:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4996:6:30","nodeType":"YulIdentifier","src":"4996:6:30"},{"kind":"number","nativeSrc":"5004:4:30","nodeType":"YulLiteral","src":"5004:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4992:3:30","nodeType":"YulIdentifier","src":"4992:3:30"},"nativeSrc":"4992:17:30","nodeType":"YulFunctionCall","src":"4992:17:30"},{"name":"end","nativeSrc":"5011:3:30","nodeType":"YulIdentifier","src":"5011:3:30"}],"functionName":{"name":"slt","nativeSrc":"4988:3:30","nodeType":"YulIdentifier","src":"4988:3:30"},"nativeSrc":"4988:27:30","nodeType":"YulFunctionCall","src":"4988:27:30"}],"functionName":{"name":"iszero","nativeSrc":"4981:6:30","nodeType":"YulIdentifier","src":"4981:6:30"},"nativeSrc":"4981:35:30","nodeType":"YulFunctionCall","src":"4981:35:30"},"nativeSrc":"4978:55:30","nodeType":"YulIf","src":"4978:55:30"},{"nativeSrc":"5042:30:30","nodeType":"YulVariableDeclaration","src":"5042:30:30","value":{"arguments":[{"name":"offset","nativeSrc":"5065:6:30","nodeType":"YulIdentifier","src":"5065:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"5052:12:30","nodeType":"YulIdentifier","src":"5052:12:30"},"nativeSrc":"5052:20:30","nodeType":"YulFunctionCall","src":"5052:20:30"},"variables":[{"name":"_1","nativeSrc":"5046:2:30","nodeType":"YulTypedName","src":"5046:2:30","type":""}]},{"nativeSrc":"5081:14:30","nodeType":"YulVariableDeclaration","src":"5081:14:30","value":{"kind":"number","nativeSrc":"5091:4:30","nodeType":"YulLiteral","src":"5091:4:30","type":"","value":"0x20"},"variables":[{"name":"_2","nativeSrc":"5085:2:30","nodeType":"YulTypedName","src":"5085:2:30","type":""}]},{"nativeSrc":"5104:71:30","nodeType":"YulVariableDeclaration","src":"5104:71:30","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5171:2:30","nodeType":"YulIdentifier","src":"5171:2:30"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"5131:39:30","nodeType":"YulIdentifier","src":"5131:39:30"},"nativeSrc":"5131:43:30","nodeType":"YulFunctionCall","src":"5131:43:30"}],"functionName":{"name":"allocate_memory","nativeSrc":"5115:15:30","nodeType":"YulIdentifier","src":"5115:15:30"},"nativeSrc":"5115:60:30","nodeType":"YulFunctionCall","src":"5115:60:30"},"variables":[{"name":"dst","nativeSrc":"5108:3:30","nodeType":"YulTypedName","src":"5108:3:30","type":""}]},{"nativeSrc":"5184:16:30","nodeType":"YulVariableDeclaration","src":"5184:16:30","value":{"name":"dst","nativeSrc":"5197:3:30","nodeType":"YulIdentifier","src":"5197:3:30"},"variables":[{"name":"dst_1","nativeSrc":"5188:5:30","nodeType":"YulTypedName","src":"5188:5:30","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"5216:3:30","nodeType":"YulIdentifier","src":"5216:3:30"},{"name":"_1","nativeSrc":"5221:2:30","nodeType":"YulIdentifier","src":"5221:2:30"}],"functionName":{"name":"mstore","nativeSrc":"5209:6:30","nodeType":"YulIdentifier","src":"5209:6:30"},"nativeSrc":"5209:15:30","nodeType":"YulFunctionCall","src":"5209:15:30"},"nativeSrc":"5209:15:30","nodeType":"YulExpressionStatement","src":"5209:15:30"},{"nativeSrc":"5233:21:30","nodeType":"YulAssignment","src":"5233:21:30","value":{"arguments":[{"name":"dst","nativeSrc":"5244:3:30","nodeType":"YulIdentifier","src":"5244:3:30"},{"kind":"number","nativeSrc":"5249:4:30","nodeType":"YulLiteral","src":"5249:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5240:3:30","nodeType":"YulIdentifier","src":"5240:3:30"},"nativeSrc":"5240:14:30","nodeType":"YulFunctionCall","src":"5240:14:30"},"variableNames":[{"name":"dst","nativeSrc":"5233:3:30","nodeType":"YulIdentifier","src":"5233:3:30"}]},{"nativeSrc":"5263:48:30","nodeType":"YulVariableDeclaration","src":"5263:48:30","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5285:6:30","nodeType":"YulIdentifier","src":"5285:6:30"},{"arguments":[{"kind":"number","nativeSrc":"5297:1:30","nodeType":"YulLiteral","src":"5297:1:30","type":"","value":"5"},{"name":"_1","nativeSrc":"5300:2:30","nodeType":"YulIdentifier","src":"5300:2:30"}],"functionName":{"name":"shl","nativeSrc":"5293:3:30","nodeType":"YulIdentifier","src":"5293:3:30"},"nativeSrc":"5293:10:30","nodeType":"YulFunctionCall","src":"5293:10:30"}],"functionName":{"name":"add","nativeSrc":"5281:3:30","nodeType":"YulIdentifier","src":"5281:3:30"},"nativeSrc":"5281:23:30","nodeType":"YulFunctionCall","src":"5281:23:30"},{"kind":"number","nativeSrc":"5306:4:30","nodeType":"YulLiteral","src":"5306:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5277:3:30","nodeType":"YulIdentifier","src":"5277:3:30"},"nativeSrc":"5277:34:30","nodeType":"YulFunctionCall","src":"5277:34:30"},"variables":[{"name":"srcEnd","nativeSrc":"5267:6:30","nodeType":"YulTypedName","src":"5267:6:30","type":""}]},{"body":{"nativeSrc":"5339:16:30","nodeType":"YulBlock","src":"5339:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5348:1:30","nodeType":"YulLiteral","src":"5348:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"5351:1:30","nodeType":"YulLiteral","src":"5351:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5341:6:30","nodeType":"YulIdentifier","src":"5341:6:30"},"nativeSrc":"5341:12:30","nodeType":"YulFunctionCall","src":"5341:12:30"},"nativeSrc":"5341:12:30","nodeType":"YulExpressionStatement","src":"5341:12:30"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"5326:6:30","nodeType":"YulIdentifier","src":"5326:6:30"},{"name":"end","nativeSrc":"5334:3:30","nodeType":"YulIdentifier","src":"5334:3:30"}],"functionName":{"name":"gt","nativeSrc":"5323:2:30","nodeType":"YulIdentifier","src":"5323:2:30"},"nativeSrc":"5323:15:30","nodeType":"YulFunctionCall","src":"5323:15:30"},"nativeSrc":"5320:35:30","nodeType":"YulIf","src":"5320:35:30"},{"nativeSrc":"5364:28:30","nodeType":"YulVariableDeclaration","src":"5364:28:30","value":{"arguments":[{"name":"offset","nativeSrc":"5379:6:30","nodeType":"YulIdentifier","src":"5379:6:30"},{"kind":"number","nativeSrc":"5387:4:30","nodeType":"YulLiteral","src":"5387:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5375:3:30","nodeType":"YulIdentifier","src":"5375:3:30"},"nativeSrc":"5375:17:30","nodeType":"YulFunctionCall","src":"5375:17:30"},"variables":[{"name":"src","nativeSrc":"5368:3:30","nodeType":"YulTypedName","src":"5368:3:30","type":""}]},{"body":{"nativeSrc":"5457:86:30","nodeType":"YulBlock","src":"5457:86:30","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"5478:3:30","nodeType":"YulIdentifier","src":"5478:3:30"},{"arguments":[{"name":"src","nativeSrc":"5496:3:30","nodeType":"YulIdentifier","src":"5496:3:30"}],"functionName":{"name":"calldataload","nativeSrc":"5483:12:30","nodeType":"YulIdentifier","src":"5483:12:30"},"nativeSrc":"5483:17:30","nodeType":"YulFunctionCall","src":"5483:17:30"}],"functionName":{"name":"mstore","nativeSrc":"5471:6:30","nodeType":"YulIdentifier","src":"5471:6:30"},"nativeSrc":"5471:30:30","nodeType":"YulFunctionCall","src":"5471:30:30"},"nativeSrc":"5471:30:30","nodeType":"YulExpressionStatement","src":"5471:30:30"},{"nativeSrc":"5514:19:30","nodeType":"YulAssignment","src":"5514:19:30","value":{"arguments":[{"name":"dst","nativeSrc":"5525:3:30","nodeType":"YulIdentifier","src":"5525:3:30"},{"name":"_2","nativeSrc":"5530:2:30","nodeType":"YulIdentifier","src":"5530:2:30"}],"functionName":{"name":"add","nativeSrc":"5521:3:30","nodeType":"YulIdentifier","src":"5521:3:30"},"nativeSrc":"5521:12:30","nodeType":"YulFunctionCall","src":"5521:12:30"},"variableNames":[{"name":"dst","nativeSrc":"5514:3:30","nodeType":"YulIdentifier","src":"5514:3:30"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"5412:3:30","nodeType":"YulIdentifier","src":"5412:3:30"},{"name":"srcEnd","nativeSrc":"5417:6:30","nodeType":"YulIdentifier","src":"5417:6:30"}],"functionName":{"name":"lt","nativeSrc":"5409:2:30","nodeType":"YulIdentifier","src":"5409:2:30"},"nativeSrc":"5409:15:30","nodeType":"YulFunctionCall","src":"5409:15:30"},"nativeSrc":"5401:142:30","nodeType":"YulForLoop","post":{"nativeSrc":"5425:23:30","nodeType":"YulBlock","src":"5425:23:30","statements":[{"nativeSrc":"5427:19:30","nodeType":"YulAssignment","src":"5427:19:30","value":{"arguments":[{"name":"src","nativeSrc":"5438:3:30","nodeType":"YulIdentifier","src":"5438:3:30"},{"name":"_2","nativeSrc":"5443:2:30","nodeType":"YulIdentifier","src":"5443:2:30"}],"functionName":{"name":"add","nativeSrc":"5434:3:30","nodeType":"YulIdentifier","src":"5434:3:30"},"nativeSrc":"5434:12:30","nodeType":"YulFunctionCall","src":"5434:12:30"},"variableNames":[{"name":"src","nativeSrc":"5427:3:30","nodeType":"YulIdentifier","src":"5427:3:30"}]}]},"pre":{"nativeSrc":"5405:3:30","nodeType":"YulBlock","src":"5405:3:30","statements":[]},"src":"5401:142:30"},{"nativeSrc":"5552:14:30","nodeType":"YulAssignment","src":"5552:14:30","value":{"name":"dst_1","nativeSrc":"5561:5:30","nodeType":"YulIdentifier","src":"5561:5:30"},"variableNames":[{"name":"array","nativeSrc":"5552:5:30","nodeType":"YulIdentifier","src":"5552:5:30"}]}]},"name":"abi_decode_array_uint256_dyn","nativeSrc":"4904:668:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4942:6:30","nodeType":"YulTypedName","src":"4942:6:30","type":""},{"name":"end","nativeSrc":"4950:3:30","nodeType":"YulTypedName","src":"4950:3:30","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4958:5:30","nodeType":"YulTypedName","src":"4958:5:30","type":""}],"src":"4904:668:30"},{"body":{"nativeSrc":"5629:478:30","nodeType":"YulBlock","src":"5629:478:30","statements":[{"body":{"nativeSrc":"5678:16:30","nodeType":"YulBlock","src":"5678:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5687:1:30","nodeType":"YulLiteral","src":"5687:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"5690:1:30","nodeType":"YulLiteral","src":"5690:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5680:6:30","nodeType":"YulIdentifier","src":"5680:6:30"},"nativeSrc":"5680:12:30","nodeType":"YulFunctionCall","src":"5680:12:30"},"nativeSrc":"5680:12:30","nodeType":"YulExpressionStatement","src":"5680:12:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5657:6:30","nodeType":"YulIdentifier","src":"5657:6:30"},{"kind":"number","nativeSrc":"5665:4:30","nodeType":"YulLiteral","src":"5665:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5653:3:30","nodeType":"YulIdentifier","src":"5653:3:30"},"nativeSrc":"5653:17:30","nodeType":"YulFunctionCall","src":"5653:17:30"},{"name":"end","nativeSrc":"5672:3:30","nodeType":"YulIdentifier","src":"5672:3:30"}],"functionName":{"name":"slt","nativeSrc":"5649:3:30","nodeType":"YulIdentifier","src":"5649:3:30"},"nativeSrc":"5649:27:30","nodeType":"YulFunctionCall","src":"5649:27:30"}],"functionName":{"name":"iszero","nativeSrc":"5642:6:30","nodeType":"YulIdentifier","src":"5642:6:30"},"nativeSrc":"5642:35:30","nodeType":"YulFunctionCall","src":"5642:35:30"},"nativeSrc":"5639:55:30","nodeType":"YulIf","src":"5639:55:30"},{"nativeSrc":"5703:30:30","nodeType":"YulVariableDeclaration","src":"5703:30:30","value":{"arguments":[{"name":"offset","nativeSrc":"5726:6:30","nodeType":"YulIdentifier","src":"5726:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"5713:12:30","nodeType":"YulIdentifier","src":"5713:12:30"},"nativeSrc":"5713:20:30","nodeType":"YulFunctionCall","src":"5713:20:30"},"variables":[{"name":"_1","nativeSrc":"5707:2:30","nodeType":"YulTypedName","src":"5707:2:30","type":""}]},{"body":{"nativeSrc":"5772:22:30","nodeType":"YulBlock","src":"5772:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5774:16:30","nodeType":"YulIdentifier","src":"5774:16:30"},"nativeSrc":"5774:18:30","nodeType":"YulFunctionCall","src":"5774:18:30"},"nativeSrc":"5774:18:30","nodeType":"YulExpressionStatement","src":"5774:18:30"}]},"condition":{"arguments":[{"name":"_1","nativeSrc":"5748:2:30","nodeType":"YulIdentifier","src":"5748:2:30"},{"kind":"number","nativeSrc":"5752:18:30","nodeType":"YulLiteral","src":"5752:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5745:2:30","nodeType":"YulIdentifier","src":"5745:2:30"},"nativeSrc":"5745:26:30","nodeType":"YulFunctionCall","src":"5745:26:30"},"nativeSrc":"5742:52:30","nodeType":"YulIf","src":"5742:52:30"},{"nativeSrc":"5803:70:30","nodeType":"YulVariableDeclaration","src":"5803:70:30","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5846:2:30","nodeType":"YulIdentifier","src":"5846:2:30"},{"kind":"number","nativeSrc":"5850:4:30","nodeType":"YulLiteral","src":"5850:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5842:3:30","nodeType":"YulIdentifier","src":"5842:3:30"},"nativeSrc":"5842:13:30","nodeType":"YulFunctionCall","src":"5842:13:30"},{"arguments":[{"kind":"number","nativeSrc":"5861:2:30","nodeType":"YulLiteral","src":"5861:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5857:3:30","nodeType":"YulIdentifier","src":"5857:3:30"},"nativeSrc":"5857:7:30","nodeType":"YulFunctionCall","src":"5857:7:30"}],"functionName":{"name":"and","nativeSrc":"5838:3:30","nodeType":"YulIdentifier","src":"5838:3:30"},"nativeSrc":"5838:27:30","nodeType":"YulFunctionCall","src":"5838:27:30"},{"kind":"number","nativeSrc":"5867:4:30","nodeType":"YulLiteral","src":"5867:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5834:3:30","nodeType":"YulIdentifier","src":"5834:3:30"},"nativeSrc":"5834:38:30","nodeType":"YulFunctionCall","src":"5834:38:30"}],"functionName":{"name":"allocate_memory","nativeSrc":"5818:15:30","nodeType":"YulIdentifier","src":"5818:15:30"},"nativeSrc":"5818:55:30","nodeType":"YulFunctionCall","src":"5818:55:30"},"variables":[{"name":"array_1","nativeSrc":"5807:7:30","nodeType":"YulTypedName","src":"5807:7:30","type":""}]},{"expression":{"arguments":[{"name":"array_1","nativeSrc":"5889:7:30","nodeType":"YulIdentifier","src":"5889:7:30"},{"name":"_1","nativeSrc":"5898:2:30","nodeType":"YulIdentifier","src":"5898:2:30"}],"functionName":{"name":"mstore","nativeSrc":"5882:6:30","nodeType":"YulIdentifier","src":"5882:6:30"},"nativeSrc":"5882:19:30","nodeType":"YulFunctionCall","src":"5882:19:30"},"nativeSrc":"5882:19:30","nodeType":"YulExpressionStatement","src":"5882:19:30"},{"body":{"nativeSrc":"5949:16:30","nodeType":"YulBlock","src":"5949:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5958:1:30","nodeType":"YulLiteral","src":"5958:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"5961:1:30","nodeType":"YulLiteral","src":"5961:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5951:6:30","nodeType":"YulIdentifier","src":"5951:6:30"},"nativeSrc":"5951:12:30","nodeType":"YulFunctionCall","src":"5951:12:30"},"nativeSrc":"5951:12:30","nodeType":"YulExpressionStatement","src":"5951:12:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5924:6:30","nodeType":"YulIdentifier","src":"5924:6:30"},{"name":"_1","nativeSrc":"5932:2:30","nodeType":"YulIdentifier","src":"5932:2:30"}],"functionName":{"name":"add","nativeSrc":"5920:3:30","nodeType":"YulIdentifier","src":"5920:3:30"},"nativeSrc":"5920:15:30","nodeType":"YulFunctionCall","src":"5920:15:30"},{"kind":"number","nativeSrc":"5937:4:30","nodeType":"YulLiteral","src":"5937:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5916:3:30","nodeType":"YulIdentifier","src":"5916:3:30"},"nativeSrc":"5916:26:30","nodeType":"YulFunctionCall","src":"5916:26:30"},{"name":"end","nativeSrc":"5944:3:30","nodeType":"YulIdentifier","src":"5944:3:30"}],"functionName":{"name":"gt","nativeSrc":"5913:2:30","nodeType":"YulIdentifier","src":"5913:2:30"},"nativeSrc":"5913:35:30","nodeType":"YulFunctionCall","src":"5913:35:30"},"nativeSrc":"5910:55:30","nodeType":"YulIf","src":"5910:55:30"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nativeSrc":"5991:7:30","nodeType":"YulIdentifier","src":"5991:7:30"},{"kind":"number","nativeSrc":"6000:4:30","nodeType":"YulLiteral","src":"6000:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5987:3:30","nodeType":"YulIdentifier","src":"5987:3:30"},"nativeSrc":"5987:18:30","nodeType":"YulFunctionCall","src":"5987:18:30"},{"arguments":[{"name":"offset","nativeSrc":"6011:6:30","nodeType":"YulIdentifier","src":"6011:6:30"},{"kind":"number","nativeSrc":"6019:4:30","nodeType":"YulLiteral","src":"6019:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6007:3:30","nodeType":"YulIdentifier","src":"6007:3:30"},"nativeSrc":"6007:17:30","nodeType":"YulFunctionCall","src":"6007:17:30"},{"name":"_1","nativeSrc":"6026:2:30","nodeType":"YulIdentifier","src":"6026:2:30"}],"functionName":{"name":"calldatacopy","nativeSrc":"5974:12:30","nodeType":"YulIdentifier","src":"5974:12:30"},"nativeSrc":"5974:55:30","nodeType":"YulFunctionCall","src":"5974:55:30"},"nativeSrc":"5974:55:30","nodeType":"YulExpressionStatement","src":"5974:55:30"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nativeSrc":"6053:7:30","nodeType":"YulIdentifier","src":"6053:7:30"},{"name":"_1","nativeSrc":"6062:2:30","nodeType":"YulIdentifier","src":"6062:2:30"}],"functionName":{"name":"add","nativeSrc":"6049:3:30","nodeType":"YulIdentifier","src":"6049:3:30"},"nativeSrc":"6049:16:30","nodeType":"YulFunctionCall","src":"6049:16:30"},{"kind":"number","nativeSrc":"6067:4:30","nodeType":"YulLiteral","src":"6067:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6045:3:30","nodeType":"YulIdentifier","src":"6045:3:30"},"nativeSrc":"6045:27:30","nodeType":"YulFunctionCall","src":"6045:27:30"},{"kind":"number","nativeSrc":"6074:1:30","nodeType":"YulLiteral","src":"6074:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6038:6:30","nodeType":"YulIdentifier","src":"6038:6:30"},"nativeSrc":"6038:38:30","nodeType":"YulFunctionCall","src":"6038:38:30"},"nativeSrc":"6038:38:30","nodeType":"YulExpressionStatement","src":"6038:38:30"},{"nativeSrc":"6085:16:30","nodeType":"YulAssignment","src":"6085:16:30","value":{"name":"array_1","nativeSrc":"6094:7:30","nodeType":"YulIdentifier","src":"6094:7:30"},"variableNames":[{"name":"array","nativeSrc":"6085:5:30","nodeType":"YulIdentifier","src":"6085:5:30"}]}]},"name":"abi_decode_bytes","nativeSrc":"5577:530:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5603:6:30","nodeType":"YulTypedName","src":"5603:6:30","type":""},{"name":"end","nativeSrc":"5611:3:30","nodeType":"YulTypedName","src":"5611:3:30","type":""}],"returnVariables":[{"name":"array","nativeSrc":"5619:5:30","nodeType":"YulTypedName","src":"5619:5:30","type":""}],"src":"5577:530:30"},{"body":{"nativeSrc":"6309:746:30","nodeType":"YulBlock","src":"6309:746:30","statements":[{"body":{"nativeSrc":"6356:16:30","nodeType":"YulBlock","src":"6356:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6365:1:30","nodeType":"YulLiteral","src":"6365:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6368:1:30","nodeType":"YulLiteral","src":"6368:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6358:6:30","nodeType":"YulIdentifier","src":"6358:6:30"},"nativeSrc":"6358:12:30","nodeType":"YulFunctionCall","src":"6358:12:30"},"nativeSrc":"6358:12:30","nodeType":"YulExpressionStatement","src":"6358:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6330:7:30","nodeType":"YulIdentifier","src":"6330:7:30"},{"name":"headStart","nativeSrc":"6339:9:30","nodeType":"YulIdentifier","src":"6339:9:30"}],"functionName":{"name":"sub","nativeSrc":"6326:3:30","nodeType":"YulIdentifier","src":"6326:3:30"},"nativeSrc":"6326:23:30","nodeType":"YulFunctionCall","src":"6326:23:30"},{"kind":"number","nativeSrc":"6351:3:30","nodeType":"YulLiteral","src":"6351:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"6322:3:30","nodeType":"YulIdentifier","src":"6322:3:30"},"nativeSrc":"6322:33:30","nodeType":"YulFunctionCall","src":"6322:33:30"},"nativeSrc":"6319:53:30","nodeType":"YulIf","src":"6319:53:30"},{"nativeSrc":"6381:39:30","nodeType":"YulAssignment","src":"6381:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"6410:9:30","nodeType":"YulIdentifier","src":"6410:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6391:18:30","nodeType":"YulIdentifier","src":"6391:18:30"},"nativeSrc":"6391:29:30","nodeType":"YulFunctionCall","src":"6391:29:30"},"variableNames":[{"name":"value0","nativeSrc":"6381:6:30","nodeType":"YulIdentifier","src":"6381:6:30"}]},{"nativeSrc":"6429:48:30","nodeType":"YulAssignment","src":"6429:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6462:9:30","nodeType":"YulIdentifier","src":"6462:9:30"},{"kind":"number","nativeSrc":"6473:2:30","nodeType":"YulLiteral","src":"6473:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6458:3:30","nodeType":"YulIdentifier","src":"6458:3:30"},"nativeSrc":"6458:18:30","nodeType":"YulFunctionCall","src":"6458:18:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6439:18:30","nodeType":"YulIdentifier","src":"6439:18:30"},"nativeSrc":"6439:38:30","nodeType":"YulFunctionCall","src":"6439:38:30"},"variableNames":[{"name":"value1","nativeSrc":"6429:6:30","nodeType":"YulIdentifier","src":"6429:6:30"}]},{"nativeSrc":"6486:46:30","nodeType":"YulVariableDeclaration","src":"6486:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6517:9:30","nodeType":"YulIdentifier","src":"6517:9:30"},{"kind":"number","nativeSrc":"6528:2:30","nodeType":"YulLiteral","src":"6528:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6513:3:30","nodeType":"YulIdentifier","src":"6513:3:30"},"nativeSrc":"6513:18:30","nodeType":"YulFunctionCall","src":"6513:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"6500:12:30","nodeType":"YulIdentifier","src":"6500:12:30"},"nativeSrc":"6500:32:30","nodeType":"YulFunctionCall","src":"6500:32:30"},"variables":[{"name":"offset","nativeSrc":"6490:6:30","nodeType":"YulTypedName","src":"6490:6:30","type":""}]},{"nativeSrc":"6541:28:30","nodeType":"YulVariableDeclaration","src":"6541:28:30","value":{"kind":"number","nativeSrc":"6551:18:30","nodeType":"YulLiteral","src":"6551:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"6545:2:30","nodeType":"YulTypedName","src":"6545:2:30","type":""}]},{"body":{"nativeSrc":"6596:16:30","nodeType":"YulBlock","src":"6596:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6605:1:30","nodeType":"YulLiteral","src":"6605:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6608:1:30","nodeType":"YulLiteral","src":"6608:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6598:6:30","nodeType":"YulIdentifier","src":"6598:6:30"},"nativeSrc":"6598:12:30","nodeType":"YulFunctionCall","src":"6598:12:30"},"nativeSrc":"6598:12:30","nodeType":"YulExpressionStatement","src":"6598:12:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6584:6:30","nodeType":"YulIdentifier","src":"6584:6:30"},{"name":"_1","nativeSrc":"6592:2:30","nodeType":"YulIdentifier","src":"6592:2:30"}],"functionName":{"name":"gt","nativeSrc":"6581:2:30","nodeType":"YulIdentifier","src":"6581:2:30"},"nativeSrc":"6581:14:30","nodeType":"YulFunctionCall","src":"6581:14:30"},"nativeSrc":"6578:34:30","nodeType":"YulIf","src":"6578:34:30"},{"nativeSrc":"6621:71:30","nodeType":"YulAssignment","src":"6621:71:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6664:9:30","nodeType":"YulIdentifier","src":"6664:9:30"},{"name":"offset","nativeSrc":"6675:6:30","nodeType":"YulIdentifier","src":"6675:6:30"}],"functionName":{"name":"add","nativeSrc":"6660:3:30","nodeType":"YulIdentifier","src":"6660:3:30"},"nativeSrc":"6660:22:30","nodeType":"YulFunctionCall","src":"6660:22:30"},{"name":"dataEnd","nativeSrc":"6684:7:30","nodeType":"YulIdentifier","src":"6684:7:30"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"6631:28:30","nodeType":"YulIdentifier","src":"6631:28:30"},"nativeSrc":"6631:61:30","nodeType":"YulFunctionCall","src":"6631:61:30"},"variableNames":[{"name":"value2","nativeSrc":"6621:6:30","nodeType":"YulIdentifier","src":"6621:6:30"}]},{"nativeSrc":"6701:48:30","nodeType":"YulVariableDeclaration","src":"6701:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6734:9:30","nodeType":"YulIdentifier","src":"6734:9:30"},{"kind":"number","nativeSrc":"6745:2:30","nodeType":"YulLiteral","src":"6745:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6730:3:30","nodeType":"YulIdentifier","src":"6730:3:30"},"nativeSrc":"6730:18:30","nodeType":"YulFunctionCall","src":"6730:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"6717:12:30","nodeType":"YulIdentifier","src":"6717:12:30"},"nativeSrc":"6717:32:30","nodeType":"YulFunctionCall","src":"6717:32:30"},"variables":[{"name":"offset_1","nativeSrc":"6705:8:30","nodeType":"YulTypedName","src":"6705:8:30","type":""}]},{"body":{"nativeSrc":"6778:16:30","nodeType":"YulBlock","src":"6778:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6787:1:30","nodeType":"YulLiteral","src":"6787:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6790:1:30","nodeType":"YulLiteral","src":"6790:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6780:6:30","nodeType":"YulIdentifier","src":"6780:6:30"},"nativeSrc":"6780:12:30","nodeType":"YulFunctionCall","src":"6780:12:30"},"nativeSrc":"6780:12:30","nodeType":"YulExpressionStatement","src":"6780:12:30"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"6764:8:30","nodeType":"YulIdentifier","src":"6764:8:30"},{"name":"_1","nativeSrc":"6774:2:30","nodeType":"YulIdentifier","src":"6774:2:30"}],"functionName":{"name":"gt","nativeSrc":"6761:2:30","nodeType":"YulIdentifier","src":"6761:2:30"},"nativeSrc":"6761:16:30","nodeType":"YulFunctionCall","src":"6761:16:30"},"nativeSrc":"6758:36:30","nodeType":"YulIf","src":"6758:36:30"},{"nativeSrc":"6803:73:30","nodeType":"YulAssignment","src":"6803:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6846:9:30","nodeType":"YulIdentifier","src":"6846:9:30"},{"name":"offset_1","nativeSrc":"6857:8:30","nodeType":"YulIdentifier","src":"6857:8:30"}],"functionName":{"name":"add","nativeSrc":"6842:3:30","nodeType":"YulIdentifier","src":"6842:3:30"},"nativeSrc":"6842:24:30","nodeType":"YulFunctionCall","src":"6842:24:30"},{"name":"dataEnd","nativeSrc":"6868:7:30","nodeType":"YulIdentifier","src":"6868:7:30"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"6813:28:30","nodeType":"YulIdentifier","src":"6813:28:30"},"nativeSrc":"6813:63:30","nodeType":"YulFunctionCall","src":"6813:63:30"},"variableNames":[{"name":"value3","nativeSrc":"6803:6:30","nodeType":"YulIdentifier","src":"6803:6:30"}]},{"nativeSrc":"6885:49:30","nodeType":"YulVariableDeclaration","src":"6885:49:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6918:9:30","nodeType":"YulIdentifier","src":"6918:9:30"},{"kind":"number","nativeSrc":"6929:3:30","nodeType":"YulLiteral","src":"6929:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6914:3:30","nodeType":"YulIdentifier","src":"6914:3:30"},"nativeSrc":"6914:19:30","nodeType":"YulFunctionCall","src":"6914:19:30"}],"functionName":{"name":"calldataload","nativeSrc":"6901:12:30","nodeType":"YulIdentifier","src":"6901:12:30"},"nativeSrc":"6901:33:30","nodeType":"YulFunctionCall","src":"6901:33:30"},"variables":[{"name":"offset_2","nativeSrc":"6889:8:30","nodeType":"YulTypedName","src":"6889:8:30","type":""}]},{"body":{"nativeSrc":"6963:16:30","nodeType":"YulBlock","src":"6963:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6972:1:30","nodeType":"YulLiteral","src":"6972:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6975:1:30","nodeType":"YulLiteral","src":"6975:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6965:6:30","nodeType":"YulIdentifier","src":"6965:6:30"},"nativeSrc":"6965:12:30","nodeType":"YulFunctionCall","src":"6965:12:30"},"nativeSrc":"6965:12:30","nodeType":"YulExpressionStatement","src":"6965:12:30"}]},"condition":{"arguments":[{"name":"offset_2","nativeSrc":"6949:8:30","nodeType":"YulIdentifier","src":"6949:8:30"},{"name":"_1","nativeSrc":"6959:2:30","nodeType":"YulIdentifier","src":"6959:2:30"}],"functionName":{"name":"gt","nativeSrc":"6946:2:30","nodeType":"YulIdentifier","src":"6946:2:30"},"nativeSrc":"6946:16:30","nodeType":"YulFunctionCall","src":"6946:16:30"},"nativeSrc":"6943:36:30","nodeType":"YulIf","src":"6943:36:30"},{"nativeSrc":"6988:61:30","nodeType":"YulAssignment","src":"6988:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7019:9:30","nodeType":"YulIdentifier","src":"7019:9:30"},{"name":"offset_2","nativeSrc":"7030:8:30","nodeType":"YulIdentifier","src":"7030:8:30"}],"functionName":{"name":"add","nativeSrc":"7015:3:30","nodeType":"YulIdentifier","src":"7015:3:30"},"nativeSrc":"7015:24:30","nodeType":"YulFunctionCall","src":"7015:24:30"},{"name":"dataEnd","nativeSrc":"7041:7:30","nodeType":"YulIdentifier","src":"7041:7:30"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"6998:16:30","nodeType":"YulIdentifier","src":"6998:16:30"},"nativeSrc":"6998:51:30","nodeType":"YulFunctionCall","src":"6998:51:30"},"variableNames":[{"name":"value4","nativeSrc":"6988:6:30","nodeType":"YulIdentifier","src":"6988:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nativeSrc":"6112:943:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6243:9:30","nodeType":"YulTypedName","src":"6243:9:30","type":""},{"name":"dataEnd","nativeSrc":"6254:7:30","nodeType":"YulTypedName","src":"6254:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6266:6:30","nodeType":"YulTypedName","src":"6266:6:30","type":""},{"name":"value1","nativeSrc":"6274:6:30","nodeType":"YulTypedName","src":"6274:6:30","type":""},{"name":"value2","nativeSrc":"6282:6:30","nodeType":"YulTypedName","src":"6282:6:30","type":""},{"name":"value3","nativeSrc":"6290:6:30","nodeType":"YulTypedName","src":"6290:6:30","type":""},{"name":"value4","nativeSrc":"6298:6:30","nodeType":"YulTypedName","src":"6298:6:30","type":""}],"src":"6112:943:30"},{"body":{"nativeSrc":"7147:167:30","nodeType":"YulBlock","src":"7147:167:30","statements":[{"body":{"nativeSrc":"7193:16:30","nodeType":"YulBlock","src":"7193:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7202:1:30","nodeType":"YulLiteral","src":"7202:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"7205:1:30","nodeType":"YulLiteral","src":"7205:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7195:6:30","nodeType":"YulIdentifier","src":"7195:6:30"},"nativeSrc":"7195:12:30","nodeType":"YulFunctionCall","src":"7195:12:30"},"nativeSrc":"7195:12:30","nodeType":"YulExpressionStatement","src":"7195:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7168:7:30","nodeType":"YulIdentifier","src":"7168:7:30"},{"name":"headStart","nativeSrc":"7177:9:30","nodeType":"YulIdentifier","src":"7177:9:30"}],"functionName":{"name":"sub","nativeSrc":"7164:3:30","nodeType":"YulIdentifier","src":"7164:3:30"},"nativeSrc":"7164:23:30","nodeType":"YulFunctionCall","src":"7164:23:30"},{"kind":"number","nativeSrc":"7189:2:30","nodeType":"YulLiteral","src":"7189:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7160:3:30","nodeType":"YulIdentifier","src":"7160:3:30"},"nativeSrc":"7160:32:30","nodeType":"YulFunctionCall","src":"7160:32:30"},"nativeSrc":"7157:52:30","nodeType":"YulIf","src":"7157:52:30"},{"nativeSrc":"7218:33:30","nodeType":"YulAssignment","src":"7218:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"7241:9:30","nodeType":"YulIdentifier","src":"7241:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"7228:12:30","nodeType":"YulIdentifier","src":"7228:12:30"},"nativeSrc":"7228:23:30","nodeType":"YulFunctionCall","src":"7228:23:30"},"variableNames":[{"name":"value0","nativeSrc":"7218:6:30","nodeType":"YulIdentifier","src":"7218:6:30"}]},{"nativeSrc":"7260:48:30","nodeType":"YulAssignment","src":"7260:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7293:9:30","nodeType":"YulIdentifier","src":"7293:9:30"},{"kind":"number","nativeSrc":"7304:2:30","nodeType":"YulLiteral","src":"7304:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7289:3:30","nodeType":"YulIdentifier","src":"7289:3:30"},"nativeSrc":"7289:18:30","nodeType":"YulFunctionCall","src":"7289:18:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7270:18:30","nodeType":"YulIdentifier","src":"7270:18:30"},"nativeSrc":"7270:38:30","nodeType":"YulFunctionCall","src":"7270:38:30"},"variableNames":[{"name":"value1","nativeSrc":"7260:6:30","nodeType":"YulIdentifier","src":"7260:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"7060:254:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7105:9:30","nodeType":"YulTypedName","src":"7105:9:30","type":""},{"name":"dataEnd","nativeSrc":"7116:7:30","nodeType":"YulTypedName","src":"7116:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7128:6:30","nodeType":"YulTypedName","src":"7128:6:30","type":""},{"name":"value1","nativeSrc":"7136:6:30","nodeType":"YulTypedName","src":"7136:6:30","type":""}],"src":"7060:254:30"},{"body":{"nativeSrc":"7456:1009:30","nodeType":"YulBlock","src":"7456:1009:30","statements":[{"body":{"nativeSrc":"7502:16:30","nodeType":"YulBlock","src":"7502:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7511:1:30","nodeType":"YulLiteral","src":"7511:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"7514:1:30","nodeType":"YulLiteral","src":"7514:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7504:6:30","nodeType":"YulIdentifier","src":"7504:6:30"},"nativeSrc":"7504:12:30","nodeType":"YulFunctionCall","src":"7504:12:30"},"nativeSrc":"7504:12:30","nodeType":"YulExpressionStatement","src":"7504:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7477:7:30","nodeType":"YulIdentifier","src":"7477:7:30"},{"name":"headStart","nativeSrc":"7486:9:30","nodeType":"YulIdentifier","src":"7486:9:30"}],"functionName":{"name":"sub","nativeSrc":"7473:3:30","nodeType":"YulIdentifier","src":"7473:3:30"},"nativeSrc":"7473:23:30","nodeType":"YulFunctionCall","src":"7473:23:30"},{"kind":"number","nativeSrc":"7498:2:30","nodeType":"YulLiteral","src":"7498:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7469:3:30","nodeType":"YulIdentifier","src":"7469:3:30"},"nativeSrc":"7469:32:30","nodeType":"YulFunctionCall","src":"7469:32:30"},"nativeSrc":"7466:52:30","nodeType":"YulIf","src":"7466:52:30"},{"nativeSrc":"7527:37:30","nodeType":"YulVariableDeclaration","src":"7527:37:30","value":{"arguments":[{"name":"headStart","nativeSrc":"7554:9:30","nodeType":"YulIdentifier","src":"7554:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"7541:12:30","nodeType":"YulIdentifier","src":"7541:12:30"},"nativeSrc":"7541:23:30","nodeType":"YulFunctionCall","src":"7541:23:30"},"variables":[{"name":"offset","nativeSrc":"7531:6:30","nodeType":"YulTypedName","src":"7531:6:30","type":""}]},{"nativeSrc":"7573:28:30","nodeType":"YulVariableDeclaration","src":"7573:28:30","value":{"kind":"number","nativeSrc":"7583:18:30","nodeType":"YulLiteral","src":"7583:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"7577:2:30","nodeType":"YulTypedName","src":"7577:2:30","type":""}]},{"body":{"nativeSrc":"7628:16:30","nodeType":"YulBlock","src":"7628:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7637:1:30","nodeType":"YulLiteral","src":"7637:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"7640:1:30","nodeType":"YulLiteral","src":"7640:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7630:6:30","nodeType":"YulIdentifier","src":"7630:6:30"},"nativeSrc":"7630:12:30","nodeType":"YulFunctionCall","src":"7630:12:30"},"nativeSrc":"7630:12:30","nodeType":"YulExpressionStatement","src":"7630:12:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7616:6:30","nodeType":"YulIdentifier","src":"7616:6:30"},{"name":"_1","nativeSrc":"7624:2:30","nodeType":"YulIdentifier","src":"7624:2:30"}],"functionName":{"name":"gt","nativeSrc":"7613:2:30","nodeType":"YulIdentifier","src":"7613:2:30"},"nativeSrc":"7613:14:30","nodeType":"YulFunctionCall","src":"7613:14:30"},"nativeSrc":"7610:34:30","nodeType":"YulIf","src":"7610:34:30"},{"nativeSrc":"7653:32:30","nodeType":"YulVariableDeclaration","src":"7653:32:30","value":{"arguments":[{"name":"headStart","nativeSrc":"7667:9:30","nodeType":"YulIdentifier","src":"7667:9:30"},{"name":"offset","nativeSrc":"7678:6:30","nodeType":"YulIdentifier","src":"7678:6:30"}],"functionName":{"name":"add","nativeSrc":"7663:3:30","nodeType":"YulIdentifier","src":"7663:3:30"},"nativeSrc":"7663:22:30","nodeType":"YulFunctionCall","src":"7663:22:30"},"variables":[{"name":"_2","nativeSrc":"7657:2:30","nodeType":"YulTypedName","src":"7657:2:30","type":""}]},{"body":{"nativeSrc":"7733:16:30","nodeType":"YulBlock","src":"7733:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7742:1:30","nodeType":"YulLiteral","src":"7742:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"7745:1:30","nodeType":"YulLiteral","src":"7745:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7735:6:30","nodeType":"YulIdentifier","src":"7735:6:30"},"nativeSrc":"7735:12:30","nodeType":"YulFunctionCall","src":"7735:12:30"},"nativeSrc":"7735:12:30","nodeType":"YulExpressionStatement","src":"7735:12:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"7712:2:30","nodeType":"YulIdentifier","src":"7712:2:30"},{"kind":"number","nativeSrc":"7716:4:30","nodeType":"YulLiteral","src":"7716:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7708:3:30","nodeType":"YulIdentifier","src":"7708:3:30"},"nativeSrc":"7708:13:30","nodeType":"YulFunctionCall","src":"7708:13:30"},{"name":"dataEnd","nativeSrc":"7723:7:30","nodeType":"YulIdentifier","src":"7723:7:30"}],"functionName":{"name":"slt","nativeSrc":"7704:3:30","nodeType":"YulIdentifier","src":"7704:3:30"},"nativeSrc":"7704:27:30","nodeType":"YulFunctionCall","src":"7704:27:30"}],"functionName":{"name":"iszero","nativeSrc":"7697:6:30","nodeType":"YulIdentifier","src":"7697:6:30"},"nativeSrc":"7697:35:30","nodeType":"YulFunctionCall","src":"7697:35:30"},"nativeSrc":"7694:55:30","nodeType":"YulIf","src":"7694:55:30"},{"nativeSrc":"7758:26:30","nodeType":"YulVariableDeclaration","src":"7758:26:30","value":{"arguments":[{"name":"_2","nativeSrc":"7781:2:30","nodeType":"YulIdentifier","src":"7781:2:30"}],"functionName":{"name":"calldataload","nativeSrc":"7768:12:30","nodeType":"YulIdentifier","src":"7768:12:30"},"nativeSrc":"7768:16:30","nodeType":"YulFunctionCall","src":"7768:16:30"},"variables":[{"name":"_3","nativeSrc":"7762:2:30","nodeType":"YulTypedName","src":"7762:2:30","type":""}]},{"nativeSrc":"7793:14:30","nodeType":"YulVariableDeclaration","src":"7793:14:30","value":{"kind":"number","nativeSrc":"7803:4:30","nodeType":"YulLiteral","src":"7803:4:30","type":"","value":"0x20"},"variables":[{"name":"_4","nativeSrc":"7797:2:30","nodeType":"YulTypedName","src":"7797:2:30","type":""}]},{"nativeSrc":"7816:71:30","nodeType":"YulVariableDeclaration","src":"7816:71:30","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"7883:2:30","nodeType":"YulIdentifier","src":"7883:2:30"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"7843:39:30","nodeType":"YulIdentifier","src":"7843:39:30"},"nativeSrc":"7843:43:30","nodeType":"YulFunctionCall","src":"7843:43:30"}],"functionName":{"name":"allocate_memory","nativeSrc":"7827:15:30","nodeType":"YulIdentifier","src":"7827:15:30"},"nativeSrc":"7827:60:30","nodeType":"YulFunctionCall","src":"7827:60:30"},"variables":[{"name":"dst","nativeSrc":"7820:3:30","nodeType":"YulTypedName","src":"7820:3:30","type":""}]},{"nativeSrc":"7896:16:30","nodeType":"YulVariableDeclaration","src":"7896:16:30","value":{"name":"dst","nativeSrc":"7909:3:30","nodeType":"YulIdentifier","src":"7909:3:30"},"variables":[{"name":"dst_1","nativeSrc":"7900:5:30","nodeType":"YulTypedName","src":"7900:5:30","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"7928:3:30","nodeType":"YulIdentifier","src":"7928:3:30"},{"name":"_3","nativeSrc":"7933:2:30","nodeType":"YulIdentifier","src":"7933:2:30"}],"functionName":{"name":"mstore","nativeSrc":"7921:6:30","nodeType":"YulIdentifier","src":"7921:6:30"},"nativeSrc":"7921:15:30","nodeType":"YulFunctionCall","src":"7921:15:30"},"nativeSrc":"7921:15:30","nodeType":"YulExpressionStatement","src":"7921:15:30"},{"nativeSrc":"7945:19:30","nodeType":"YulAssignment","src":"7945:19:30","value":{"arguments":[{"name":"dst","nativeSrc":"7956:3:30","nodeType":"YulIdentifier","src":"7956:3:30"},{"name":"_4","nativeSrc":"7961:2:30","nodeType":"YulIdentifier","src":"7961:2:30"}],"functionName":{"name":"add","nativeSrc":"7952:3:30","nodeType":"YulIdentifier","src":"7952:3:30"},"nativeSrc":"7952:12:30","nodeType":"YulFunctionCall","src":"7952:12:30"},"variableNames":[{"name":"dst","nativeSrc":"7945:3:30","nodeType":"YulIdentifier","src":"7945:3:30"}]},{"nativeSrc":"7973:42:30","nodeType":"YulVariableDeclaration","src":"7973:42:30","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"7995:2:30","nodeType":"YulIdentifier","src":"7995:2:30"},{"arguments":[{"kind":"number","nativeSrc":"8003:1:30","nodeType":"YulLiteral","src":"8003:1:30","type":"","value":"5"},{"name":"_3","nativeSrc":"8006:2:30","nodeType":"YulIdentifier","src":"8006:2:30"}],"functionName":{"name":"shl","nativeSrc":"7999:3:30","nodeType":"YulIdentifier","src":"7999:3:30"},"nativeSrc":"7999:10:30","nodeType":"YulFunctionCall","src":"7999:10:30"}],"functionName":{"name":"add","nativeSrc":"7991:3:30","nodeType":"YulIdentifier","src":"7991:3:30"},"nativeSrc":"7991:19:30","nodeType":"YulFunctionCall","src":"7991:19:30"},{"name":"_4","nativeSrc":"8012:2:30","nodeType":"YulIdentifier","src":"8012:2:30"}],"functionName":{"name":"add","nativeSrc":"7987:3:30","nodeType":"YulIdentifier","src":"7987:3:30"},"nativeSrc":"7987:28:30","nodeType":"YulFunctionCall","src":"7987:28:30"},"variables":[{"name":"srcEnd","nativeSrc":"7977:6:30","nodeType":"YulTypedName","src":"7977:6:30","type":""}]},{"body":{"nativeSrc":"8047:16:30","nodeType":"YulBlock","src":"8047:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8056:1:30","nodeType":"YulLiteral","src":"8056:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"8059:1:30","nodeType":"YulLiteral","src":"8059:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8049:6:30","nodeType":"YulIdentifier","src":"8049:6:30"},"nativeSrc":"8049:12:30","nodeType":"YulFunctionCall","src":"8049:12:30"},"nativeSrc":"8049:12:30","nodeType":"YulExpressionStatement","src":"8049:12:30"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"8030:6:30","nodeType":"YulIdentifier","src":"8030:6:30"},{"name":"dataEnd","nativeSrc":"8038:7:30","nodeType":"YulIdentifier","src":"8038:7:30"}],"functionName":{"name":"gt","nativeSrc":"8027:2:30","nodeType":"YulIdentifier","src":"8027:2:30"},"nativeSrc":"8027:19:30","nodeType":"YulFunctionCall","src":"8027:19:30"},"nativeSrc":"8024:39:30","nodeType":"YulIf","src":"8024:39:30"},{"nativeSrc":"8072:22:30","nodeType":"YulVariableDeclaration","src":"8072:22:30","value":{"arguments":[{"name":"_2","nativeSrc":"8087:2:30","nodeType":"YulIdentifier","src":"8087:2:30"},{"name":"_4","nativeSrc":"8091:2:30","nodeType":"YulIdentifier","src":"8091:2:30"}],"functionName":{"name":"add","nativeSrc":"8083:3:30","nodeType":"YulIdentifier","src":"8083:3:30"},"nativeSrc":"8083:11:30","nodeType":"YulFunctionCall","src":"8083:11:30"},"variables":[{"name":"src","nativeSrc":"8076:3:30","nodeType":"YulTypedName","src":"8076:3:30","type":""}]},{"body":{"nativeSrc":"8159:92:30","nodeType":"YulBlock","src":"8159:92:30","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"8180:3:30","nodeType":"YulIdentifier","src":"8180:3:30"},{"arguments":[{"name":"src","nativeSrc":"8204:3:30","nodeType":"YulIdentifier","src":"8204:3:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"8185:18:30","nodeType":"YulIdentifier","src":"8185:18:30"},"nativeSrc":"8185:23:30","nodeType":"YulFunctionCall","src":"8185:23:30"}],"functionName":{"name":"mstore","nativeSrc":"8173:6:30","nodeType":"YulIdentifier","src":"8173:6:30"},"nativeSrc":"8173:36:30","nodeType":"YulFunctionCall","src":"8173:36:30"},"nativeSrc":"8173:36:30","nodeType":"YulExpressionStatement","src":"8173:36:30"},{"nativeSrc":"8222:19:30","nodeType":"YulAssignment","src":"8222:19:30","value":{"arguments":[{"name":"dst","nativeSrc":"8233:3:30","nodeType":"YulIdentifier","src":"8233:3:30"},{"name":"_4","nativeSrc":"8238:2:30","nodeType":"YulIdentifier","src":"8238:2:30"}],"functionName":{"name":"add","nativeSrc":"8229:3:30","nodeType":"YulIdentifier","src":"8229:3:30"},"nativeSrc":"8229:12:30","nodeType":"YulFunctionCall","src":"8229:12:30"},"variableNames":[{"name":"dst","nativeSrc":"8222:3:30","nodeType":"YulIdentifier","src":"8222:3:30"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"8114:3:30","nodeType":"YulIdentifier","src":"8114:3:30"},{"name":"srcEnd","nativeSrc":"8119:6:30","nodeType":"YulIdentifier","src":"8119:6:30"}],"functionName":{"name":"lt","nativeSrc":"8111:2:30","nodeType":"YulIdentifier","src":"8111:2:30"},"nativeSrc":"8111:15:30","nodeType":"YulFunctionCall","src":"8111:15:30"},"nativeSrc":"8103:148:30","nodeType":"YulForLoop","post":{"nativeSrc":"8127:23:30","nodeType":"YulBlock","src":"8127:23:30","statements":[{"nativeSrc":"8129:19:30","nodeType":"YulAssignment","src":"8129:19:30","value":{"arguments":[{"name":"src","nativeSrc":"8140:3:30","nodeType":"YulIdentifier","src":"8140:3:30"},{"name":"_4","nativeSrc":"8145:2:30","nodeType":"YulIdentifier","src":"8145:2:30"}],"functionName":{"name":"add","nativeSrc":"8136:3:30","nodeType":"YulIdentifier","src":"8136:3:30"},"nativeSrc":"8136:12:30","nodeType":"YulFunctionCall","src":"8136:12:30"},"variableNames":[{"name":"src","nativeSrc":"8129:3:30","nodeType":"YulIdentifier","src":"8129:3:30"}]}]},"pre":{"nativeSrc":"8107:3:30","nodeType":"YulBlock","src":"8107:3:30","statements":[]},"src":"8103:148:30"},{"nativeSrc":"8260:15:30","nodeType":"YulAssignment","src":"8260:15:30","value":{"name":"dst_1","nativeSrc":"8270:5:30","nodeType":"YulIdentifier","src":"8270:5:30"},"variableNames":[{"name":"value0","nativeSrc":"8260:6:30","nodeType":"YulIdentifier","src":"8260:6:30"}]},{"nativeSrc":"8284:48:30","nodeType":"YulVariableDeclaration","src":"8284:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8317:9:30","nodeType":"YulIdentifier","src":"8317:9:30"},{"name":"_4","nativeSrc":"8328:2:30","nodeType":"YulIdentifier","src":"8328:2:30"}],"functionName":{"name":"add","nativeSrc":"8313:3:30","nodeType":"YulIdentifier","src":"8313:3:30"},"nativeSrc":"8313:18:30","nodeType":"YulFunctionCall","src":"8313:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"8300:12:30","nodeType":"YulIdentifier","src":"8300:12:30"},"nativeSrc":"8300:32:30","nodeType":"YulFunctionCall","src":"8300:32:30"},"variables":[{"name":"offset_1","nativeSrc":"8288:8:30","nodeType":"YulTypedName","src":"8288:8:30","type":""}]},{"body":{"nativeSrc":"8361:16:30","nodeType":"YulBlock","src":"8361:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8370:1:30","nodeType":"YulLiteral","src":"8370:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"8373:1:30","nodeType":"YulLiteral","src":"8373:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8363:6:30","nodeType":"YulIdentifier","src":"8363:6:30"},"nativeSrc":"8363:12:30","nodeType":"YulFunctionCall","src":"8363:12:30"},"nativeSrc":"8363:12:30","nodeType":"YulExpressionStatement","src":"8363:12:30"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"8347:8:30","nodeType":"YulIdentifier","src":"8347:8:30"},{"name":"_1","nativeSrc":"8357:2:30","nodeType":"YulIdentifier","src":"8357:2:30"}],"functionName":{"name":"gt","nativeSrc":"8344:2:30","nodeType":"YulIdentifier","src":"8344:2:30"},"nativeSrc":"8344:16:30","nodeType":"YulFunctionCall","src":"8344:16:30"},"nativeSrc":"8341:36:30","nodeType":"YulIf","src":"8341:36:30"},{"nativeSrc":"8386:73:30","nodeType":"YulAssignment","src":"8386:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8429:9:30","nodeType":"YulIdentifier","src":"8429:9:30"},{"name":"offset_1","nativeSrc":"8440:8:30","nodeType":"YulIdentifier","src":"8440:8:30"}],"functionName":{"name":"add","nativeSrc":"8425:3:30","nodeType":"YulIdentifier","src":"8425:3:30"},"nativeSrc":"8425:24:30","nodeType":"YulFunctionCall","src":"8425:24:30"},{"name":"dataEnd","nativeSrc":"8451:7:30","nodeType":"YulIdentifier","src":"8451:7:30"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"8396:28:30","nodeType":"YulIdentifier","src":"8396:28:30"},"nativeSrc":"8396:63:30","nodeType":"YulFunctionCall","src":"8396:63:30"},"variableNames":[{"name":"value1","nativeSrc":"8386:6:30","nodeType":"YulIdentifier","src":"8386:6:30"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7319:1146:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7414:9:30","nodeType":"YulTypedName","src":"7414:9:30","type":""},{"name":"dataEnd","nativeSrc":"7425:7:30","nodeType":"YulTypedName","src":"7425:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7437:6:30","nodeType":"YulTypedName","src":"7437:6:30","type":""},{"name":"value1","nativeSrc":"7445:6:30","nodeType":"YulTypedName","src":"7445:6:30","type":""}],"src":"7319:1146:30"},{"body":{"nativeSrc":"8531:378:30","nodeType":"YulBlock","src":"8531:378:30","statements":[{"nativeSrc":"8541:26:30","nodeType":"YulVariableDeclaration","src":"8541:26:30","value":{"arguments":[{"name":"value","nativeSrc":"8561:5:30","nodeType":"YulIdentifier","src":"8561:5:30"}],"functionName":{"name":"mload","nativeSrc":"8555:5:30","nodeType":"YulIdentifier","src":"8555:5:30"},"nativeSrc":"8555:12:30","nodeType":"YulFunctionCall","src":"8555:12:30"},"variables":[{"name":"length","nativeSrc":"8545:6:30","nodeType":"YulTypedName","src":"8545:6:30","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8583:3:30","nodeType":"YulIdentifier","src":"8583:3:30"},{"name":"length","nativeSrc":"8588:6:30","nodeType":"YulIdentifier","src":"8588:6:30"}],"functionName":{"name":"mstore","nativeSrc":"8576:6:30","nodeType":"YulIdentifier","src":"8576:6:30"},"nativeSrc":"8576:19:30","nodeType":"YulFunctionCall","src":"8576:19:30"},"nativeSrc":"8576:19:30","nodeType":"YulExpressionStatement","src":"8576:19:30"},{"nativeSrc":"8604:14:30","nodeType":"YulVariableDeclaration","src":"8604:14:30","value":{"kind":"number","nativeSrc":"8614:4:30","nodeType":"YulLiteral","src":"8614:4:30","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"8608:2:30","nodeType":"YulTypedName","src":"8608:2:30","type":""}]},{"nativeSrc":"8627:21:30","nodeType":"YulAssignment","src":"8627:21:30","value":{"arguments":[{"name":"pos","nativeSrc":"8638:3:30","nodeType":"YulIdentifier","src":"8638:3:30"},{"kind":"number","nativeSrc":"8643:4:30","nodeType":"YulLiteral","src":"8643:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8634:3:30","nodeType":"YulIdentifier","src":"8634:3:30"},"nativeSrc":"8634:14:30","nodeType":"YulFunctionCall","src":"8634:14:30"},"variableNames":[{"name":"pos","nativeSrc":"8627:3:30","nodeType":"YulIdentifier","src":"8627:3:30"}]},{"nativeSrc":"8657:30:30","nodeType":"YulVariableDeclaration","src":"8657:30:30","value":{"arguments":[{"name":"value","nativeSrc":"8675:5:30","nodeType":"YulIdentifier","src":"8675:5:30"},{"kind":"number","nativeSrc":"8682:4:30","nodeType":"YulLiteral","src":"8682:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8671:3:30","nodeType":"YulIdentifier","src":"8671:3:30"},"nativeSrc":"8671:16:30","nodeType":"YulFunctionCall","src":"8671:16:30"},"variables":[{"name":"srcPtr","nativeSrc":"8661:6:30","nodeType":"YulTypedName","src":"8661:6:30","type":""}]},{"nativeSrc":"8696:10:30","nodeType":"YulVariableDeclaration","src":"8696:10:30","value":{"kind":"number","nativeSrc":"8705:1:30","nodeType":"YulLiteral","src":"8705:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8700:1:30","nodeType":"YulTypedName","src":"8700:1:30","type":""}]},{"body":{"nativeSrc":"8764:120:30","nodeType":"YulBlock","src":"8764:120:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8785:3:30","nodeType":"YulIdentifier","src":"8785:3:30"},{"arguments":[{"name":"srcPtr","nativeSrc":"8796:6:30","nodeType":"YulIdentifier","src":"8796:6:30"}],"functionName":{"name":"mload","nativeSrc":"8790:5:30","nodeType":"YulIdentifier","src":"8790:5:30"},"nativeSrc":"8790:13:30","nodeType":"YulFunctionCall","src":"8790:13:30"}],"functionName":{"name":"mstore","nativeSrc":"8778:6:30","nodeType":"YulIdentifier","src":"8778:6:30"},"nativeSrc":"8778:26:30","nodeType":"YulFunctionCall","src":"8778:26:30"},"nativeSrc":"8778:26:30","nodeType":"YulExpressionStatement","src":"8778:26:30"},{"nativeSrc":"8817:19:30","nodeType":"YulAssignment","src":"8817:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"8828:3:30","nodeType":"YulIdentifier","src":"8828:3:30"},{"name":"_1","nativeSrc":"8833:2:30","nodeType":"YulIdentifier","src":"8833:2:30"}],"functionName":{"name":"add","nativeSrc":"8824:3:30","nodeType":"YulIdentifier","src":"8824:3:30"},"nativeSrc":"8824:12:30","nodeType":"YulFunctionCall","src":"8824:12:30"},"variableNames":[{"name":"pos","nativeSrc":"8817:3:30","nodeType":"YulIdentifier","src":"8817:3:30"}]},{"nativeSrc":"8849:25:30","nodeType":"YulAssignment","src":"8849:25:30","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8863:6:30","nodeType":"YulIdentifier","src":"8863:6:30"},{"name":"_1","nativeSrc":"8871:2:30","nodeType":"YulIdentifier","src":"8871:2:30"}],"functionName":{"name":"add","nativeSrc":"8859:3:30","nodeType":"YulIdentifier","src":"8859:3:30"},"nativeSrc":"8859:15:30","nodeType":"YulFunctionCall","src":"8859:15:30"},"variableNames":[{"name":"srcPtr","nativeSrc":"8849:6:30","nodeType":"YulIdentifier","src":"8849:6:30"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8726:1:30","nodeType":"YulIdentifier","src":"8726:1:30"},{"name":"length","nativeSrc":"8729:6:30","nodeType":"YulIdentifier","src":"8729:6:30"}],"functionName":{"name":"lt","nativeSrc":"8723:2:30","nodeType":"YulIdentifier","src":"8723:2:30"},"nativeSrc":"8723:13:30","nodeType":"YulFunctionCall","src":"8723:13:30"},"nativeSrc":"8715:169:30","nodeType":"YulForLoop","post":{"nativeSrc":"8737:18:30","nodeType":"YulBlock","src":"8737:18:30","statements":[{"nativeSrc":"8739:14:30","nodeType":"YulAssignment","src":"8739:14:30","value":{"arguments":[{"name":"i","nativeSrc":"8748:1:30","nodeType":"YulIdentifier","src":"8748:1:30"},{"kind":"number","nativeSrc":"8751:1:30","nodeType":"YulLiteral","src":"8751:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8744:3:30","nodeType":"YulIdentifier","src":"8744:3:30"},"nativeSrc":"8744:9:30","nodeType":"YulFunctionCall","src":"8744:9:30"},"variableNames":[{"name":"i","nativeSrc":"8739:1:30","nodeType":"YulIdentifier","src":"8739:1:30"}]}]},"pre":{"nativeSrc":"8719:3:30","nodeType":"YulBlock","src":"8719:3:30","statements":[]},"src":"8715:169:30"},{"nativeSrc":"8893:10:30","nodeType":"YulAssignment","src":"8893:10:30","value":{"name":"pos","nativeSrc":"8900:3:30","nodeType":"YulIdentifier","src":"8900:3:30"},"variableNames":[{"name":"end","nativeSrc":"8893:3:30","nodeType":"YulIdentifier","src":"8893:3:30"}]}]},"name":"abi_encode_array_uint256_dyn","nativeSrc":"8470:439:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8508:5:30","nodeType":"YulTypedName","src":"8508:5:30","type":""},{"name":"pos","nativeSrc":"8515:3:30","nodeType":"YulTypedName","src":"8515:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8523:3:30","nodeType":"YulTypedName","src":"8523:3:30","type":""}],"src":"8470:439:30"},{"body":{"nativeSrc":"9065:110:30","nodeType":"YulBlock","src":"9065:110:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9082:9:30","nodeType":"YulIdentifier","src":"9082:9:30"},{"kind":"number","nativeSrc":"9093:2:30","nodeType":"YulLiteral","src":"9093:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9075:6:30","nodeType":"YulIdentifier","src":"9075:6:30"},"nativeSrc":"9075:21:30","nodeType":"YulFunctionCall","src":"9075:21:30"},"nativeSrc":"9075:21:30","nodeType":"YulExpressionStatement","src":"9075:21:30"},{"nativeSrc":"9105:64:30","nodeType":"YulAssignment","src":"9105:64:30","value":{"arguments":[{"name":"value0","nativeSrc":"9142:6:30","nodeType":"YulIdentifier","src":"9142:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"9154:9:30","nodeType":"YulIdentifier","src":"9154:9:30"},{"kind":"number","nativeSrc":"9165:2:30","nodeType":"YulLiteral","src":"9165:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9150:3:30","nodeType":"YulIdentifier","src":"9150:3:30"},"nativeSrc":"9150:18:30","nodeType":"YulFunctionCall","src":"9150:18:30"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"9113:28:30","nodeType":"YulIdentifier","src":"9113:28:30"},"nativeSrc":"9113:56:30","nodeType":"YulFunctionCall","src":"9113:56:30"},"variableNames":[{"name":"tail","nativeSrc":"9105:4:30","nodeType":"YulIdentifier","src":"9105:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"8914:261:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9034:9:30","nodeType":"YulTypedName","src":"9034:9:30","type":""},{"name":"value0","nativeSrc":"9045:6:30","nodeType":"YulTypedName","src":"9045:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9056:4:30","nodeType":"YulTypedName","src":"9056:4:30","type":""}],"src":"8914:261:30"},{"body":{"nativeSrc":"9276:298:30","nodeType":"YulBlock","src":"9276:298:30","statements":[{"body":{"nativeSrc":"9322:16:30","nodeType":"YulBlock","src":"9322:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9331:1:30","nodeType":"YulLiteral","src":"9331:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"9334:1:30","nodeType":"YulLiteral","src":"9334:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9324:6:30","nodeType":"YulIdentifier","src":"9324:6:30"},"nativeSrc":"9324:12:30","nodeType":"YulFunctionCall","src":"9324:12:30"},"nativeSrc":"9324:12:30","nodeType":"YulExpressionStatement","src":"9324:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9297:7:30","nodeType":"YulIdentifier","src":"9297:7:30"},{"name":"headStart","nativeSrc":"9306:9:30","nodeType":"YulIdentifier","src":"9306:9:30"}],"functionName":{"name":"sub","nativeSrc":"9293:3:30","nodeType":"YulIdentifier","src":"9293:3:30"},"nativeSrc":"9293:23:30","nodeType":"YulFunctionCall","src":"9293:23:30"},{"kind":"number","nativeSrc":"9318:2:30","nodeType":"YulLiteral","src":"9318:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9289:3:30","nodeType":"YulIdentifier","src":"9289:3:30"},"nativeSrc":"9289:32:30","nodeType":"YulFunctionCall","src":"9289:32:30"},"nativeSrc":"9286:52:30","nodeType":"YulIf","src":"9286:52:30"},{"nativeSrc":"9347:39:30","nodeType":"YulAssignment","src":"9347:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"9376:9:30","nodeType":"YulIdentifier","src":"9376:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"9357:18:30","nodeType":"YulIdentifier","src":"9357:18:30"},"nativeSrc":"9357:29:30","nodeType":"YulFunctionCall","src":"9357:29:30"},"variableNames":[{"name":"value0","nativeSrc":"9347:6:30","nodeType":"YulIdentifier","src":"9347:6:30"}]},{"nativeSrc":"9395:46:30","nodeType":"YulVariableDeclaration","src":"9395:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9426:9:30","nodeType":"YulIdentifier","src":"9426:9:30"},{"kind":"number","nativeSrc":"9437:2:30","nodeType":"YulLiteral","src":"9437:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9422:3:30","nodeType":"YulIdentifier","src":"9422:3:30"},"nativeSrc":"9422:18:30","nodeType":"YulFunctionCall","src":"9422:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"9409:12:30","nodeType":"YulIdentifier","src":"9409:12:30"},"nativeSrc":"9409:32:30","nodeType":"YulFunctionCall","src":"9409:32:30"},"variables":[{"name":"offset","nativeSrc":"9399:6:30","nodeType":"YulTypedName","src":"9399:6:30","type":""}]},{"body":{"nativeSrc":"9484:16:30","nodeType":"YulBlock","src":"9484:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9493:1:30","nodeType":"YulLiteral","src":"9493:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"9496:1:30","nodeType":"YulLiteral","src":"9496:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9486:6:30","nodeType":"YulIdentifier","src":"9486:6:30"},"nativeSrc":"9486:12:30","nodeType":"YulFunctionCall","src":"9486:12:30"},"nativeSrc":"9486:12:30","nodeType":"YulExpressionStatement","src":"9486:12:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9456:6:30","nodeType":"YulIdentifier","src":"9456:6:30"},{"kind":"number","nativeSrc":"9464:18:30","nodeType":"YulLiteral","src":"9464:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9453:2:30","nodeType":"YulIdentifier","src":"9453:2:30"},"nativeSrc":"9453:30:30","nodeType":"YulFunctionCall","src":"9453:30:30"},"nativeSrc":"9450:50:30","nodeType":"YulIf","src":"9450:50:30"},{"nativeSrc":"9509:59:30","nodeType":"YulAssignment","src":"9509:59:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9540:9:30","nodeType":"YulIdentifier","src":"9540:9:30"},{"name":"offset","nativeSrc":"9551:6:30","nodeType":"YulIdentifier","src":"9551:6:30"}],"functionName":{"name":"add","nativeSrc":"9536:3:30","nodeType":"YulIdentifier","src":"9536:3:30"},"nativeSrc":"9536:22:30","nodeType":"YulFunctionCall","src":"9536:22:30"},{"name":"dataEnd","nativeSrc":"9560:7:30","nodeType":"YulIdentifier","src":"9560:7:30"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"9519:16:30","nodeType":"YulIdentifier","src":"9519:16:30"},"nativeSrc":"9519:49:30","nodeType":"YulFunctionCall","src":"9519:49:30"},"variableNames":[{"name":"value1","nativeSrc":"9509:6:30","nodeType":"YulIdentifier","src":"9509:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"9180:394:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9234:9:30","nodeType":"YulTypedName","src":"9234:9:30","type":""},{"name":"dataEnd","nativeSrc":"9245:7:30","nodeType":"YulTypedName","src":"9245:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9257:6:30","nodeType":"YulTypedName","src":"9257:6:30","type":""},{"name":"value1","nativeSrc":"9265:6:30","nodeType":"YulTypedName","src":"9265:6:30","type":""}],"src":"9180:394:30"},{"body":{"nativeSrc":"9669:321:30","nodeType":"YulBlock","src":"9669:321:30","statements":[{"body":{"nativeSrc":"9715:16:30","nodeType":"YulBlock","src":"9715:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9724:1:30","nodeType":"YulLiteral","src":"9724:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"9727:1:30","nodeType":"YulLiteral","src":"9727:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9717:6:30","nodeType":"YulIdentifier","src":"9717:6:30"},"nativeSrc":"9717:12:30","nodeType":"YulFunctionCall","src":"9717:12:30"},"nativeSrc":"9717:12:30","nodeType":"YulExpressionStatement","src":"9717:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9690:7:30","nodeType":"YulIdentifier","src":"9690:7:30"},{"name":"headStart","nativeSrc":"9699:9:30","nodeType":"YulIdentifier","src":"9699:9:30"}],"functionName":{"name":"sub","nativeSrc":"9686:3:30","nodeType":"YulIdentifier","src":"9686:3:30"},"nativeSrc":"9686:23:30","nodeType":"YulFunctionCall","src":"9686:23:30"},{"kind":"number","nativeSrc":"9711:2:30","nodeType":"YulLiteral","src":"9711:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9682:3:30","nodeType":"YulIdentifier","src":"9682:3:30"},"nativeSrc":"9682:32:30","nodeType":"YulFunctionCall","src":"9682:32:30"},"nativeSrc":"9679:52:30","nodeType":"YulIf","src":"9679:52:30"},{"nativeSrc":"9740:37:30","nodeType":"YulVariableDeclaration","src":"9740:37:30","value":{"arguments":[{"name":"headStart","nativeSrc":"9767:9:30","nodeType":"YulIdentifier","src":"9767:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"9754:12:30","nodeType":"YulIdentifier","src":"9754:12:30"},"nativeSrc":"9754:23:30","nodeType":"YulFunctionCall","src":"9754:23:30"},"variables":[{"name":"offset","nativeSrc":"9744:6:30","nodeType":"YulTypedName","src":"9744:6:30","type":""}]},{"body":{"nativeSrc":"9820:16:30","nodeType":"YulBlock","src":"9820:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9829:1:30","nodeType":"YulLiteral","src":"9829:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"9832:1:30","nodeType":"YulLiteral","src":"9832:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9822:6:30","nodeType":"YulIdentifier","src":"9822:6:30"},"nativeSrc":"9822:12:30","nodeType":"YulFunctionCall","src":"9822:12:30"},"nativeSrc":"9822:12:30","nodeType":"YulExpressionStatement","src":"9822:12:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9792:6:30","nodeType":"YulIdentifier","src":"9792:6:30"},{"kind":"number","nativeSrc":"9800:18:30","nodeType":"YulLiteral","src":"9800:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9789:2:30","nodeType":"YulIdentifier","src":"9789:2:30"},"nativeSrc":"9789:30:30","nodeType":"YulFunctionCall","src":"9789:30:30"},"nativeSrc":"9786:50:30","nodeType":"YulIf","src":"9786:50:30"},{"nativeSrc":"9845:85:30","nodeType":"YulVariableDeclaration","src":"9845:85:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9902:9:30","nodeType":"YulIdentifier","src":"9902:9:30"},{"name":"offset","nativeSrc":"9913:6:30","nodeType":"YulIdentifier","src":"9913:6:30"}],"functionName":{"name":"add","nativeSrc":"9898:3:30","nodeType":"YulIdentifier","src":"9898:3:30"},"nativeSrc":"9898:22:30","nodeType":"YulFunctionCall","src":"9898:22:30"},{"name":"dataEnd","nativeSrc":"9922:7:30","nodeType":"YulIdentifier","src":"9922:7:30"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"9871:26:30","nodeType":"YulIdentifier","src":"9871:26:30"},"nativeSrc":"9871:59:30","nodeType":"YulFunctionCall","src":"9871:59:30"},"variables":[{"name":"value0_1","nativeSrc":"9849:8:30","nodeType":"YulTypedName","src":"9849:8:30","type":""},{"name":"value1_1","nativeSrc":"9859:8:30","nodeType":"YulTypedName","src":"9859:8:30","type":""}]},{"nativeSrc":"9939:18:30","nodeType":"YulAssignment","src":"9939:18:30","value":{"name":"value0_1","nativeSrc":"9949:8:30","nodeType":"YulIdentifier","src":"9949:8:30"},"variableNames":[{"name":"value0","nativeSrc":"9939:6:30","nodeType":"YulIdentifier","src":"9939:6:30"}]},{"nativeSrc":"9966:18:30","nodeType":"YulAssignment","src":"9966:18:30","value":{"name":"value1_1","nativeSrc":"9976:8:30","nodeType":"YulIdentifier","src":"9976:8:30"},"variableNames":[{"name":"value1","nativeSrc":"9966:6:30","nodeType":"YulIdentifier","src":"9966:6:30"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nativeSrc":"9579:411:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9627:9:30","nodeType":"YulTypedName","src":"9627:9:30","type":""},{"name":"dataEnd","nativeSrc":"9638:7:30","nodeType":"YulTypedName","src":"9638:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9650:6:30","nodeType":"YulTypedName","src":"9650:6:30","type":""},{"name":"value1","nativeSrc":"9658:6:30","nodeType":"YulTypedName","src":"9658:6:30","type":""}],"src":"9579:411:30"},{"body":{"nativeSrc":"10152:533:30","nodeType":"YulBlock","src":"10152:533:30","statements":[{"body":{"nativeSrc":"10199:16:30","nodeType":"YulBlock","src":"10199:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10208:1:30","nodeType":"YulLiteral","src":"10208:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"10211:1:30","nodeType":"YulLiteral","src":"10211:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10201:6:30","nodeType":"YulIdentifier","src":"10201:6:30"},"nativeSrc":"10201:12:30","nodeType":"YulFunctionCall","src":"10201:12:30"},"nativeSrc":"10201:12:30","nodeType":"YulExpressionStatement","src":"10201:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10173:7:30","nodeType":"YulIdentifier","src":"10173:7:30"},{"name":"headStart","nativeSrc":"10182:9:30","nodeType":"YulIdentifier","src":"10182:9:30"}],"functionName":{"name":"sub","nativeSrc":"10169:3:30","nodeType":"YulIdentifier","src":"10169:3:30"},"nativeSrc":"10169:23:30","nodeType":"YulFunctionCall","src":"10169:23:30"},{"kind":"number","nativeSrc":"10194:3:30","nodeType":"YulLiteral","src":"10194:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"10165:3:30","nodeType":"YulIdentifier","src":"10165:3:30"},"nativeSrc":"10165:33:30","nodeType":"YulFunctionCall","src":"10165:33:30"},"nativeSrc":"10162:53:30","nodeType":"YulIf","src":"10162:53:30"},{"nativeSrc":"10224:39:30","nodeType":"YulAssignment","src":"10224:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"10253:9:30","nodeType":"YulIdentifier","src":"10253:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"10234:18:30","nodeType":"YulIdentifier","src":"10234:18:30"},"nativeSrc":"10234:29:30","nodeType":"YulFunctionCall","src":"10234:29:30"},"variableNames":[{"name":"value0","nativeSrc":"10224:6:30","nodeType":"YulIdentifier","src":"10224:6:30"}]},{"nativeSrc":"10272:42:30","nodeType":"YulAssignment","src":"10272:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10299:9:30","nodeType":"YulIdentifier","src":"10299:9:30"},{"kind":"number","nativeSrc":"10310:2:30","nodeType":"YulLiteral","src":"10310:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10295:3:30","nodeType":"YulIdentifier","src":"10295:3:30"},"nativeSrc":"10295:18:30","nodeType":"YulFunctionCall","src":"10295:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"10282:12:30","nodeType":"YulIdentifier","src":"10282:12:30"},"nativeSrc":"10282:32:30","nodeType":"YulFunctionCall","src":"10282:32:30"},"variableNames":[{"name":"value1","nativeSrc":"10272:6:30","nodeType":"YulIdentifier","src":"10272:6:30"}]},{"nativeSrc":"10323:42:30","nodeType":"YulAssignment","src":"10323:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10350:9:30","nodeType":"YulIdentifier","src":"10350:9:30"},{"kind":"number","nativeSrc":"10361:2:30","nodeType":"YulLiteral","src":"10361:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10346:3:30","nodeType":"YulIdentifier","src":"10346:3:30"},"nativeSrc":"10346:18:30","nodeType":"YulFunctionCall","src":"10346:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"10333:12:30","nodeType":"YulIdentifier","src":"10333:12:30"},"nativeSrc":"10333:32:30","nodeType":"YulFunctionCall","src":"10333:32:30"},"variableNames":[{"name":"value2","nativeSrc":"10323:6:30","nodeType":"YulIdentifier","src":"10323:6:30"}]},{"nativeSrc":"10374:42:30","nodeType":"YulAssignment","src":"10374:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10401:9:30","nodeType":"YulIdentifier","src":"10401:9:30"},{"kind":"number","nativeSrc":"10412:2:30","nodeType":"YulLiteral","src":"10412:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10397:3:30","nodeType":"YulIdentifier","src":"10397:3:30"},"nativeSrc":"10397:18:30","nodeType":"YulFunctionCall","src":"10397:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"10384:12:30","nodeType":"YulIdentifier","src":"10384:12:30"},"nativeSrc":"10384:32:30","nodeType":"YulFunctionCall","src":"10384:32:30"},"variableNames":[{"name":"value3","nativeSrc":"10374:6:30","nodeType":"YulIdentifier","src":"10374:6:30"}]},{"nativeSrc":"10425:47:30","nodeType":"YulVariableDeclaration","src":"10425:47:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10456:9:30","nodeType":"YulIdentifier","src":"10456:9:30"},{"kind":"number","nativeSrc":"10467:3:30","nodeType":"YulLiteral","src":"10467:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10452:3:30","nodeType":"YulIdentifier","src":"10452:3:30"},"nativeSrc":"10452:19:30","nodeType":"YulFunctionCall","src":"10452:19:30"}],"functionName":{"name":"calldataload","nativeSrc":"10439:12:30","nodeType":"YulIdentifier","src":"10439:12:30"},"nativeSrc":"10439:33:30","nodeType":"YulFunctionCall","src":"10439:33:30"},"variables":[{"name":"offset","nativeSrc":"10429:6:30","nodeType":"YulTypedName","src":"10429:6:30","type":""}]},{"body":{"nativeSrc":"10515:16:30","nodeType":"YulBlock","src":"10515:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10524:1:30","nodeType":"YulLiteral","src":"10524:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"10527:1:30","nodeType":"YulLiteral","src":"10527:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10517:6:30","nodeType":"YulIdentifier","src":"10517:6:30"},"nativeSrc":"10517:12:30","nodeType":"YulFunctionCall","src":"10517:12:30"},"nativeSrc":"10517:12:30","nodeType":"YulExpressionStatement","src":"10517:12:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10487:6:30","nodeType":"YulIdentifier","src":"10487:6:30"},{"kind":"number","nativeSrc":"10495:18:30","nodeType":"YulLiteral","src":"10495:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10484:2:30","nodeType":"YulIdentifier","src":"10484:2:30"},"nativeSrc":"10484:30:30","nodeType":"YulFunctionCall","src":"10484:30:30"},"nativeSrc":"10481:50:30","nodeType":"YulIf","src":"10481:50:30"},{"nativeSrc":"10540:85:30","nodeType":"YulVariableDeclaration","src":"10540:85:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10597:9:30","nodeType":"YulIdentifier","src":"10597:9:30"},{"name":"offset","nativeSrc":"10608:6:30","nodeType":"YulIdentifier","src":"10608:6:30"}],"functionName":{"name":"add","nativeSrc":"10593:3:30","nodeType":"YulIdentifier","src":"10593:3:30"},"nativeSrc":"10593:22:30","nodeType":"YulFunctionCall","src":"10593:22:30"},{"name":"dataEnd","nativeSrc":"10617:7:30","nodeType":"YulIdentifier","src":"10617:7:30"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"10566:26:30","nodeType":"YulIdentifier","src":"10566:26:30"},"nativeSrc":"10566:59:30","nodeType":"YulFunctionCall","src":"10566:59:30"},"variables":[{"name":"value4_1","nativeSrc":"10544:8:30","nodeType":"YulTypedName","src":"10544:8:30","type":""},{"name":"value5_1","nativeSrc":"10554:8:30","nodeType":"YulTypedName","src":"10554:8:30","type":""}]},{"nativeSrc":"10634:18:30","nodeType":"YulAssignment","src":"10634:18:30","value":{"name":"value4_1","nativeSrc":"10644:8:30","nodeType":"YulIdentifier","src":"10644:8:30"},"variableNames":[{"name":"value4","nativeSrc":"10634:6:30","nodeType":"YulIdentifier","src":"10634:6:30"}]},{"nativeSrc":"10661:18:30","nodeType":"YulAssignment","src":"10661:18:30","value":{"name":"value5_1","nativeSrc":"10671:8:30","nodeType":"YulIdentifier","src":"10671:8:30"},"variableNames":[{"name":"value5","nativeSrc":"10661:6:30","nodeType":"YulIdentifier","src":"10661:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes32t_bytes_calldata_ptr","nativeSrc":"9995:690:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10078:9:30","nodeType":"YulTypedName","src":"10078:9:30","type":""},{"name":"dataEnd","nativeSrc":"10089:7:30","nodeType":"YulTypedName","src":"10089:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10101:6:30","nodeType":"YulTypedName","src":"10101:6:30","type":""},{"name":"value1","nativeSrc":"10109:6:30","nodeType":"YulTypedName","src":"10109:6:30","type":""},{"name":"value2","nativeSrc":"10117:6:30","nodeType":"YulTypedName","src":"10117:6:30","type":""},{"name":"value3","nativeSrc":"10125:6:30","nodeType":"YulTypedName","src":"10125:6:30","type":""},{"name":"value4","nativeSrc":"10133:6:30","nodeType":"YulTypedName","src":"10133:6:30","type":""},{"name":"value5","nativeSrc":"10141:6:30","nodeType":"YulTypedName","src":"10141:6:30","type":""}],"src":"9995:690:30"},{"body":{"nativeSrc":"10774:170:30","nodeType":"YulBlock","src":"10774:170:30","statements":[{"body":{"nativeSrc":"10820:16:30","nodeType":"YulBlock","src":"10820:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10829:1:30","nodeType":"YulLiteral","src":"10829:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"10832:1:30","nodeType":"YulLiteral","src":"10832:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10822:6:30","nodeType":"YulIdentifier","src":"10822:6:30"},"nativeSrc":"10822:12:30","nodeType":"YulFunctionCall","src":"10822:12:30"},"nativeSrc":"10822:12:30","nodeType":"YulExpressionStatement","src":"10822:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10795:7:30","nodeType":"YulIdentifier","src":"10795:7:30"},{"name":"headStart","nativeSrc":"10804:9:30","nodeType":"YulIdentifier","src":"10804:9:30"}],"functionName":{"name":"sub","nativeSrc":"10791:3:30","nodeType":"YulIdentifier","src":"10791:3:30"},"nativeSrc":"10791:23:30","nodeType":"YulFunctionCall","src":"10791:23:30"},{"kind":"number","nativeSrc":"10816:2:30","nodeType":"YulLiteral","src":"10816:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10787:3:30","nodeType":"YulIdentifier","src":"10787:3:30"},"nativeSrc":"10787:32:30","nodeType":"YulFunctionCall","src":"10787:32:30"},"nativeSrc":"10784:52:30","nodeType":"YulIf","src":"10784:52:30"},{"nativeSrc":"10845:39:30","nodeType":"YulAssignment","src":"10845:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"10874:9:30","nodeType":"YulIdentifier","src":"10874:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"10855:18:30","nodeType":"YulIdentifier","src":"10855:18:30"},"nativeSrc":"10855:29:30","nodeType":"YulFunctionCall","src":"10855:29:30"},"variableNames":[{"name":"value0","nativeSrc":"10845:6:30","nodeType":"YulIdentifier","src":"10845:6:30"}]},{"nativeSrc":"10893:45:30","nodeType":"YulAssignment","src":"10893:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10923:9:30","nodeType":"YulIdentifier","src":"10923:9:30"},{"kind":"number","nativeSrc":"10934:2:30","nodeType":"YulLiteral","src":"10934:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10919:3:30","nodeType":"YulIdentifier","src":"10919:3:30"},"nativeSrc":"10919:18:30","nodeType":"YulFunctionCall","src":"10919:18:30"}],"functionName":{"name":"abi_decode_bool","nativeSrc":"10903:15:30","nodeType":"YulIdentifier","src":"10903:15:30"},"nativeSrc":"10903:35:30","nodeType":"YulFunctionCall","src":"10903:35:30"},"variableNames":[{"name":"value1","nativeSrc":"10893:6:30","nodeType":"YulIdentifier","src":"10893:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"10690:254:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10732:9:30","nodeType":"YulTypedName","src":"10732:9:30","type":""},{"name":"dataEnd","nativeSrc":"10743:7:30","nodeType":"YulTypedName","src":"10743:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10755:6:30","nodeType":"YulTypedName","src":"10755:6:30","type":""},{"name":"value1","nativeSrc":"10763:6:30","nodeType":"YulTypedName","src":"10763:6:30","type":""}],"src":"10690:254:30"},{"body":{"nativeSrc":"11117:722:30","nodeType":"YulBlock","src":"11117:722:30","statements":[{"body":{"nativeSrc":"11164:16:30","nodeType":"YulBlock","src":"11164:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11173:1:30","nodeType":"YulLiteral","src":"11173:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"11176:1:30","nodeType":"YulLiteral","src":"11176:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11166:6:30","nodeType":"YulIdentifier","src":"11166:6:30"},"nativeSrc":"11166:12:30","nodeType":"YulFunctionCall","src":"11166:12:30"},"nativeSrc":"11166:12:30","nodeType":"YulExpressionStatement","src":"11166:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11138:7:30","nodeType":"YulIdentifier","src":"11138:7:30"},{"name":"headStart","nativeSrc":"11147:9:30","nodeType":"YulIdentifier","src":"11147:9:30"}],"functionName":{"name":"sub","nativeSrc":"11134:3:30","nodeType":"YulIdentifier","src":"11134:3:30"},"nativeSrc":"11134:23:30","nodeType":"YulFunctionCall","src":"11134:23:30"},{"kind":"number","nativeSrc":"11159:3:30","nodeType":"YulLiteral","src":"11159:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"11130:3:30","nodeType":"YulIdentifier","src":"11130:3:30"},"nativeSrc":"11130:33:30","nodeType":"YulFunctionCall","src":"11130:33:30"},"nativeSrc":"11127:53:30","nodeType":"YulIf","src":"11127:53:30"},{"nativeSrc":"11189:37:30","nodeType":"YulVariableDeclaration","src":"11189:37:30","value":{"arguments":[{"name":"headStart","nativeSrc":"11216:9:30","nodeType":"YulIdentifier","src":"11216:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"11203:12:30","nodeType":"YulIdentifier","src":"11203:12:30"},"nativeSrc":"11203:23:30","nodeType":"YulFunctionCall","src":"11203:23:30"},"variables":[{"name":"offset","nativeSrc":"11193:6:30","nodeType":"YulTypedName","src":"11193:6:30","type":""}]},{"nativeSrc":"11235:28:30","nodeType":"YulVariableDeclaration","src":"11235:28:30","value":{"kind":"number","nativeSrc":"11245:18:30","nodeType":"YulLiteral","src":"11245:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"11239:2:30","nodeType":"YulTypedName","src":"11239:2:30","type":""}]},{"body":{"nativeSrc":"11290:16:30","nodeType":"YulBlock","src":"11290:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11299:1:30","nodeType":"YulLiteral","src":"11299:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"11302:1:30","nodeType":"YulLiteral","src":"11302:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11292:6:30","nodeType":"YulIdentifier","src":"11292:6:30"},"nativeSrc":"11292:12:30","nodeType":"YulFunctionCall","src":"11292:12:30"},"nativeSrc":"11292:12:30","nodeType":"YulExpressionStatement","src":"11292:12:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11278:6:30","nodeType":"YulIdentifier","src":"11278:6:30"},{"name":"_1","nativeSrc":"11286:2:30","nodeType":"YulIdentifier","src":"11286:2:30"}],"functionName":{"name":"gt","nativeSrc":"11275:2:30","nodeType":"YulIdentifier","src":"11275:2:30"},"nativeSrc":"11275:14:30","nodeType":"YulFunctionCall","src":"11275:14:30"},"nativeSrc":"11272:34:30","nodeType":"YulIf","src":"11272:34:30"},{"nativeSrc":"11315:59:30","nodeType":"YulAssignment","src":"11315:59:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11346:9:30","nodeType":"YulIdentifier","src":"11346:9:30"},{"name":"offset","nativeSrc":"11357:6:30","nodeType":"YulIdentifier","src":"11357:6:30"}],"functionName":{"name":"add","nativeSrc":"11342:3:30","nodeType":"YulIdentifier","src":"11342:3:30"},"nativeSrc":"11342:22:30","nodeType":"YulFunctionCall","src":"11342:22:30"},{"name":"dataEnd","nativeSrc":"11366:7:30","nodeType":"YulIdentifier","src":"11366:7:30"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"11325:16:30","nodeType":"YulIdentifier","src":"11325:16:30"},"nativeSrc":"11325:49:30","nodeType":"YulFunctionCall","src":"11325:49:30"},"variableNames":[{"name":"value0","nativeSrc":"11315:6:30","nodeType":"YulIdentifier","src":"11315:6:30"}]},{"nativeSrc":"11383:48:30","nodeType":"YulVariableDeclaration","src":"11383:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11416:9:30","nodeType":"YulIdentifier","src":"11416:9:30"},{"kind":"number","nativeSrc":"11427:2:30","nodeType":"YulLiteral","src":"11427:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11412:3:30","nodeType":"YulIdentifier","src":"11412:3:30"},"nativeSrc":"11412:18:30","nodeType":"YulFunctionCall","src":"11412:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"11399:12:30","nodeType":"YulIdentifier","src":"11399:12:30"},"nativeSrc":"11399:32:30","nodeType":"YulFunctionCall","src":"11399:32:30"},"variables":[{"name":"offset_1","nativeSrc":"11387:8:30","nodeType":"YulTypedName","src":"11387:8:30","type":""}]},{"body":{"nativeSrc":"11460:16:30","nodeType":"YulBlock","src":"11460:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11469:1:30","nodeType":"YulLiteral","src":"11469:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"11472:1:30","nodeType":"YulLiteral","src":"11472:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11462:6:30","nodeType":"YulIdentifier","src":"11462:6:30"},"nativeSrc":"11462:12:30","nodeType":"YulFunctionCall","src":"11462:12:30"},"nativeSrc":"11462:12:30","nodeType":"YulExpressionStatement","src":"11462:12:30"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"11446:8:30","nodeType":"YulIdentifier","src":"11446:8:30"},{"name":"_1","nativeSrc":"11456:2:30","nodeType":"YulIdentifier","src":"11456:2:30"}],"functionName":{"name":"gt","nativeSrc":"11443:2:30","nodeType":"YulIdentifier","src":"11443:2:30"},"nativeSrc":"11443:16:30","nodeType":"YulFunctionCall","src":"11443:16:30"},"nativeSrc":"11440:36:30","nodeType":"YulIf","src":"11440:36:30"},{"nativeSrc":"11485:61:30","nodeType":"YulAssignment","src":"11485:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11516:9:30","nodeType":"YulIdentifier","src":"11516:9:30"},{"name":"offset_1","nativeSrc":"11527:8:30","nodeType":"YulIdentifier","src":"11527:8:30"}],"functionName":{"name":"add","nativeSrc":"11512:3:30","nodeType":"YulIdentifier","src":"11512:3:30"},"nativeSrc":"11512:24:30","nodeType":"YulFunctionCall","src":"11512:24:30"},{"name":"dataEnd","nativeSrc":"11538:7:30","nodeType":"YulIdentifier","src":"11538:7:30"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"11495:16:30","nodeType":"YulIdentifier","src":"11495:16:30"},"nativeSrc":"11495:51:30","nodeType":"YulFunctionCall","src":"11495:51:30"},"variableNames":[{"name":"value1","nativeSrc":"11485:6:30","nodeType":"YulIdentifier","src":"11485:6:30"}]},{"nativeSrc":"11555:48:30","nodeType":"YulVariableDeclaration","src":"11555:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11588:9:30","nodeType":"YulIdentifier","src":"11588:9:30"},{"kind":"number","nativeSrc":"11599:2:30","nodeType":"YulLiteral","src":"11599:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11584:3:30","nodeType":"YulIdentifier","src":"11584:3:30"},"nativeSrc":"11584:18:30","nodeType":"YulFunctionCall","src":"11584:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"11571:12:30","nodeType":"YulIdentifier","src":"11571:12:30"},"nativeSrc":"11571:32:30","nodeType":"YulFunctionCall","src":"11571:32:30"},"variables":[{"name":"offset_2","nativeSrc":"11559:8:30","nodeType":"YulTypedName","src":"11559:8:30","type":""}]},{"body":{"nativeSrc":"11632:16:30","nodeType":"YulBlock","src":"11632:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11641:1:30","nodeType":"YulLiteral","src":"11641:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"11644:1:30","nodeType":"YulLiteral","src":"11644:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11634:6:30","nodeType":"YulIdentifier","src":"11634:6:30"},"nativeSrc":"11634:12:30","nodeType":"YulFunctionCall","src":"11634:12:30"},"nativeSrc":"11634:12:30","nodeType":"YulExpressionStatement","src":"11634:12:30"}]},"condition":{"arguments":[{"name":"offset_2","nativeSrc":"11618:8:30","nodeType":"YulIdentifier","src":"11618:8:30"},{"name":"_1","nativeSrc":"11628:2:30","nodeType":"YulIdentifier","src":"11628:2:30"}],"functionName":{"name":"gt","nativeSrc":"11615:2:30","nodeType":"YulIdentifier","src":"11615:2:30"},"nativeSrc":"11615:16:30","nodeType":"YulFunctionCall","src":"11615:16:30"},"nativeSrc":"11612:36:30","nodeType":"YulIf","src":"11612:36:30"},{"nativeSrc":"11657:61:30","nodeType":"YulAssignment","src":"11657:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11688:9:30","nodeType":"YulIdentifier","src":"11688:9:30"},{"name":"offset_2","nativeSrc":"11699:8:30","nodeType":"YulIdentifier","src":"11699:8:30"}],"functionName":{"name":"add","nativeSrc":"11684:3:30","nodeType":"YulIdentifier","src":"11684:3:30"},"nativeSrc":"11684:24:30","nodeType":"YulFunctionCall","src":"11684:24:30"},{"name":"dataEnd","nativeSrc":"11710:7:30","nodeType":"YulIdentifier","src":"11710:7:30"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"11667:16:30","nodeType":"YulIdentifier","src":"11667:16:30"},"nativeSrc":"11667:51:30","nodeType":"YulFunctionCall","src":"11667:51:30"},"variableNames":[{"name":"value2","nativeSrc":"11657:6:30","nodeType":"YulIdentifier","src":"11657:6:30"}]},{"nativeSrc":"11727:48:30","nodeType":"YulAssignment","src":"11727:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11760:9:30","nodeType":"YulIdentifier","src":"11760:9:30"},{"kind":"number","nativeSrc":"11771:2:30","nodeType":"YulLiteral","src":"11771:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11756:3:30","nodeType":"YulIdentifier","src":"11756:3:30"},"nativeSrc":"11756:18:30","nodeType":"YulFunctionCall","src":"11756:18:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"11737:18:30","nodeType":"YulIdentifier","src":"11737:18:30"},"nativeSrc":"11737:38:30","nodeType":"YulFunctionCall","src":"11737:38:30"},"variableNames":[{"name":"value3","nativeSrc":"11727:6:30","nodeType":"YulIdentifier","src":"11727:6:30"}]},{"nativeSrc":"11784:49:30","nodeType":"YulAssignment","src":"11784:49:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11817:9:30","nodeType":"YulIdentifier","src":"11817:9:30"},{"kind":"number","nativeSrc":"11828:3:30","nodeType":"YulLiteral","src":"11828:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11813:3:30","nodeType":"YulIdentifier","src":"11813:3:30"},"nativeSrc":"11813:19:30","nodeType":"YulFunctionCall","src":"11813:19:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"11794:18:30","nodeType":"YulIdentifier","src":"11794:18:30"},"nativeSrc":"11794:39:30","nodeType":"YulFunctionCall","src":"11794:39:30"},"variableNames":[{"name":"value4","nativeSrc":"11784:6:30","nodeType":"YulIdentifier","src":"11784:6:30"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_addresst_address","nativeSrc":"10949:890:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11051:9:30","nodeType":"YulTypedName","src":"11051:9:30","type":""},{"name":"dataEnd","nativeSrc":"11062:7:30","nodeType":"YulTypedName","src":"11062:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11074:6:30","nodeType":"YulTypedName","src":"11074:6:30","type":""},{"name":"value1","nativeSrc":"11082:6:30","nodeType":"YulTypedName","src":"11082:6:30","type":""},{"name":"value2","nativeSrc":"11090:6:30","nodeType":"YulTypedName","src":"11090:6:30","type":""},{"name":"value3","nativeSrc":"11098:6:30","nodeType":"YulTypedName","src":"11098:6:30","type":""},{"name":"value4","nativeSrc":"11106:6:30","nodeType":"YulTypedName","src":"11106:6:30","type":""}],"src":"10949:890:30"},{"body":{"nativeSrc":"11931:173:30","nodeType":"YulBlock","src":"11931:173:30","statements":[{"body":{"nativeSrc":"11977:16:30","nodeType":"YulBlock","src":"11977:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11986:1:30","nodeType":"YulLiteral","src":"11986:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"11989:1:30","nodeType":"YulLiteral","src":"11989:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11979:6:30","nodeType":"YulIdentifier","src":"11979:6:30"},"nativeSrc":"11979:12:30","nodeType":"YulFunctionCall","src":"11979:12:30"},"nativeSrc":"11979:12:30","nodeType":"YulExpressionStatement","src":"11979:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11952:7:30","nodeType":"YulIdentifier","src":"11952:7:30"},{"name":"headStart","nativeSrc":"11961:9:30","nodeType":"YulIdentifier","src":"11961:9:30"}],"functionName":{"name":"sub","nativeSrc":"11948:3:30","nodeType":"YulIdentifier","src":"11948:3:30"},"nativeSrc":"11948:23:30","nodeType":"YulFunctionCall","src":"11948:23:30"},{"kind":"number","nativeSrc":"11973:2:30","nodeType":"YulLiteral","src":"11973:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11944:3:30","nodeType":"YulIdentifier","src":"11944:3:30"},"nativeSrc":"11944:32:30","nodeType":"YulFunctionCall","src":"11944:32:30"},"nativeSrc":"11941:52:30","nodeType":"YulIf","src":"11941:52:30"},{"nativeSrc":"12002:39:30","nodeType":"YulAssignment","src":"12002:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"12031:9:30","nodeType":"YulIdentifier","src":"12031:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"12012:18:30","nodeType":"YulIdentifier","src":"12012:18:30"},"nativeSrc":"12012:29:30","nodeType":"YulFunctionCall","src":"12012:29:30"},"variableNames":[{"name":"value0","nativeSrc":"12002:6:30","nodeType":"YulIdentifier","src":"12002:6:30"}]},{"nativeSrc":"12050:48:30","nodeType":"YulAssignment","src":"12050:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12083:9:30","nodeType":"YulIdentifier","src":"12083:9:30"},{"kind":"number","nativeSrc":"12094:2:30","nodeType":"YulLiteral","src":"12094:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12079:3:30","nodeType":"YulIdentifier","src":"12079:3:30"},"nativeSrc":"12079:18:30","nodeType":"YulFunctionCall","src":"12079:18:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"12060:18:30","nodeType":"YulIdentifier","src":"12060:18:30"},"nativeSrc":"12060:38:30","nodeType":"YulFunctionCall","src":"12060:38:30"},"variableNames":[{"name":"value1","nativeSrc":"12050:6:30","nodeType":"YulIdentifier","src":"12050:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"11844:260:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11889:9:30","nodeType":"YulTypedName","src":"11889:9:30","type":""},{"name":"dataEnd","nativeSrc":"11900:7:30","nodeType":"YulTypedName","src":"11900:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11912:6:30","nodeType":"YulTypedName","src":"11912:6:30","type":""},{"name":"value1","nativeSrc":"11920:6:30","nodeType":"YulTypedName","src":"11920:6:30","type":""}],"src":"11844:260:30"},{"body":{"nativeSrc":"12256:459:30","nodeType":"YulBlock","src":"12256:459:30","statements":[{"body":{"nativeSrc":"12303:16:30","nodeType":"YulBlock","src":"12303:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12312:1:30","nodeType":"YulLiteral","src":"12312:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"12315:1:30","nodeType":"YulLiteral","src":"12315:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12305:6:30","nodeType":"YulIdentifier","src":"12305:6:30"},"nativeSrc":"12305:12:30","nodeType":"YulFunctionCall","src":"12305:12:30"},"nativeSrc":"12305:12:30","nodeType":"YulExpressionStatement","src":"12305:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12277:7:30","nodeType":"YulIdentifier","src":"12277:7:30"},{"name":"headStart","nativeSrc":"12286:9:30","nodeType":"YulIdentifier","src":"12286:9:30"}],"functionName":{"name":"sub","nativeSrc":"12273:3:30","nodeType":"YulIdentifier","src":"12273:3:30"},"nativeSrc":"12273:23:30","nodeType":"YulFunctionCall","src":"12273:23:30"},{"kind":"number","nativeSrc":"12298:3:30","nodeType":"YulLiteral","src":"12298:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"12269:3:30","nodeType":"YulIdentifier","src":"12269:3:30"},"nativeSrc":"12269:33:30","nodeType":"YulFunctionCall","src":"12269:33:30"},"nativeSrc":"12266:53:30","nodeType":"YulIf","src":"12266:53:30"},{"nativeSrc":"12328:39:30","nodeType":"YulAssignment","src":"12328:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"12357:9:30","nodeType":"YulIdentifier","src":"12357:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"12338:18:30","nodeType":"YulIdentifier","src":"12338:18:30"},"nativeSrc":"12338:29:30","nodeType":"YulFunctionCall","src":"12338:29:30"},"variableNames":[{"name":"value0","nativeSrc":"12328:6:30","nodeType":"YulIdentifier","src":"12328:6:30"}]},{"nativeSrc":"12376:48:30","nodeType":"YulAssignment","src":"12376:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12409:9:30","nodeType":"YulIdentifier","src":"12409:9:30"},{"kind":"number","nativeSrc":"12420:2:30","nodeType":"YulLiteral","src":"12420:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12405:3:30","nodeType":"YulIdentifier","src":"12405:3:30"},"nativeSrc":"12405:18:30","nodeType":"YulFunctionCall","src":"12405:18:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"12386:18:30","nodeType":"YulIdentifier","src":"12386:18:30"},"nativeSrc":"12386:38:30","nodeType":"YulFunctionCall","src":"12386:38:30"},"variableNames":[{"name":"value1","nativeSrc":"12376:6:30","nodeType":"YulIdentifier","src":"12376:6:30"}]},{"nativeSrc":"12433:42:30","nodeType":"YulAssignment","src":"12433:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12460:9:30","nodeType":"YulIdentifier","src":"12460:9:30"},{"kind":"number","nativeSrc":"12471:2:30","nodeType":"YulLiteral","src":"12471:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12456:3:30","nodeType":"YulIdentifier","src":"12456:3:30"},"nativeSrc":"12456:18:30","nodeType":"YulFunctionCall","src":"12456:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"12443:12:30","nodeType":"YulIdentifier","src":"12443:12:30"},"nativeSrc":"12443:32:30","nodeType":"YulFunctionCall","src":"12443:32:30"},"variableNames":[{"name":"value2","nativeSrc":"12433:6:30","nodeType":"YulIdentifier","src":"12433:6:30"}]},{"nativeSrc":"12484:42:30","nodeType":"YulAssignment","src":"12484:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12511:9:30","nodeType":"YulIdentifier","src":"12511:9:30"},{"kind":"number","nativeSrc":"12522:2:30","nodeType":"YulLiteral","src":"12522:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12507:3:30","nodeType":"YulIdentifier","src":"12507:3:30"},"nativeSrc":"12507:18:30","nodeType":"YulFunctionCall","src":"12507:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"12494:12:30","nodeType":"YulIdentifier","src":"12494:12:30"},"nativeSrc":"12494:32:30","nodeType":"YulFunctionCall","src":"12494:32:30"},"variableNames":[{"name":"value3","nativeSrc":"12484:6:30","nodeType":"YulIdentifier","src":"12484:6:30"}]},{"nativeSrc":"12535:47:30","nodeType":"YulVariableDeclaration","src":"12535:47:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12566:9:30","nodeType":"YulIdentifier","src":"12566:9:30"},{"kind":"number","nativeSrc":"12577:3:30","nodeType":"YulLiteral","src":"12577:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12562:3:30","nodeType":"YulIdentifier","src":"12562:3:30"},"nativeSrc":"12562:19:30","nodeType":"YulFunctionCall","src":"12562:19:30"}],"functionName":{"name":"calldataload","nativeSrc":"12549:12:30","nodeType":"YulIdentifier","src":"12549:12:30"},"nativeSrc":"12549:33:30","nodeType":"YulFunctionCall","src":"12549:33:30"},"variables":[{"name":"offset","nativeSrc":"12539:6:30","nodeType":"YulTypedName","src":"12539:6:30","type":""}]},{"body":{"nativeSrc":"12625:16:30","nodeType":"YulBlock","src":"12625:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12634:1:30","nodeType":"YulLiteral","src":"12634:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"12637:1:30","nodeType":"YulLiteral","src":"12637:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12627:6:30","nodeType":"YulIdentifier","src":"12627:6:30"},"nativeSrc":"12627:12:30","nodeType":"YulFunctionCall","src":"12627:12:30"},"nativeSrc":"12627:12:30","nodeType":"YulExpressionStatement","src":"12627:12:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12597:6:30","nodeType":"YulIdentifier","src":"12597:6:30"},{"kind":"number","nativeSrc":"12605:18:30","nodeType":"YulLiteral","src":"12605:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12594:2:30","nodeType":"YulIdentifier","src":"12594:2:30"},"nativeSrc":"12594:30:30","nodeType":"YulFunctionCall","src":"12594:30:30"},"nativeSrc":"12591:50:30","nodeType":"YulIf","src":"12591:50:30"},{"nativeSrc":"12650:59:30","nodeType":"YulAssignment","src":"12650:59:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12681:9:30","nodeType":"YulIdentifier","src":"12681:9:30"},{"name":"offset","nativeSrc":"12692:6:30","nodeType":"YulIdentifier","src":"12692:6:30"}],"functionName":{"name":"add","nativeSrc":"12677:3:30","nodeType":"YulIdentifier","src":"12677:3:30"},"nativeSrc":"12677:22:30","nodeType":"YulFunctionCall","src":"12677:22:30"},{"name":"dataEnd","nativeSrc":"12701:7:30","nodeType":"YulIdentifier","src":"12701:7:30"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"12660:16:30","nodeType":"YulIdentifier","src":"12660:16:30"},"nativeSrc":"12660:49:30","nodeType":"YulFunctionCall","src":"12660:49:30"},"variableNames":[{"name":"value4","nativeSrc":"12650:6:30","nodeType":"YulIdentifier","src":"12650:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nativeSrc":"12109:606:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12190:9:30","nodeType":"YulTypedName","src":"12190:9:30","type":""},{"name":"dataEnd","nativeSrc":"12201:7:30","nodeType":"YulTypedName","src":"12201:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12213:6:30","nodeType":"YulTypedName","src":"12213:6:30","type":""},{"name":"value1","nativeSrc":"12221:6:30","nodeType":"YulTypedName","src":"12221:6:30","type":""},{"name":"value2","nativeSrc":"12229:6:30","nodeType":"YulTypedName","src":"12229:6:30","type":""},{"name":"value3","nativeSrc":"12237:6:30","nodeType":"YulTypedName","src":"12237:6:30","type":""},{"name":"value4","nativeSrc":"12245:6:30","nodeType":"YulTypedName","src":"12245:6:30","type":""}],"src":"12109:606:30"},{"body":{"nativeSrc":"12775:325:30","nodeType":"YulBlock","src":"12775:325:30","statements":[{"nativeSrc":"12785:22:30","nodeType":"YulAssignment","src":"12785:22:30","value":{"arguments":[{"kind":"number","nativeSrc":"12799:1:30","nodeType":"YulLiteral","src":"12799:1:30","type":"","value":"1"},{"name":"data","nativeSrc":"12802:4:30","nodeType":"YulIdentifier","src":"12802:4:30"}],"functionName":{"name":"shr","nativeSrc":"12795:3:30","nodeType":"YulIdentifier","src":"12795:3:30"},"nativeSrc":"12795:12:30","nodeType":"YulFunctionCall","src":"12795:12:30"},"variableNames":[{"name":"length","nativeSrc":"12785:6:30","nodeType":"YulIdentifier","src":"12785:6:30"}]},{"nativeSrc":"12816:38:30","nodeType":"YulVariableDeclaration","src":"12816:38:30","value":{"arguments":[{"name":"data","nativeSrc":"12846:4:30","nodeType":"YulIdentifier","src":"12846:4:30"},{"kind":"number","nativeSrc":"12852:1:30","nodeType":"YulLiteral","src":"12852:1:30","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"12842:3:30","nodeType":"YulIdentifier","src":"12842:3:30"},"nativeSrc":"12842:12:30","nodeType":"YulFunctionCall","src":"12842:12:30"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"12820:18:30","nodeType":"YulTypedName","src":"12820:18:30","type":""}]},{"body":{"nativeSrc":"12893:31:30","nodeType":"YulBlock","src":"12893:31:30","statements":[{"nativeSrc":"12895:27:30","nodeType":"YulAssignment","src":"12895:27:30","value":{"arguments":[{"name":"length","nativeSrc":"12909:6:30","nodeType":"YulIdentifier","src":"12909:6:30"},{"kind":"number","nativeSrc":"12917:4:30","nodeType":"YulLiteral","src":"12917:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12905:3:30","nodeType":"YulIdentifier","src":"12905:3:30"},"nativeSrc":"12905:17:30","nodeType":"YulFunctionCall","src":"12905:17:30"},"variableNames":[{"name":"length","nativeSrc":"12895:6:30","nodeType":"YulIdentifier","src":"12895:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12873:18:30","nodeType":"YulIdentifier","src":"12873:18:30"}],"functionName":{"name":"iszero","nativeSrc":"12866:6:30","nodeType":"YulIdentifier","src":"12866:6:30"},"nativeSrc":"12866:26:30","nodeType":"YulFunctionCall","src":"12866:26:30"},"nativeSrc":"12863:61:30","nodeType":"YulIf","src":"12863:61:30"},{"body":{"nativeSrc":"12983:111:30","nodeType":"YulBlock","src":"12983:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13004:1:30","nodeType":"YulLiteral","src":"13004:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"13011:3:30","nodeType":"YulLiteral","src":"13011:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"13016:10:30","nodeType":"YulLiteral","src":"13016:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"13007:3:30","nodeType":"YulIdentifier","src":"13007:3:30"},"nativeSrc":"13007:20:30","nodeType":"YulFunctionCall","src":"13007:20:30"}],"functionName":{"name":"mstore","nativeSrc":"12997:6:30","nodeType":"YulIdentifier","src":"12997:6:30"},"nativeSrc":"12997:31:30","nodeType":"YulFunctionCall","src":"12997:31:30"},"nativeSrc":"12997:31:30","nodeType":"YulExpressionStatement","src":"12997:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13048:1:30","nodeType":"YulLiteral","src":"13048:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"13051:4:30","nodeType":"YulLiteral","src":"13051:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"13041:6:30","nodeType":"YulIdentifier","src":"13041:6:30"},"nativeSrc":"13041:15:30","nodeType":"YulFunctionCall","src":"13041:15:30"},"nativeSrc":"13041:15:30","nodeType":"YulExpressionStatement","src":"13041:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13076:1:30","nodeType":"YulLiteral","src":"13076:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"13079:4:30","nodeType":"YulLiteral","src":"13079:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13069:6:30","nodeType":"YulIdentifier","src":"13069:6:30"},"nativeSrc":"13069:15:30","nodeType":"YulFunctionCall","src":"13069:15:30"},"nativeSrc":"13069:15:30","nodeType":"YulExpressionStatement","src":"13069:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12939:18:30","nodeType":"YulIdentifier","src":"12939:18:30"},{"arguments":[{"name":"length","nativeSrc":"12962:6:30","nodeType":"YulIdentifier","src":"12962:6:30"},{"kind":"number","nativeSrc":"12970:2:30","nodeType":"YulLiteral","src":"12970:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12959:2:30","nodeType":"YulIdentifier","src":"12959:2:30"},"nativeSrc":"12959:14:30","nodeType":"YulFunctionCall","src":"12959:14:30"}],"functionName":{"name":"eq","nativeSrc":"12936:2:30","nodeType":"YulIdentifier","src":"12936:2:30"},"nativeSrc":"12936:38:30","nodeType":"YulFunctionCall","src":"12936:38:30"},"nativeSrc":"12933:161:30","nodeType":"YulIf","src":"12933:161:30"}]},"name":"extract_byte_array_length","nativeSrc":"12720:380:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12755:4:30","nodeType":"YulTypedName","src":"12755:4:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12764:6:30","nodeType":"YulTypedName","src":"12764:6:30","type":""}],"src":"12720:380:30"},{"body":{"nativeSrc":"13161:65:30","nodeType":"YulBlock","src":"13161:65:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13178:1:30","nodeType":"YulLiteral","src":"13178:1:30","type":"","value":"0"},{"name":"ptr","nativeSrc":"13181:3:30","nodeType":"YulIdentifier","src":"13181:3:30"}],"functionName":{"name":"mstore","nativeSrc":"13171:6:30","nodeType":"YulIdentifier","src":"13171:6:30"},"nativeSrc":"13171:14:30","nodeType":"YulFunctionCall","src":"13171:14:30"},"nativeSrc":"13171:14:30","nodeType":"YulExpressionStatement","src":"13171:14:30"},{"nativeSrc":"13194:26:30","nodeType":"YulAssignment","src":"13194:26:30","value":{"arguments":[{"kind":"number","nativeSrc":"13212:1:30","nodeType":"YulLiteral","src":"13212:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"13215:4:30","nodeType":"YulLiteral","src":"13215:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"13202:9:30","nodeType":"YulIdentifier","src":"13202:9:30"},"nativeSrc":"13202:18:30","nodeType":"YulFunctionCall","src":"13202:18:30"},"variableNames":[{"name":"data","nativeSrc":"13194:4:30","nodeType":"YulIdentifier","src":"13194:4:30"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"13105:121:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"13144:3:30","nodeType":"YulTypedName","src":"13144:3:30","type":""}],"returnVariables":[{"name":"data","nativeSrc":"13152:4:30","nodeType":"YulTypedName","src":"13152:4:30","type":""}],"src":"13105:121:30"},{"body":{"nativeSrc":"13312:462:30","nodeType":"YulBlock","src":"13312:462:30","statements":[{"body":{"nativeSrc":"13345:423:30","nodeType":"YulBlock","src":"13345:423:30","statements":[{"nativeSrc":"13359:11:30","nodeType":"YulVariableDeclaration","src":"13359:11:30","value":{"kind":"number","nativeSrc":"13369:1:30","nodeType":"YulLiteral","src":"13369:1:30","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"13363:2:30","nodeType":"YulTypedName","src":"13363:2:30","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13390:1:30","nodeType":"YulLiteral","src":"13390:1:30","type":"","value":"0"},{"name":"array","nativeSrc":"13393:5:30","nodeType":"YulIdentifier","src":"13393:5:30"}],"functionName":{"name":"mstore","nativeSrc":"13383:6:30","nodeType":"YulIdentifier","src":"13383:6:30"},"nativeSrc":"13383:16:30","nodeType":"YulFunctionCall","src":"13383:16:30"},"nativeSrc":"13383:16:30","nodeType":"YulExpressionStatement","src":"13383:16:30"},{"nativeSrc":"13412:30:30","nodeType":"YulVariableDeclaration","src":"13412:30:30","value":{"arguments":[{"kind":"number","nativeSrc":"13434:1:30","nodeType":"YulLiteral","src":"13434:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"13437:4:30","nodeType":"YulLiteral","src":"13437:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"13424:9:30","nodeType":"YulIdentifier","src":"13424:9:30"},"nativeSrc":"13424:18:30","nodeType":"YulFunctionCall","src":"13424:18:30"},"variables":[{"name":"data","nativeSrc":"13416:4:30","nodeType":"YulTypedName","src":"13416:4:30","type":""}]},{"nativeSrc":"13455:57:30","nodeType":"YulVariableDeclaration","src":"13455:57:30","value":{"arguments":[{"name":"data","nativeSrc":"13478:4:30","nodeType":"YulIdentifier","src":"13478:4:30"},{"arguments":[{"kind":"number","nativeSrc":"13488:1:30","nodeType":"YulLiteral","src":"13488:1:30","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"13495:10:30","nodeType":"YulIdentifier","src":"13495:10:30"},{"kind":"number","nativeSrc":"13507:2:30","nodeType":"YulLiteral","src":"13507:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"13491:3:30","nodeType":"YulIdentifier","src":"13491:3:30"},"nativeSrc":"13491:19:30","nodeType":"YulFunctionCall","src":"13491:19:30"}],"functionName":{"name":"shr","nativeSrc":"13484:3:30","nodeType":"YulIdentifier","src":"13484:3:30"},"nativeSrc":"13484:27:30","nodeType":"YulFunctionCall","src":"13484:27:30"}],"functionName":{"name":"add","nativeSrc":"13474:3:30","nodeType":"YulIdentifier","src":"13474:3:30"},"nativeSrc":"13474:38:30","nodeType":"YulFunctionCall","src":"13474:38:30"},"variables":[{"name":"deleteStart","nativeSrc":"13459:11:30","nodeType":"YulTypedName","src":"13459:11:30","type":""}]},{"body":{"nativeSrc":"13549:23:30","nodeType":"YulBlock","src":"13549:23:30","statements":[{"nativeSrc":"13551:19:30","nodeType":"YulAssignment","src":"13551:19:30","value":{"name":"data","nativeSrc":"13566:4:30","nodeType":"YulIdentifier","src":"13566:4:30"},"variableNames":[{"name":"deleteStart","nativeSrc":"13551:11:30","nodeType":"YulIdentifier","src":"13551:11:30"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"13531:10:30","nodeType":"YulIdentifier","src":"13531:10:30"},{"kind":"number","nativeSrc":"13543:4:30","nodeType":"YulLiteral","src":"13543:4:30","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"13528:2:30","nodeType":"YulIdentifier","src":"13528:2:30"},"nativeSrc":"13528:20:30","nodeType":"YulFunctionCall","src":"13528:20:30"},"nativeSrc":"13525:47:30","nodeType":"YulIf","src":"13525:47:30"},{"nativeSrc":"13585:41:30","nodeType":"YulVariableDeclaration","src":"13585:41:30","value":{"arguments":[{"name":"data","nativeSrc":"13599:4:30","nodeType":"YulIdentifier","src":"13599:4:30"},{"arguments":[{"kind":"number","nativeSrc":"13609:1:30","nodeType":"YulLiteral","src":"13609:1:30","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"13616:3:30","nodeType":"YulIdentifier","src":"13616:3:30"},{"kind":"number","nativeSrc":"13621:2:30","nodeType":"YulLiteral","src":"13621:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"13612:3:30","nodeType":"YulIdentifier","src":"13612:3:30"},"nativeSrc":"13612:12:30","nodeType":"YulFunctionCall","src":"13612:12:30"}],"functionName":{"name":"shr","nativeSrc":"13605:3:30","nodeType":"YulIdentifier","src":"13605:3:30"},"nativeSrc":"13605:20:30","nodeType":"YulFunctionCall","src":"13605:20:30"}],"functionName":{"name":"add","nativeSrc":"13595:3:30","nodeType":"YulIdentifier","src":"13595:3:30"},"nativeSrc":"13595:31:30","nodeType":"YulFunctionCall","src":"13595:31:30"},"variables":[{"name":"_2","nativeSrc":"13589:2:30","nodeType":"YulTypedName","src":"13589:2:30","type":""}]},{"nativeSrc":"13639:24:30","nodeType":"YulVariableDeclaration","src":"13639:24:30","value":{"name":"deleteStart","nativeSrc":"13652:11:30","nodeType":"YulIdentifier","src":"13652:11:30"},"variables":[{"name":"start","nativeSrc":"13643:5:30","nodeType":"YulTypedName","src":"13643:5:30","type":""}]},{"body":{"nativeSrc":"13737:21:30","nodeType":"YulBlock","src":"13737:21:30","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"13746:5:30","nodeType":"YulIdentifier","src":"13746:5:30"},{"name":"_1","nativeSrc":"13753:2:30","nodeType":"YulIdentifier","src":"13753:2:30"}],"functionName":{"name":"sstore","nativeSrc":"13739:6:30","nodeType":"YulIdentifier","src":"13739:6:30"},"nativeSrc":"13739:17:30","nodeType":"YulFunctionCall","src":"13739:17:30"},"nativeSrc":"13739:17:30","nodeType":"YulExpressionStatement","src":"13739:17:30"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"13687:5:30","nodeType":"YulIdentifier","src":"13687:5:30"},{"name":"_2","nativeSrc":"13694:2:30","nodeType":"YulIdentifier","src":"13694:2:30"}],"functionName":{"name":"lt","nativeSrc":"13684:2:30","nodeType":"YulIdentifier","src":"13684:2:30"},"nativeSrc":"13684:13:30","nodeType":"YulFunctionCall","src":"13684:13:30"},"nativeSrc":"13676:82:30","nodeType":"YulForLoop","post":{"nativeSrc":"13698:26:30","nodeType":"YulBlock","src":"13698:26:30","statements":[{"nativeSrc":"13700:22:30","nodeType":"YulAssignment","src":"13700:22:30","value":{"arguments":[{"name":"start","nativeSrc":"13713:5:30","nodeType":"YulIdentifier","src":"13713:5:30"},{"kind":"number","nativeSrc":"13720:1:30","nodeType":"YulLiteral","src":"13720:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"13709:3:30","nodeType":"YulIdentifier","src":"13709:3:30"},"nativeSrc":"13709:13:30","nodeType":"YulFunctionCall","src":"13709:13:30"},"variableNames":[{"name":"start","nativeSrc":"13700:5:30","nodeType":"YulIdentifier","src":"13700:5:30"}]}]},"pre":{"nativeSrc":"13680:3:30","nodeType":"YulBlock","src":"13680:3:30","statements":[]},"src":"13676:82:30"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"13328:3:30","nodeType":"YulIdentifier","src":"13328:3:30"},{"kind":"number","nativeSrc":"13333:2:30","nodeType":"YulLiteral","src":"13333:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"13325:2:30","nodeType":"YulIdentifier","src":"13325:2:30"},"nativeSrc":"13325:11:30","nodeType":"YulFunctionCall","src":"13325:11:30"},"nativeSrc":"13322:446:30","nodeType":"YulIf","src":"13322:446:30"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"13231:543:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"13284:5:30","nodeType":"YulTypedName","src":"13284:5:30","type":""},{"name":"len","nativeSrc":"13291:3:30","nodeType":"YulTypedName","src":"13291:3:30","type":""},{"name":"startIndex","nativeSrc":"13296:10:30","nodeType":"YulTypedName","src":"13296:10:30","type":""}],"src":"13231:543:30"},{"body":{"nativeSrc":"13864:81:30","nodeType":"YulBlock","src":"13864:81:30","statements":[{"nativeSrc":"13874:65:30","nodeType":"YulAssignment","src":"13874:65:30","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"13889:4:30","nodeType":"YulIdentifier","src":"13889:4:30"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13907:1:30","nodeType":"YulLiteral","src":"13907:1:30","type":"","value":"3"},{"name":"len","nativeSrc":"13910:3:30","nodeType":"YulIdentifier","src":"13910:3:30"}],"functionName":{"name":"shl","nativeSrc":"13903:3:30","nodeType":"YulIdentifier","src":"13903:3:30"},"nativeSrc":"13903:11:30","nodeType":"YulFunctionCall","src":"13903:11:30"},{"arguments":[{"kind":"number","nativeSrc":"13920:1:30","nodeType":"YulLiteral","src":"13920:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"13916:3:30","nodeType":"YulIdentifier","src":"13916:3:30"},"nativeSrc":"13916:6:30","nodeType":"YulFunctionCall","src":"13916:6:30"}],"functionName":{"name":"shr","nativeSrc":"13899:3:30","nodeType":"YulIdentifier","src":"13899:3:30"},"nativeSrc":"13899:24:30","nodeType":"YulFunctionCall","src":"13899:24:30"}],"functionName":{"name":"not","nativeSrc":"13895:3:30","nodeType":"YulIdentifier","src":"13895:3:30"},"nativeSrc":"13895:29:30","nodeType":"YulFunctionCall","src":"13895:29:30"}],"functionName":{"name":"and","nativeSrc":"13885:3:30","nodeType":"YulIdentifier","src":"13885:3:30"},"nativeSrc":"13885:40:30","nodeType":"YulFunctionCall","src":"13885:40:30"},{"arguments":[{"kind":"number","nativeSrc":"13931:1:30","nodeType":"YulLiteral","src":"13931:1:30","type":"","value":"1"},{"name":"len","nativeSrc":"13934:3:30","nodeType":"YulIdentifier","src":"13934:3:30"}],"functionName":{"name":"shl","nativeSrc":"13927:3:30","nodeType":"YulIdentifier","src":"13927:3:30"},"nativeSrc":"13927:11:30","nodeType":"YulFunctionCall","src":"13927:11:30"}],"functionName":{"name":"or","nativeSrc":"13882:2:30","nodeType":"YulIdentifier","src":"13882:2:30"},"nativeSrc":"13882:57:30","nodeType":"YulFunctionCall","src":"13882:57:30"},"variableNames":[{"name":"used","nativeSrc":"13874:4:30","nodeType":"YulIdentifier","src":"13874:4:30"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"13779:166:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"13841:4:30","nodeType":"YulTypedName","src":"13841:4:30","type":""},{"name":"len","nativeSrc":"13847:3:30","nodeType":"YulTypedName","src":"13847:3:30","type":""}],"returnVariables":[{"name":"used","nativeSrc":"13855:4:30","nodeType":"YulTypedName","src":"13855:4:30","type":""}],"src":"13779:166:30"},{"body":{"nativeSrc":"14046:1249:30","nodeType":"YulBlock","src":"14046:1249:30","statements":[{"nativeSrc":"14056:24:30","nodeType":"YulVariableDeclaration","src":"14056:24:30","value":{"arguments":[{"name":"src","nativeSrc":"14076:3:30","nodeType":"YulIdentifier","src":"14076:3:30"}],"functionName":{"name":"mload","nativeSrc":"14070:5:30","nodeType":"YulIdentifier","src":"14070:5:30"},"nativeSrc":"14070:10:30","nodeType":"YulFunctionCall","src":"14070:10:30"},"variables":[{"name":"newLen","nativeSrc":"14060:6:30","nodeType":"YulTypedName","src":"14060:6:30","type":""}]},{"body":{"nativeSrc":"14123:22:30","nodeType":"YulBlock","src":"14123:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"14125:16:30","nodeType":"YulIdentifier","src":"14125:16:30"},"nativeSrc":"14125:18:30","nodeType":"YulFunctionCall","src":"14125:18:30"},"nativeSrc":"14125:18:30","nodeType":"YulExpressionStatement","src":"14125:18:30"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"14095:6:30","nodeType":"YulIdentifier","src":"14095:6:30"},{"kind":"number","nativeSrc":"14103:18:30","nodeType":"YulLiteral","src":"14103:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14092:2:30","nodeType":"YulIdentifier","src":"14092:2:30"},"nativeSrc":"14092:30:30","nodeType":"YulFunctionCall","src":"14092:30:30"},"nativeSrc":"14089:56:30","nodeType":"YulIf","src":"14089:56:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"14198:4:30","nodeType":"YulIdentifier","src":"14198:4:30"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"14236:4:30","nodeType":"YulIdentifier","src":"14236:4:30"}],"functionName":{"name":"sload","nativeSrc":"14230:5:30","nodeType":"YulIdentifier","src":"14230:5:30"},"nativeSrc":"14230:11:30","nodeType":"YulFunctionCall","src":"14230:11:30"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"14204:25:30","nodeType":"YulIdentifier","src":"14204:25:30"},"nativeSrc":"14204:38:30","nodeType":"YulFunctionCall","src":"14204:38:30"},{"name":"newLen","nativeSrc":"14244:6:30","nodeType":"YulIdentifier","src":"14244:6:30"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"14154:43:30","nodeType":"YulIdentifier","src":"14154:43:30"},"nativeSrc":"14154:97:30","nodeType":"YulFunctionCall","src":"14154:97:30"},"nativeSrc":"14154:97:30","nodeType":"YulExpressionStatement","src":"14154:97:30"},{"nativeSrc":"14260:18:30","nodeType":"YulVariableDeclaration","src":"14260:18:30","value":{"kind":"number","nativeSrc":"14277:1:30","nodeType":"YulLiteral","src":"14277:1:30","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"14264:9:30","nodeType":"YulTypedName","src":"14264:9:30","type":""}]},{"nativeSrc":"14287:23:30","nodeType":"YulVariableDeclaration","src":"14287:23:30","value":{"kind":"number","nativeSrc":"14306:4:30","nodeType":"YulLiteral","src":"14306:4:30","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"14291:11:30","nodeType":"YulTypedName","src":"14291:11:30","type":""}]},{"nativeSrc":"14319:17:30","nodeType":"YulAssignment","src":"14319:17:30","value":{"kind":"number","nativeSrc":"14332:4:30","nodeType":"YulLiteral","src":"14332:4:30","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"14319:9:30","nodeType":"YulIdentifier","src":"14319:9:30"}]},{"cases":[{"body":{"nativeSrc":"14382:656:30","nodeType":"YulBlock","src":"14382:656:30","statements":[{"nativeSrc":"14396:35:30","nodeType":"YulVariableDeclaration","src":"14396:35:30","value":{"arguments":[{"name":"newLen","nativeSrc":"14415:6:30","nodeType":"YulIdentifier","src":"14415:6:30"},{"arguments":[{"kind":"number","nativeSrc":"14427:2:30","nodeType":"YulLiteral","src":"14427:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"14423:3:30","nodeType":"YulIdentifier","src":"14423:3:30"},"nativeSrc":"14423:7:30","nodeType":"YulFunctionCall","src":"14423:7:30"}],"functionName":{"name":"and","nativeSrc":"14411:3:30","nodeType":"YulIdentifier","src":"14411:3:30"},"nativeSrc":"14411:20:30","nodeType":"YulFunctionCall","src":"14411:20:30"},"variables":[{"name":"loopEnd","nativeSrc":"14400:7:30","nodeType":"YulTypedName","src":"14400:7:30","type":""}]},{"nativeSrc":"14444:49:30","nodeType":"YulVariableDeclaration","src":"14444:49:30","value":{"arguments":[{"name":"slot","nativeSrc":"14488:4:30","nodeType":"YulIdentifier","src":"14488:4:30"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"14458:29:30","nodeType":"YulIdentifier","src":"14458:29:30"},"nativeSrc":"14458:35:30","nodeType":"YulFunctionCall","src":"14458:35:30"},"variables":[{"name":"dstPtr","nativeSrc":"14448:6:30","nodeType":"YulTypedName","src":"14448:6:30","type":""}]},{"nativeSrc":"14506:10:30","nodeType":"YulVariableDeclaration","src":"14506:10:30","value":{"kind":"number","nativeSrc":"14515:1:30","nodeType":"YulLiteral","src":"14515:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"14510:1:30","nodeType":"YulTypedName","src":"14510:1:30","type":""}]},{"body":{"nativeSrc":"14593:172:30","nodeType":"YulBlock","src":"14593:172:30","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"14618:6:30","nodeType":"YulIdentifier","src":"14618:6:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"14636:3:30","nodeType":"YulIdentifier","src":"14636:3:30"},{"name":"srcOffset","nativeSrc":"14641:9:30","nodeType":"YulIdentifier","src":"14641:9:30"}],"functionName":{"name":"add","nativeSrc":"14632:3:30","nodeType":"YulIdentifier","src":"14632:3:30"},"nativeSrc":"14632:19:30","nodeType":"YulFunctionCall","src":"14632:19:30"}],"functionName":{"name":"mload","nativeSrc":"14626:5:30","nodeType":"YulIdentifier","src":"14626:5:30"},"nativeSrc":"14626:26:30","nodeType":"YulFunctionCall","src":"14626:26:30"}],"functionName":{"name":"sstore","nativeSrc":"14611:6:30","nodeType":"YulIdentifier","src":"14611:6:30"},"nativeSrc":"14611:42:30","nodeType":"YulFunctionCall","src":"14611:42:30"},"nativeSrc":"14611:42:30","nodeType":"YulExpressionStatement","src":"14611:42:30"},{"nativeSrc":"14670:24:30","nodeType":"YulAssignment","src":"14670:24:30","value":{"arguments":[{"name":"dstPtr","nativeSrc":"14684:6:30","nodeType":"YulIdentifier","src":"14684:6:30"},{"kind":"number","nativeSrc":"14692:1:30","nodeType":"YulLiteral","src":"14692:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"14680:3:30","nodeType":"YulIdentifier","src":"14680:3:30"},"nativeSrc":"14680:14:30","nodeType":"YulFunctionCall","src":"14680:14:30"},"variableNames":[{"name":"dstPtr","nativeSrc":"14670:6:30","nodeType":"YulIdentifier","src":"14670:6:30"}]},{"nativeSrc":"14711:40:30","nodeType":"YulAssignment","src":"14711:40:30","value":{"arguments":[{"name":"srcOffset","nativeSrc":"14728:9:30","nodeType":"YulIdentifier","src":"14728:9:30"},{"name":"srcOffset_1","nativeSrc":"14739:11:30","nodeType":"YulIdentifier","src":"14739:11:30"}],"functionName":{"name":"add","nativeSrc":"14724:3:30","nodeType":"YulIdentifier","src":"14724:3:30"},"nativeSrc":"14724:27:30","nodeType":"YulFunctionCall","src":"14724:27:30"},"variableNames":[{"name":"srcOffset","nativeSrc":"14711:9:30","nodeType":"YulIdentifier","src":"14711:9:30"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"14540:1:30","nodeType":"YulIdentifier","src":"14540:1:30"},{"name":"loopEnd","nativeSrc":"14543:7:30","nodeType":"YulIdentifier","src":"14543:7:30"}],"functionName":{"name":"lt","nativeSrc":"14537:2:30","nodeType":"YulIdentifier","src":"14537:2:30"},"nativeSrc":"14537:14:30","nodeType":"YulFunctionCall","src":"14537:14:30"},"nativeSrc":"14529:236:30","nodeType":"YulForLoop","post":{"nativeSrc":"14552:28:30","nodeType":"YulBlock","src":"14552:28:30","statements":[{"nativeSrc":"14554:24:30","nodeType":"YulAssignment","src":"14554:24:30","value":{"arguments":[{"name":"i","nativeSrc":"14563:1:30","nodeType":"YulIdentifier","src":"14563:1:30"},{"name":"srcOffset_1","nativeSrc":"14566:11:30","nodeType":"YulIdentifier","src":"14566:11:30"}],"functionName":{"name":"add","nativeSrc":"14559:3:30","nodeType":"YulIdentifier","src":"14559:3:30"},"nativeSrc":"14559:19:30","nodeType":"YulFunctionCall","src":"14559:19:30"},"variableNames":[{"name":"i","nativeSrc":"14554:1:30","nodeType":"YulIdentifier","src":"14554:1:30"}]}]},"pre":{"nativeSrc":"14533:3:30","nodeType":"YulBlock","src":"14533:3:30","statements":[]},"src":"14529:236:30"},{"body":{"nativeSrc":"14813:166:30","nodeType":"YulBlock","src":"14813:166:30","statements":[{"nativeSrc":"14831:43:30","nodeType":"YulVariableDeclaration","src":"14831:43:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"14858:3:30","nodeType":"YulIdentifier","src":"14858:3:30"},{"name":"srcOffset","nativeSrc":"14863:9:30","nodeType":"YulIdentifier","src":"14863:9:30"}],"functionName":{"name":"add","nativeSrc":"14854:3:30","nodeType":"YulIdentifier","src":"14854:3:30"},"nativeSrc":"14854:19:30","nodeType":"YulFunctionCall","src":"14854:19:30"}],"functionName":{"name":"mload","nativeSrc":"14848:5:30","nodeType":"YulIdentifier","src":"14848:5:30"},"nativeSrc":"14848:26:30","nodeType":"YulFunctionCall","src":"14848:26:30"},"variables":[{"name":"lastValue","nativeSrc":"14835:9:30","nodeType":"YulTypedName","src":"14835:9:30","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"14898:6:30","nodeType":"YulIdentifier","src":"14898:6:30"},{"arguments":[{"name":"lastValue","nativeSrc":"14910:9:30","nodeType":"YulIdentifier","src":"14910:9:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14937:1:30","nodeType":"YulLiteral","src":"14937:1:30","type":"","value":"3"},{"name":"newLen","nativeSrc":"14940:6:30","nodeType":"YulIdentifier","src":"14940:6:30"}],"functionName":{"name":"shl","nativeSrc":"14933:3:30","nodeType":"YulIdentifier","src":"14933:3:30"},"nativeSrc":"14933:14:30","nodeType":"YulFunctionCall","src":"14933:14:30"},{"kind":"number","nativeSrc":"14949:3:30","nodeType":"YulLiteral","src":"14949:3:30","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"14929:3:30","nodeType":"YulIdentifier","src":"14929:3:30"},"nativeSrc":"14929:24:30","nodeType":"YulFunctionCall","src":"14929:24:30"},{"arguments":[{"kind":"number","nativeSrc":"14959:1:30","nodeType":"YulLiteral","src":"14959:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"14955:3:30","nodeType":"YulIdentifier","src":"14955:3:30"},"nativeSrc":"14955:6:30","nodeType":"YulFunctionCall","src":"14955:6:30"}],"functionName":{"name":"shr","nativeSrc":"14925:3:30","nodeType":"YulIdentifier","src":"14925:3:30"},"nativeSrc":"14925:37:30","nodeType":"YulFunctionCall","src":"14925:37:30"}],"functionName":{"name":"not","nativeSrc":"14921:3:30","nodeType":"YulIdentifier","src":"14921:3:30"},"nativeSrc":"14921:42:30","nodeType":"YulFunctionCall","src":"14921:42:30"}],"functionName":{"name":"and","nativeSrc":"14906:3:30","nodeType":"YulIdentifier","src":"14906:3:30"},"nativeSrc":"14906:58:30","nodeType":"YulFunctionCall","src":"14906:58:30"}],"functionName":{"name":"sstore","nativeSrc":"14891:6:30","nodeType":"YulIdentifier","src":"14891:6:30"},"nativeSrc":"14891:74:30","nodeType":"YulFunctionCall","src":"14891:74:30"},"nativeSrc":"14891:74:30","nodeType":"YulExpressionStatement","src":"14891:74:30"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"14784:7:30","nodeType":"YulIdentifier","src":"14784:7:30"},{"name":"newLen","nativeSrc":"14793:6:30","nodeType":"YulIdentifier","src":"14793:6:30"}],"functionName":{"name":"lt","nativeSrc":"14781:2:30","nodeType":"YulIdentifier","src":"14781:2:30"},"nativeSrc":"14781:19:30","nodeType":"YulFunctionCall","src":"14781:19:30"},"nativeSrc":"14778:201:30","nodeType":"YulIf","src":"14778:201:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"14999:4:30","nodeType":"YulIdentifier","src":"14999:4:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"15013:1:30","nodeType":"YulLiteral","src":"15013:1:30","type":"","value":"1"},{"name":"newLen","nativeSrc":"15016:6:30","nodeType":"YulIdentifier","src":"15016:6:30"}],"functionName":{"name":"shl","nativeSrc":"15009:3:30","nodeType":"YulIdentifier","src":"15009:3:30"},"nativeSrc":"15009:14:30","nodeType":"YulFunctionCall","src":"15009:14:30"},{"kind":"number","nativeSrc":"15025:1:30","nodeType":"YulLiteral","src":"15025:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15005:3:30","nodeType":"YulIdentifier","src":"15005:3:30"},"nativeSrc":"15005:22:30","nodeType":"YulFunctionCall","src":"15005:22:30"}],"functionName":{"name":"sstore","nativeSrc":"14992:6:30","nodeType":"YulIdentifier","src":"14992:6:30"},"nativeSrc":"14992:36:30","nodeType":"YulFunctionCall","src":"14992:36:30"},"nativeSrc":"14992:36:30","nodeType":"YulExpressionStatement","src":"14992:36:30"}]},"nativeSrc":"14375:663:30","nodeType":"YulCase","src":"14375:663:30","value":{"kind":"number","nativeSrc":"14380:1:30","nodeType":"YulLiteral","src":"14380:1:30","type":"","value":"1"}},{"body":{"nativeSrc":"15055:234:30","nodeType":"YulBlock","src":"15055:234:30","statements":[{"nativeSrc":"15069:14:30","nodeType":"YulVariableDeclaration","src":"15069:14:30","value":{"kind":"number","nativeSrc":"15082:1:30","nodeType":"YulLiteral","src":"15082:1:30","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"15073:5:30","nodeType":"YulTypedName","src":"15073:5:30","type":""}]},{"body":{"nativeSrc":"15118:67:30","nodeType":"YulBlock","src":"15118:67:30","statements":[{"nativeSrc":"15136:35:30","nodeType":"YulAssignment","src":"15136:35:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"15155:3:30","nodeType":"YulIdentifier","src":"15155:3:30"},{"name":"srcOffset","nativeSrc":"15160:9:30","nodeType":"YulIdentifier","src":"15160:9:30"}],"functionName":{"name":"add","nativeSrc":"15151:3:30","nodeType":"YulIdentifier","src":"15151:3:30"},"nativeSrc":"15151:19:30","nodeType":"YulFunctionCall","src":"15151:19:30"}],"functionName":{"name":"mload","nativeSrc":"15145:5:30","nodeType":"YulIdentifier","src":"15145:5:30"},"nativeSrc":"15145:26:30","nodeType":"YulFunctionCall","src":"15145:26:30"},"variableNames":[{"name":"value","nativeSrc":"15136:5:30","nodeType":"YulIdentifier","src":"15136:5:30"}]}]},"condition":{"name":"newLen","nativeSrc":"15099:6:30","nodeType":"YulIdentifier","src":"15099:6:30"},"nativeSrc":"15096:89:30","nodeType":"YulIf","src":"15096:89:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"15205:4:30","nodeType":"YulIdentifier","src":"15205:4:30"},{"arguments":[{"name":"value","nativeSrc":"15264:5:30","nodeType":"YulIdentifier","src":"15264:5:30"},{"name":"newLen","nativeSrc":"15271:6:30","nodeType":"YulIdentifier","src":"15271:6:30"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"15211:52:30","nodeType":"YulIdentifier","src":"15211:52:30"},"nativeSrc":"15211:67:30","nodeType":"YulFunctionCall","src":"15211:67:30"}],"functionName":{"name":"sstore","nativeSrc":"15198:6:30","nodeType":"YulIdentifier","src":"15198:6:30"},"nativeSrc":"15198:81:30","nodeType":"YulFunctionCall","src":"15198:81:30"},"nativeSrc":"15198:81:30","nodeType":"YulExpressionStatement","src":"15198:81:30"}]},"nativeSrc":"15047:242:30","nodeType":"YulCase","src":"15047:242:30","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"14355:6:30","nodeType":"YulIdentifier","src":"14355:6:30"},{"kind":"number","nativeSrc":"14363:2:30","nodeType":"YulLiteral","src":"14363:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"14352:2:30","nodeType":"YulIdentifier","src":"14352:2:30"},"nativeSrc":"14352:14:30","nodeType":"YulFunctionCall","src":"14352:14:30"},"nativeSrc":"14345:944:30","nodeType":"YulSwitch","src":"14345:944:30"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"13950:1345:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"14031:4:30","nodeType":"YulTypedName","src":"14031:4:30","type":""},{"name":"src","nativeSrc":"14037:3:30","nodeType":"YulTypedName","src":"14037:3:30","type":""}],"src":"13950:1345:30"},{"body":{"nativeSrc":"15358:665:30","nodeType":"YulBlock","src":"15358:665:30","statements":[{"nativeSrc":"15368:29:30","nodeType":"YulVariableDeclaration","src":"15368:29:30","value":{"arguments":[{"name":"value","nativeSrc":"15391:5:30","nodeType":"YulIdentifier","src":"15391:5:30"}],"functionName":{"name":"sload","nativeSrc":"15385:5:30","nodeType":"YulIdentifier","src":"15385:5:30"},"nativeSrc":"15385:12:30","nodeType":"YulFunctionCall","src":"15385:12:30"},"variables":[{"name":"slotValue","nativeSrc":"15372:9:30","nodeType":"YulTypedName","src":"15372:9:30","type":""}]},{"nativeSrc":"15406:50:30","nodeType":"YulVariableDeclaration","src":"15406:50:30","value":{"arguments":[{"name":"slotValue","nativeSrc":"15446:9:30","nodeType":"YulIdentifier","src":"15446:9:30"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"15420:25:30","nodeType":"YulIdentifier","src":"15420:25:30"},"nativeSrc":"15420:36:30","nodeType":"YulFunctionCall","src":"15420:36:30"},"variables":[{"name":"length","nativeSrc":"15410:6:30","nodeType":"YulTypedName","src":"15410:6:30","type":""}]},{"nativeSrc":"15465:11:30","nodeType":"YulVariableDeclaration","src":"15465:11:30","value":{"kind":"number","nativeSrc":"15475:1:30","nodeType":"YulLiteral","src":"15475:1:30","type":"","value":"1"},"variables":[{"name":"_1","nativeSrc":"15469:2:30","nodeType":"YulTypedName","src":"15469:2:30","type":""}]},{"cases":[{"body":{"nativeSrc":"15525:126:30","nodeType":"YulBlock","src":"15525:126:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15546:3:30","nodeType":"YulIdentifier","src":"15546:3:30"},{"arguments":[{"name":"slotValue","nativeSrc":"15555:9:30","nodeType":"YulIdentifier","src":"15555:9:30"},{"arguments":[{"kind":"number","nativeSrc":"15570:3:30","nodeType":"YulLiteral","src":"15570:3:30","type":"","value":"255"}],"functionName":{"name":"not","nativeSrc":"15566:3:30","nodeType":"YulIdentifier","src":"15566:3:30"},"nativeSrc":"15566:8:30","nodeType":"YulFunctionCall","src":"15566:8:30"}],"functionName":{"name":"and","nativeSrc":"15551:3:30","nodeType":"YulIdentifier","src":"15551:3:30"},"nativeSrc":"15551:24:30","nodeType":"YulFunctionCall","src":"15551:24:30"}],"functionName":{"name":"mstore","nativeSrc":"15539:6:30","nodeType":"YulIdentifier","src":"15539:6:30"},"nativeSrc":"15539:37:30","nodeType":"YulFunctionCall","src":"15539:37:30"},"nativeSrc":"15539:37:30","nodeType":"YulExpressionStatement","src":"15539:37:30"},{"nativeSrc":"15589:52:30","nodeType":"YulAssignment","src":"15589:52:30","value":{"arguments":[{"name":"pos","nativeSrc":"15600:3:30","nodeType":"YulIdentifier","src":"15600:3:30"},{"arguments":[{"name":"length","nativeSrc":"15609:6:30","nodeType":"YulIdentifier","src":"15609:6:30"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"15631:6:30","nodeType":"YulIdentifier","src":"15631:6:30"}],"functionName":{"name":"iszero","nativeSrc":"15624:6:30","nodeType":"YulIdentifier","src":"15624:6:30"},"nativeSrc":"15624:14:30","nodeType":"YulFunctionCall","src":"15624:14:30"}],"functionName":{"name":"iszero","nativeSrc":"15617:6:30","nodeType":"YulIdentifier","src":"15617:6:30"},"nativeSrc":"15617:22:30","nodeType":"YulFunctionCall","src":"15617:22:30"}],"functionName":{"name":"mul","nativeSrc":"15605:3:30","nodeType":"YulIdentifier","src":"15605:3:30"},"nativeSrc":"15605:35:30","nodeType":"YulFunctionCall","src":"15605:35:30"}],"functionName":{"name":"add","nativeSrc":"15596:3:30","nodeType":"YulIdentifier","src":"15596:3:30"},"nativeSrc":"15596:45:30","nodeType":"YulFunctionCall","src":"15596:45:30"},"variableNames":[{"name":"ret","nativeSrc":"15589:3:30","nodeType":"YulIdentifier","src":"15589:3:30"}]}]},"nativeSrc":"15518:133:30","nodeType":"YulCase","src":"15518:133:30","value":{"kind":"number","nativeSrc":"15523:1:30","nodeType":"YulLiteral","src":"15523:1:30","type":"","value":"0"}},{"body":{"nativeSrc":"15667:350:30","nodeType":"YulBlock","src":"15667:350:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15688:1:30","nodeType":"YulLiteral","src":"15688:1:30","type":"","value":"0"},{"name":"value","nativeSrc":"15691:5:30","nodeType":"YulIdentifier","src":"15691:5:30"}],"functionName":{"name":"mstore","nativeSrc":"15681:6:30","nodeType":"YulIdentifier","src":"15681:6:30"},"nativeSrc":"15681:16:30","nodeType":"YulFunctionCall","src":"15681:16:30"},"nativeSrc":"15681:16:30","nodeType":"YulExpressionStatement","src":"15681:16:30"},{"nativeSrc":"15710:14:30","nodeType":"YulVariableDeclaration","src":"15710:14:30","value":{"kind":"number","nativeSrc":"15720:4:30","nodeType":"YulLiteral","src":"15720:4:30","type":"","value":"0x20"},"variables":[{"name":"_2","nativeSrc":"15714:2:30","nodeType":"YulTypedName","src":"15714:2:30","type":""}]},{"nativeSrc":"15737:33:30","nodeType":"YulVariableDeclaration","src":"15737:33:30","value":{"arguments":[{"kind":"number","nativeSrc":"15762:1:30","nodeType":"YulLiteral","src":"15762:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"15765:4:30","nodeType":"YulLiteral","src":"15765:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"15752:9:30","nodeType":"YulIdentifier","src":"15752:9:30"},"nativeSrc":"15752:18:30","nodeType":"YulFunctionCall","src":"15752:18:30"},"variables":[{"name":"dataPos","nativeSrc":"15741:7:30","nodeType":"YulTypedName","src":"15741:7:30","type":""}]},{"nativeSrc":"15783:10:30","nodeType":"YulVariableDeclaration","src":"15783:10:30","value":{"kind":"number","nativeSrc":"15792:1:30","nodeType":"YulLiteral","src":"15792:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"15787:1:30","nodeType":"YulTypedName","src":"15787:1:30","type":""}]},{"body":{"nativeSrc":"15860:111:30","nodeType":"YulBlock","src":"15860:111:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"15889:3:30","nodeType":"YulIdentifier","src":"15889:3:30"},{"name":"i","nativeSrc":"15894:1:30","nodeType":"YulIdentifier","src":"15894:1:30"}],"functionName":{"name":"add","nativeSrc":"15885:3:30","nodeType":"YulIdentifier","src":"15885:3:30"},"nativeSrc":"15885:11:30","nodeType":"YulFunctionCall","src":"15885:11:30"},{"arguments":[{"name":"dataPos","nativeSrc":"15904:7:30","nodeType":"YulIdentifier","src":"15904:7:30"}],"functionName":{"name":"sload","nativeSrc":"15898:5:30","nodeType":"YulIdentifier","src":"15898:5:30"},"nativeSrc":"15898:14:30","nodeType":"YulFunctionCall","src":"15898:14:30"}],"functionName":{"name":"mstore","nativeSrc":"15878:6:30","nodeType":"YulIdentifier","src":"15878:6:30"},"nativeSrc":"15878:35:30","nodeType":"YulFunctionCall","src":"15878:35:30"},"nativeSrc":"15878:35:30","nodeType":"YulExpressionStatement","src":"15878:35:30"},{"nativeSrc":"15930:27:30","nodeType":"YulAssignment","src":"15930:27:30","value":{"arguments":[{"name":"dataPos","nativeSrc":"15945:7:30","nodeType":"YulIdentifier","src":"15945:7:30"},{"name":"_1","nativeSrc":"15954:2:30","nodeType":"YulIdentifier","src":"15954:2:30"}],"functionName":{"name":"add","nativeSrc":"15941:3:30","nodeType":"YulIdentifier","src":"15941:3:30"},"nativeSrc":"15941:16:30","nodeType":"YulFunctionCall","src":"15941:16:30"},"variableNames":[{"name":"dataPos","nativeSrc":"15930:7:30","nodeType":"YulIdentifier","src":"15930:7:30"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"15817:1:30","nodeType":"YulIdentifier","src":"15817:1:30"},{"name":"length","nativeSrc":"15820:6:30","nodeType":"YulIdentifier","src":"15820:6:30"}],"functionName":{"name":"lt","nativeSrc":"15814:2:30","nodeType":"YulIdentifier","src":"15814:2:30"},"nativeSrc":"15814:13:30","nodeType":"YulFunctionCall","src":"15814:13:30"},"nativeSrc":"15806:165:30","nodeType":"YulForLoop","post":{"nativeSrc":"15828:19:30","nodeType":"YulBlock","src":"15828:19:30","statements":[{"nativeSrc":"15830:15:30","nodeType":"YulAssignment","src":"15830:15:30","value":{"arguments":[{"name":"i","nativeSrc":"15839:1:30","nodeType":"YulIdentifier","src":"15839:1:30"},{"name":"_2","nativeSrc":"15842:2:30","nodeType":"YulIdentifier","src":"15842:2:30"}],"functionName":{"name":"add","nativeSrc":"15835:3:30","nodeType":"YulIdentifier","src":"15835:3:30"},"nativeSrc":"15835:10:30","nodeType":"YulFunctionCall","src":"15835:10:30"},"variableNames":[{"name":"i","nativeSrc":"15830:1:30","nodeType":"YulIdentifier","src":"15830:1:30"}]}]},"pre":{"nativeSrc":"15810:3:30","nodeType":"YulBlock","src":"15810:3:30","statements":[]},"src":"15806:165:30"},{"nativeSrc":"15984:23:30","nodeType":"YulAssignment","src":"15984:23:30","value":{"arguments":[{"name":"pos","nativeSrc":"15995:3:30","nodeType":"YulIdentifier","src":"15995:3:30"},{"name":"length","nativeSrc":"16000:6:30","nodeType":"YulIdentifier","src":"16000:6:30"}],"functionName":{"name":"add","nativeSrc":"15991:3:30","nodeType":"YulIdentifier","src":"15991:3:30"},"nativeSrc":"15991:16:30","nodeType":"YulFunctionCall","src":"15991:16:30"},"variableNames":[{"name":"ret","nativeSrc":"15984:3:30","nodeType":"YulIdentifier","src":"15984:3:30"}]}]},"nativeSrc":"15660:357:30","nodeType":"YulCase","src":"15660:357:30","value":{"kind":"number","nativeSrc":"15665:1:30","nodeType":"YulLiteral","src":"15665:1:30","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nativeSrc":"15496:9:30","nodeType":"YulIdentifier","src":"15496:9:30"},{"kind":"number","nativeSrc":"15507:1:30","nodeType":"YulLiteral","src":"15507:1:30","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"15492:3:30","nodeType":"YulIdentifier","src":"15492:3:30"},"nativeSrc":"15492:17:30","nodeType":"YulFunctionCall","src":"15492:17:30"},"nativeSrc":"15485:532:30","nodeType":"YulSwitch","src":"15485:532:30"}]},"name":"abi_encode_string_storage","nativeSrc":"15300:723:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15335:5:30","nodeType":"YulTypedName","src":"15335:5:30","type":""},{"name":"pos","nativeSrc":"15342:3:30","nodeType":"YulTypedName","src":"15342:3:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"15350:3:30","nodeType":"YulTypedName","src":"15350:3:30","type":""}],"src":"15300:723:30"},{"body":{"nativeSrc":"16313:271:30","nodeType":"YulBlock","src":"16313:271:30","statements":[{"nativeSrc":"16323:48:30","nodeType":"YulVariableDeclaration","src":"16323:48:30","value":{"arguments":[{"name":"value0","nativeSrc":"16359:6:30","nodeType":"YulIdentifier","src":"16359:6:30"},{"name":"pos","nativeSrc":"16367:3:30","nodeType":"YulIdentifier","src":"16367:3:30"}],"functionName":{"name":"abi_encode_string_storage","nativeSrc":"16333:25:30","nodeType":"YulIdentifier","src":"16333:25:30"},"nativeSrc":"16333:38:30","nodeType":"YulFunctionCall","src":"16333:38:30"},"variables":[{"name":"_1","nativeSrc":"16327:2:30","nodeType":"YulTypedName","src":"16327:2:30","type":""}]},{"nativeSrc":"16380:27:30","nodeType":"YulVariableDeclaration","src":"16380:27:30","value":{"arguments":[{"name":"value1","nativeSrc":"16400:6:30","nodeType":"YulIdentifier","src":"16400:6:30"}],"functionName":{"name":"mload","nativeSrc":"16394:5:30","nodeType":"YulIdentifier","src":"16394:5:30"},"nativeSrc":"16394:13:30","nodeType":"YulFunctionCall","src":"16394:13:30"},"variables":[{"name":"length","nativeSrc":"16384:6:30","nodeType":"YulTypedName","src":"16384:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"16455:6:30","nodeType":"YulIdentifier","src":"16455:6:30"},{"kind":"number","nativeSrc":"16463:4:30","nodeType":"YulLiteral","src":"16463:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16451:3:30","nodeType":"YulIdentifier","src":"16451:3:30"},"nativeSrc":"16451:17:30","nodeType":"YulFunctionCall","src":"16451:17:30"},{"name":"_1","nativeSrc":"16470:2:30","nodeType":"YulIdentifier","src":"16470:2:30"},{"name":"length","nativeSrc":"16474:6:30","nodeType":"YulIdentifier","src":"16474:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"16416:34:30","nodeType":"YulIdentifier","src":"16416:34:30"},"nativeSrc":"16416:65:30","nodeType":"YulFunctionCall","src":"16416:65:30"},"nativeSrc":"16416:65:30","nodeType":"YulExpressionStatement","src":"16416:65:30"},{"nativeSrc":"16490:28:30","nodeType":"YulVariableDeclaration","src":"16490:28:30","value":{"arguments":[{"name":"_1","nativeSrc":"16507:2:30","nodeType":"YulIdentifier","src":"16507:2:30"},{"name":"length","nativeSrc":"16511:6:30","nodeType":"YulIdentifier","src":"16511:6:30"}],"functionName":{"name":"add","nativeSrc":"16503:3:30","nodeType":"YulIdentifier","src":"16503:3:30"},"nativeSrc":"16503:15:30","nodeType":"YulFunctionCall","src":"16503:15:30"},"variables":[{"name":"end_1","nativeSrc":"16494:5:30","nodeType":"YulTypedName","src":"16494:5:30","type":""}]},{"expression":{"arguments":[{"name":"end_1","nativeSrc":"16534:5:30","nodeType":"YulIdentifier","src":"16534:5:30"},{"hexValue":"2e6a736f6e","kind":"string","nativeSrc":"16541:7:30","nodeType":"YulLiteral","src":"16541:7:30","type":"","value":".json"}],"functionName":{"name":"mstore","nativeSrc":"16527:6:30","nodeType":"YulIdentifier","src":"16527:6:30"},"nativeSrc":"16527:22:30","nodeType":"YulFunctionCall","src":"16527:22:30"},"nativeSrc":"16527:22:30","nodeType":"YulExpressionStatement","src":"16527:22:30"},{"nativeSrc":"16558:20:30","nodeType":"YulAssignment","src":"16558:20:30","value":{"arguments":[{"name":"end_1","nativeSrc":"16569:5:30","nodeType":"YulIdentifier","src":"16569:5:30"},{"kind":"number","nativeSrc":"16576:1:30","nodeType":"YulLiteral","src":"16576:1:30","type":"","value":"5"}],"functionName":{"name":"add","nativeSrc":"16565:3:30","nodeType":"YulIdentifier","src":"16565:3:30"},"nativeSrc":"16565:13:30","nodeType":"YulFunctionCall","src":"16565:13:30"},"variableNames":[{"name":"end","nativeSrc":"16558:3:30","nodeType":"YulIdentifier","src":"16558:3:30"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"16028:556:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16281:3:30","nodeType":"YulTypedName","src":"16281:3:30","type":""},{"name":"value1","nativeSrc":"16286:6:30","nodeType":"YulTypedName","src":"16286:6:30","type":""},{"name":"value0","nativeSrc":"16294:6:30","nodeType":"YulTypedName","src":"16294:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16305:3:30","nodeType":"YulTypedName","src":"16305:3:30","type":""}],"src":"16028:556:30"},{"body":{"nativeSrc":"16718:175:30","nodeType":"YulBlock","src":"16718:175:30","statements":[{"nativeSrc":"16728:26:30","nodeType":"YulAssignment","src":"16728:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"16740:9:30","nodeType":"YulIdentifier","src":"16740:9:30"},{"kind":"number","nativeSrc":"16751:2:30","nodeType":"YulLiteral","src":"16751:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16736:3:30","nodeType":"YulIdentifier","src":"16736:3:30"},"nativeSrc":"16736:18:30","nodeType":"YulFunctionCall","src":"16736:18:30"},"variableNames":[{"name":"tail","nativeSrc":"16728:4:30","nodeType":"YulIdentifier","src":"16728:4:30"}]},{"nativeSrc":"16763:29:30","nodeType":"YulVariableDeclaration","src":"16763:29:30","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16781:3:30","nodeType":"YulLiteral","src":"16781:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"16786:1:30","nodeType":"YulLiteral","src":"16786:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"16777:3:30","nodeType":"YulIdentifier","src":"16777:3:30"},"nativeSrc":"16777:11:30","nodeType":"YulFunctionCall","src":"16777:11:30"},{"kind":"number","nativeSrc":"16790:1:30","nodeType":"YulLiteral","src":"16790:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"16773:3:30","nodeType":"YulIdentifier","src":"16773:3:30"},"nativeSrc":"16773:19:30","nodeType":"YulFunctionCall","src":"16773:19:30"},"variables":[{"name":"_1","nativeSrc":"16767:2:30","nodeType":"YulTypedName","src":"16767:2:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16808:9:30","nodeType":"YulIdentifier","src":"16808:9:30"},{"arguments":[{"name":"value0","nativeSrc":"16823:6:30","nodeType":"YulIdentifier","src":"16823:6:30"},{"name":"_1","nativeSrc":"16831:2:30","nodeType":"YulIdentifier","src":"16831:2:30"}],"functionName":{"name":"and","nativeSrc":"16819:3:30","nodeType":"YulIdentifier","src":"16819:3:30"},"nativeSrc":"16819:15:30","nodeType":"YulFunctionCall","src":"16819:15:30"}],"functionName":{"name":"mstore","nativeSrc":"16801:6:30","nodeType":"YulIdentifier","src":"16801:6:30"},"nativeSrc":"16801:34:30","nodeType":"YulFunctionCall","src":"16801:34:30"},"nativeSrc":"16801:34:30","nodeType":"YulExpressionStatement","src":"16801:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16855:9:30","nodeType":"YulIdentifier","src":"16855:9:30"},{"kind":"number","nativeSrc":"16866:2:30","nodeType":"YulLiteral","src":"16866:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16851:3:30","nodeType":"YulIdentifier","src":"16851:3:30"},"nativeSrc":"16851:18:30","nodeType":"YulFunctionCall","src":"16851:18:30"},{"arguments":[{"name":"value1","nativeSrc":"16875:6:30","nodeType":"YulIdentifier","src":"16875:6:30"},{"name":"_1","nativeSrc":"16883:2:30","nodeType":"YulIdentifier","src":"16883:2:30"}],"functionName":{"name":"and","nativeSrc":"16871:3:30","nodeType":"YulIdentifier","src":"16871:3:30"},"nativeSrc":"16871:15:30","nodeType":"YulFunctionCall","src":"16871:15:30"}],"functionName":{"name":"mstore","nativeSrc":"16844:6:30","nodeType":"YulIdentifier","src":"16844:6:30"},"nativeSrc":"16844:43:30","nodeType":"YulFunctionCall","src":"16844:43:30"},"nativeSrc":"16844:43:30","nodeType":"YulExpressionStatement","src":"16844:43:30"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"16589:304:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16679:9:30","nodeType":"YulTypedName","src":"16679:9:30","type":""},{"name":"value1","nativeSrc":"16690:6:30","nodeType":"YulTypedName","src":"16690:6:30","type":""},{"name":"value0","nativeSrc":"16698:6:30","nodeType":"YulTypedName","src":"16698:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16709:4:30","nodeType":"YulTypedName","src":"16709:4:30","type":""}],"src":"16589:304:30"},{"body":{"nativeSrc":"17027:119:30","nodeType":"YulBlock","src":"17027:119:30","statements":[{"nativeSrc":"17037:26:30","nodeType":"YulAssignment","src":"17037:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"17049:9:30","nodeType":"YulIdentifier","src":"17049:9:30"},{"kind":"number","nativeSrc":"17060:2:30","nodeType":"YulLiteral","src":"17060:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17045:3:30","nodeType":"YulIdentifier","src":"17045:3:30"},"nativeSrc":"17045:18:30","nodeType":"YulFunctionCall","src":"17045:18:30"},"variableNames":[{"name":"tail","nativeSrc":"17037:4:30","nodeType":"YulIdentifier","src":"17037:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17079:9:30","nodeType":"YulIdentifier","src":"17079:9:30"},{"name":"value0","nativeSrc":"17090:6:30","nodeType":"YulIdentifier","src":"17090:6:30"}],"functionName":{"name":"mstore","nativeSrc":"17072:6:30","nodeType":"YulIdentifier","src":"17072:6:30"},"nativeSrc":"17072:25:30","nodeType":"YulFunctionCall","src":"17072:25:30"},"nativeSrc":"17072:25:30","nodeType":"YulExpressionStatement","src":"17072:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17117:9:30","nodeType":"YulIdentifier","src":"17117:9:30"},{"kind":"number","nativeSrc":"17128:2:30","nodeType":"YulLiteral","src":"17128:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17113:3:30","nodeType":"YulIdentifier","src":"17113:3:30"},"nativeSrc":"17113:18:30","nodeType":"YulFunctionCall","src":"17113:18:30"},{"name":"value1","nativeSrc":"17133:6:30","nodeType":"YulIdentifier","src":"17133:6:30"}],"functionName":{"name":"mstore","nativeSrc":"17106:6:30","nodeType":"YulIdentifier","src":"17106:6:30"},"nativeSrc":"17106:34:30","nodeType":"YulFunctionCall","src":"17106:34:30"},"nativeSrc":"17106:34:30","nodeType":"YulExpressionStatement","src":"17106:34:30"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"16898:248:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16988:9:30","nodeType":"YulTypedName","src":"16988:9:30","type":""},{"name":"value1","nativeSrc":"16999:6:30","nodeType":"YulTypedName","src":"16999:6:30","type":""},{"name":"value0","nativeSrc":"17007:6:30","nodeType":"YulTypedName","src":"17007:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17018:4:30","nodeType":"YulTypedName","src":"17018:4:30","type":""}],"src":"16898:248:30"},{"body":{"nativeSrc":"17183:95:30","nodeType":"YulBlock","src":"17183:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17200:1:30","nodeType":"YulLiteral","src":"17200:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"17207:3:30","nodeType":"YulLiteral","src":"17207:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"17212:10:30","nodeType":"YulLiteral","src":"17212:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"17203:3:30","nodeType":"YulIdentifier","src":"17203:3:30"},"nativeSrc":"17203:20:30","nodeType":"YulFunctionCall","src":"17203:20:30"}],"functionName":{"name":"mstore","nativeSrc":"17193:6:30","nodeType":"YulIdentifier","src":"17193:6:30"},"nativeSrc":"17193:31:30","nodeType":"YulFunctionCall","src":"17193:31:30"},"nativeSrc":"17193:31:30","nodeType":"YulExpressionStatement","src":"17193:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17240:1:30","nodeType":"YulLiteral","src":"17240:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"17243:4:30","nodeType":"YulLiteral","src":"17243:4:30","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"17233:6:30","nodeType":"YulIdentifier","src":"17233:6:30"},"nativeSrc":"17233:15:30","nodeType":"YulFunctionCall","src":"17233:15:30"},"nativeSrc":"17233:15:30","nodeType":"YulExpressionStatement","src":"17233:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17264:1:30","nodeType":"YulLiteral","src":"17264:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"17267:4:30","nodeType":"YulLiteral","src":"17267:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17257:6:30","nodeType":"YulIdentifier","src":"17257:6:30"},"nativeSrc":"17257:15:30","nodeType":"YulFunctionCall","src":"17257:15:30"},"nativeSrc":"17257:15:30","nodeType":"YulExpressionStatement","src":"17257:15:30"}]},"name":"panic_error_0x32","nativeSrc":"17151:127:30","nodeType":"YulFunctionDefinition","src":"17151:127:30"},{"body":{"nativeSrc":"17386:1103:30","nodeType":"YulBlock","src":"17386:1103:30","statements":[{"body":{"nativeSrc":"17427:22:30","nodeType":"YulBlock","src":"17427:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"17429:16:30","nodeType":"YulIdentifier","src":"17429:16:30"},"nativeSrc":"17429:18:30","nodeType":"YulFunctionCall","src":"17429:18:30"},"nativeSrc":"17429:18:30","nodeType":"YulExpressionStatement","src":"17429:18:30"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"17402:3:30","nodeType":"YulIdentifier","src":"17402:3:30"},{"kind":"number","nativeSrc":"17407:18:30","nodeType":"YulLiteral","src":"17407:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"17399:2:30","nodeType":"YulIdentifier","src":"17399:2:30"},"nativeSrc":"17399:27:30","nodeType":"YulFunctionCall","src":"17399:27:30"},"nativeSrc":"17396:53:30","nodeType":"YulIf","src":"17396:53:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"17502:4:30","nodeType":"YulIdentifier","src":"17502:4:30"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"17540:4:30","nodeType":"YulIdentifier","src":"17540:4:30"}],"functionName":{"name":"sload","nativeSrc":"17534:5:30","nodeType":"YulIdentifier","src":"17534:5:30"},"nativeSrc":"17534:11:30","nodeType":"YulFunctionCall","src":"17534:11:30"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"17508:25:30","nodeType":"YulIdentifier","src":"17508:25:30"},"nativeSrc":"17508:38:30","nodeType":"YulFunctionCall","src":"17508:38:30"},{"name":"len","nativeSrc":"17548:3:30","nodeType":"YulIdentifier","src":"17548:3:30"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"17458:43:30","nodeType":"YulIdentifier","src":"17458:43:30"},"nativeSrc":"17458:94:30","nodeType":"YulFunctionCall","src":"17458:94:30"},"nativeSrc":"17458:94:30","nodeType":"YulExpressionStatement","src":"17458:94:30"},{"nativeSrc":"17561:18:30","nodeType":"YulVariableDeclaration","src":"17561:18:30","value":{"kind":"number","nativeSrc":"17578:1:30","nodeType":"YulLiteral","src":"17578:1:30","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"17565:9:30","nodeType":"YulTypedName","src":"17565:9:30","type":""}]},{"cases":[{"body":{"nativeSrc":"17622:609:30","nodeType":"YulBlock","src":"17622:609:30","statements":[{"nativeSrc":"17636:32:30","nodeType":"YulVariableDeclaration","src":"17636:32:30","value":{"arguments":[{"name":"len","nativeSrc":"17655:3:30","nodeType":"YulIdentifier","src":"17655:3:30"},{"arguments":[{"kind":"number","nativeSrc":"17664:2:30","nodeType":"YulLiteral","src":"17664:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"17660:3:30","nodeType":"YulIdentifier","src":"17660:3:30"},"nativeSrc":"17660:7:30","nodeType":"YulFunctionCall","src":"17660:7:30"}],"functionName":{"name":"and","nativeSrc":"17651:3:30","nodeType":"YulIdentifier","src":"17651:3:30"},"nativeSrc":"17651:17:30","nodeType":"YulFunctionCall","src":"17651:17:30"},"variables":[{"name":"loopEnd","nativeSrc":"17640:7:30","nodeType":"YulTypedName","src":"17640:7:30","type":""}]},{"nativeSrc":"17681:49:30","nodeType":"YulVariableDeclaration","src":"17681:49:30","value":{"arguments":[{"name":"slot","nativeSrc":"17725:4:30","nodeType":"YulIdentifier","src":"17725:4:30"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"17695:29:30","nodeType":"YulIdentifier","src":"17695:29:30"},"nativeSrc":"17695:35:30","nodeType":"YulFunctionCall","src":"17695:35:30"},"variables":[{"name":"dstPtr","nativeSrc":"17685:6:30","nodeType":"YulTypedName","src":"17685:6:30","type":""}]},{"nativeSrc":"17743:18:30","nodeType":"YulVariableDeclaration","src":"17743:18:30","value":{"name":"srcOffset","nativeSrc":"17752:9:30","nodeType":"YulIdentifier","src":"17752:9:30"},"variables":[{"name":"i","nativeSrc":"17747:1:30","nodeType":"YulTypedName","src":"17747:1:30","type":""}]},{"body":{"nativeSrc":"17831:172:30","nodeType":"YulBlock","src":"17831:172:30","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"17856:6:30","nodeType":"YulIdentifier","src":"17856:6:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17881:3:30","nodeType":"YulIdentifier","src":"17881:3:30"},{"name":"srcOffset","nativeSrc":"17886:9:30","nodeType":"YulIdentifier","src":"17886:9:30"}],"functionName":{"name":"add","nativeSrc":"17877:3:30","nodeType":"YulIdentifier","src":"17877:3:30"},"nativeSrc":"17877:19:30","nodeType":"YulFunctionCall","src":"17877:19:30"}],"functionName":{"name":"calldataload","nativeSrc":"17864:12:30","nodeType":"YulIdentifier","src":"17864:12:30"},"nativeSrc":"17864:33:30","nodeType":"YulFunctionCall","src":"17864:33:30"}],"functionName":{"name":"sstore","nativeSrc":"17849:6:30","nodeType":"YulIdentifier","src":"17849:6:30"},"nativeSrc":"17849:49:30","nodeType":"YulFunctionCall","src":"17849:49:30"},"nativeSrc":"17849:49:30","nodeType":"YulExpressionStatement","src":"17849:49:30"},{"nativeSrc":"17915:24:30","nodeType":"YulAssignment","src":"17915:24:30","value":{"arguments":[{"name":"dstPtr","nativeSrc":"17929:6:30","nodeType":"YulIdentifier","src":"17929:6:30"},{"kind":"number","nativeSrc":"17937:1:30","nodeType":"YulLiteral","src":"17937:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"17925:3:30","nodeType":"YulIdentifier","src":"17925:3:30"},"nativeSrc":"17925:14:30","nodeType":"YulFunctionCall","src":"17925:14:30"},"variableNames":[{"name":"dstPtr","nativeSrc":"17915:6:30","nodeType":"YulIdentifier","src":"17915:6:30"}]},{"nativeSrc":"17956:33:30","nodeType":"YulAssignment","src":"17956:33:30","value":{"arguments":[{"name":"srcOffset","nativeSrc":"17973:9:30","nodeType":"YulIdentifier","src":"17973:9:30"},{"kind":"number","nativeSrc":"17984:4:30","nodeType":"YulLiteral","src":"17984:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17969:3:30","nodeType":"YulIdentifier","src":"17969:3:30"},"nativeSrc":"17969:20:30","nodeType":"YulFunctionCall","src":"17969:20:30"},"variableNames":[{"name":"srcOffset","nativeSrc":"17956:9:30","nodeType":"YulIdentifier","src":"17956:9:30"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"17785:1:30","nodeType":"YulIdentifier","src":"17785:1:30"},{"name":"loopEnd","nativeSrc":"17788:7:30","nodeType":"YulIdentifier","src":"17788:7:30"}],"functionName":{"name":"lt","nativeSrc":"17782:2:30","nodeType":"YulIdentifier","src":"17782:2:30"},"nativeSrc":"17782:14:30","nodeType":"YulFunctionCall","src":"17782:14:30"},"nativeSrc":"17774:229:30","nodeType":"YulForLoop","post":{"nativeSrc":"17797:21:30","nodeType":"YulBlock","src":"17797:21:30","statements":[{"nativeSrc":"17799:17:30","nodeType":"YulAssignment","src":"17799:17:30","value":{"arguments":[{"name":"i","nativeSrc":"17808:1:30","nodeType":"YulIdentifier","src":"17808:1:30"},{"kind":"number","nativeSrc":"17811:4:30","nodeType":"YulLiteral","src":"17811:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17804:3:30","nodeType":"YulIdentifier","src":"17804:3:30"},"nativeSrc":"17804:12:30","nodeType":"YulFunctionCall","src":"17804:12:30"},"variableNames":[{"name":"i","nativeSrc":"17799:1:30","nodeType":"YulIdentifier","src":"17799:1:30"}]}]},"pre":{"nativeSrc":"17778:3:30","nodeType":"YulBlock","src":"17778:3:30","statements":[]},"src":"17774:229:30"},{"body":{"nativeSrc":"18048:127:30","nodeType":"YulBlock","src":"18048:127:30","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"18073:6:30","nodeType":"YulIdentifier","src":"18073:6:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nativeSrc":"18102:3:30","nodeType":"YulIdentifier","src":"18102:3:30"},{"name":"srcOffset","nativeSrc":"18107:9:30","nodeType":"YulIdentifier","src":"18107:9:30"}],"functionName":{"name":"add","nativeSrc":"18098:3:30","nodeType":"YulIdentifier","src":"18098:3:30"},"nativeSrc":"18098:19:30","nodeType":"YulFunctionCall","src":"18098:19:30"}],"functionName":{"name":"calldataload","nativeSrc":"18085:12:30","nodeType":"YulIdentifier","src":"18085:12:30"},"nativeSrc":"18085:33:30","nodeType":"YulFunctionCall","src":"18085:33:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"18136:1:30","nodeType":"YulLiteral","src":"18136:1:30","type":"","value":"3"},{"name":"len","nativeSrc":"18139:3:30","nodeType":"YulIdentifier","src":"18139:3:30"}],"functionName":{"name":"shl","nativeSrc":"18132:3:30","nodeType":"YulIdentifier","src":"18132:3:30"},"nativeSrc":"18132:11:30","nodeType":"YulFunctionCall","src":"18132:11:30"},{"kind":"number","nativeSrc":"18145:3:30","nodeType":"YulLiteral","src":"18145:3:30","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"18128:3:30","nodeType":"YulIdentifier","src":"18128:3:30"},"nativeSrc":"18128:21:30","nodeType":"YulFunctionCall","src":"18128:21:30"},{"arguments":[{"kind":"number","nativeSrc":"18155:1:30","nodeType":"YulLiteral","src":"18155:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"18151:3:30","nodeType":"YulIdentifier","src":"18151:3:30"},"nativeSrc":"18151:6:30","nodeType":"YulFunctionCall","src":"18151:6:30"}],"functionName":{"name":"shr","nativeSrc":"18124:3:30","nodeType":"YulIdentifier","src":"18124:3:30"},"nativeSrc":"18124:34:30","nodeType":"YulFunctionCall","src":"18124:34:30"}],"functionName":{"name":"not","nativeSrc":"18120:3:30","nodeType":"YulIdentifier","src":"18120:3:30"},"nativeSrc":"18120:39:30","nodeType":"YulFunctionCall","src":"18120:39:30"}],"functionName":{"name":"and","nativeSrc":"18081:3:30","nodeType":"YulIdentifier","src":"18081:3:30"},"nativeSrc":"18081:79:30","nodeType":"YulFunctionCall","src":"18081:79:30"}],"functionName":{"name":"sstore","nativeSrc":"18066:6:30","nodeType":"YulIdentifier","src":"18066:6:30"},"nativeSrc":"18066:95:30","nodeType":"YulFunctionCall","src":"18066:95:30"},"nativeSrc":"18066:95:30","nodeType":"YulExpressionStatement","src":"18066:95:30"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"18022:7:30","nodeType":"YulIdentifier","src":"18022:7:30"},{"name":"len","nativeSrc":"18031:3:30","nodeType":"YulIdentifier","src":"18031:3:30"}],"functionName":{"name":"lt","nativeSrc":"18019:2:30","nodeType":"YulIdentifier","src":"18019:2:30"},"nativeSrc":"18019:16:30","nodeType":"YulFunctionCall","src":"18019:16:30"},"nativeSrc":"18016:159:30","nodeType":"YulIf","src":"18016:159:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18195:4:30","nodeType":"YulIdentifier","src":"18195:4:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"18209:1:30","nodeType":"YulLiteral","src":"18209:1:30","type":"","value":"1"},{"name":"len","nativeSrc":"18212:3:30","nodeType":"YulIdentifier","src":"18212:3:30"}],"functionName":{"name":"shl","nativeSrc":"18205:3:30","nodeType":"YulIdentifier","src":"18205:3:30"},"nativeSrc":"18205:11:30","nodeType":"YulFunctionCall","src":"18205:11:30"},{"kind":"number","nativeSrc":"18218:1:30","nodeType":"YulLiteral","src":"18218:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"18201:3:30","nodeType":"YulIdentifier","src":"18201:3:30"},"nativeSrc":"18201:19:30","nodeType":"YulFunctionCall","src":"18201:19:30"}],"functionName":{"name":"sstore","nativeSrc":"18188:6:30","nodeType":"YulIdentifier","src":"18188:6:30"},"nativeSrc":"18188:33:30","nodeType":"YulFunctionCall","src":"18188:33:30"},"nativeSrc":"18188:33:30","nodeType":"YulExpressionStatement","src":"18188:33:30"}]},"nativeSrc":"17615:616:30","nodeType":"YulCase","src":"17615:616:30","value":{"kind":"number","nativeSrc":"17620:1:30","nodeType":"YulLiteral","src":"17620:1:30","type":"","value":"1"}},{"body":{"nativeSrc":"18248:235:30","nodeType":"YulBlock","src":"18248:235:30","statements":[{"nativeSrc":"18262:14:30","nodeType":"YulVariableDeclaration","src":"18262:14:30","value":{"kind":"number","nativeSrc":"18275:1:30","nodeType":"YulLiteral","src":"18275:1:30","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"18266:5:30","nodeType":"YulTypedName","src":"18266:5:30","type":""}]},{"body":{"nativeSrc":"18308:74:30","nodeType":"YulBlock","src":"18308:74:30","statements":[{"nativeSrc":"18326:42:30","nodeType":"YulAssignment","src":"18326:42:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"18352:3:30","nodeType":"YulIdentifier","src":"18352:3:30"},{"name":"srcOffset","nativeSrc":"18357:9:30","nodeType":"YulIdentifier","src":"18357:9:30"}],"functionName":{"name":"add","nativeSrc":"18348:3:30","nodeType":"YulIdentifier","src":"18348:3:30"},"nativeSrc":"18348:19:30","nodeType":"YulFunctionCall","src":"18348:19:30"}],"functionName":{"name":"calldataload","nativeSrc":"18335:12:30","nodeType":"YulIdentifier","src":"18335:12:30"},"nativeSrc":"18335:33:30","nodeType":"YulFunctionCall","src":"18335:33:30"},"variableNames":[{"name":"value","nativeSrc":"18326:5:30","nodeType":"YulIdentifier","src":"18326:5:30"}]}]},"condition":{"name":"len","nativeSrc":"18292:3:30","nodeType":"YulIdentifier","src":"18292:3:30"},"nativeSrc":"18289:93:30","nodeType":"YulIf","src":"18289:93:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18402:4:30","nodeType":"YulIdentifier","src":"18402:4:30"},{"arguments":[{"name":"value","nativeSrc":"18461:5:30","nodeType":"YulIdentifier","src":"18461:5:30"},{"name":"len","nativeSrc":"18468:3:30","nodeType":"YulIdentifier","src":"18468:3:30"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"18408:52:30","nodeType":"YulIdentifier","src":"18408:52:30"},"nativeSrc":"18408:64:30","nodeType":"YulFunctionCall","src":"18408:64:30"}],"functionName":{"name":"sstore","nativeSrc":"18395:6:30","nodeType":"YulIdentifier","src":"18395:6:30"},"nativeSrc":"18395:78:30","nodeType":"YulFunctionCall","src":"18395:78:30"},"nativeSrc":"18395:78:30","nodeType":"YulExpressionStatement","src":"18395:78:30"}]},"nativeSrc":"18240:243:30","nodeType":"YulCase","src":"18240:243:30","value":"default"}],"expression":{"arguments":[{"name":"len","nativeSrc":"17598:3:30","nodeType":"YulIdentifier","src":"17598:3:30"},{"kind":"number","nativeSrc":"17603:2:30","nodeType":"YulLiteral","src":"17603:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"17595:2:30","nodeType":"YulIdentifier","src":"17595:2:30"},"nativeSrc":"17595:11:30","nodeType":"YulFunctionCall","src":"17595:11:30"},"nativeSrc":"17588:895:30","nodeType":"YulSwitch","src":"17588:895:30"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nativeSrc":"17283:1206:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"17366:4:30","nodeType":"YulTypedName","src":"17366:4:30","type":""},{"name":"src","nativeSrc":"17372:3:30","nodeType":"YulTypedName","src":"17372:3:30","type":""},{"name":"len","nativeSrc":"17377:3:30","nodeType":"YulTypedName","src":"17377:3:30","type":""}],"src":"17283:1206:30"},{"body":{"nativeSrc":"18668:157:30","nodeType":"YulBlock","src":"18668:157:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18685:9:30","nodeType":"YulIdentifier","src":"18685:9:30"},{"kind":"number","nativeSrc":"18696:2:30","nodeType":"YulLiteral","src":"18696:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18678:6:30","nodeType":"YulIdentifier","src":"18678:6:30"},"nativeSrc":"18678:21:30","nodeType":"YulFunctionCall","src":"18678:21:30"},"nativeSrc":"18678:21:30","nodeType":"YulExpressionStatement","src":"18678:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18719:9:30","nodeType":"YulIdentifier","src":"18719:9:30"},{"kind":"number","nativeSrc":"18730:2:30","nodeType":"YulLiteral","src":"18730:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18715:3:30","nodeType":"YulIdentifier","src":"18715:3:30"},"nativeSrc":"18715:18:30","nodeType":"YulFunctionCall","src":"18715:18:30"},{"kind":"number","nativeSrc":"18735:1:30","nodeType":"YulLiteral","src":"18735:1:30","type":"","value":"8"}],"functionName":{"name":"mstore","nativeSrc":"18708:6:30","nodeType":"YulIdentifier","src":"18708:6:30"},"nativeSrc":"18708:29:30","nodeType":"YulFunctionCall","src":"18708:29:30"},"nativeSrc":"18708:29:30","nodeType":"YulExpressionStatement","src":"18708:29:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18757:9:30","nodeType":"YulIdentifier","src":"18757:9:30"},{"kind":"number","nativeSrc":"18768:2:30","nodeType":"YulLiteral","src":"18768:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18753:3:30","nodeType":"YulIdentifier","src":"18753:3:30"},"nativeSrc":"18753:18:30","nodeType":"YulFunctionCall","src":"18753:18:30"},{"hexValue":"64697361626c6564","kind":"string","nativeSrc":"18773:10:30","nodeType":"YulLiteral","src":"18773:10:30","type":"","value":"disabled"}],"functionName":{"name":"mstore","nativeSrc":"18746:6:30","nodeType":"YulIdentifier","src":"18746:6:30"},"nativeSrc":"18746:38:30","nodeType":"YulFunctionCall","src":"18746:38:30"},"nativeSrc":"18746:38:30","nodeType":"YulExpressionStatement","src":"18746:38:30"},{"nativeSrc":"18793:26:30","nodeType":"YulAssignment","src":"18793:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"18805:9:30","nodeType":"YulIdentifier","src":"18805:9:30"},{"kind":"number","nativeSrc":"18816:2:30","nodeType":"YulLiteral","src":"18816:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18801:3:30","nodeType":"YulIdentifier","src":"18801:3:30"},"nativeSrc":"18801:18:30","nodeType":"YulFunctionCall","src":"18801:18:30"},"variableNames":[{"name":"tail","nativeSrc":"18793:4:30","nodeType":"YulIdentifier","src":"18793:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_37a170f786e458179522ad8acdf045019b62598928e7a1acbbae427b70fe1ee5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18494:331:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18645:9:30","nodeType":"YulTypedName","src":"18645:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18659:4:30","nodeType":"YulTypedName","src":"18659:4:30","type":""}],"src":"18494:331:30"},{"body":{"nativeSrc":"19004:156:30","nodeType":"YulBlock","src":"19004:156:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19021:9:30","nodeType":"YulIdentifier","src":"19021:9:30"},{"kind":"number","nativeSrc":"19032:2:30","nodeType":"YulLiteral","src":"19032:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19014:6:30","nodeType":"YulIdentifier","src":"19014:6:30"},"nativeSrc":"19014:21:30","nodeType":"YulFunctionCall","src":"19014:21:30"},"nativeSrc":"19014:21:30","nodeType":"YulExpressionStatement","src":"19014:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19055:9:30","nodeType":"YulIdentifier","src":"19055:9:30"},{"kind":"number","nativeSrc":"19066:2:30","nodeType":"YulLiteral","src":"19066:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19051:3:30","nodeType":"YulIdentifier","src":"19051:3:30"},"nativeSrc":"19051:18:30","nodeType":"YulFunctionCall","src":"19051:18:30"},{"kind":"number","nativeSrc":"19071:1:30","nodeType":"YulLiteral","src":"19071:1:30","type":"","value":"7"}],"functionName":{"name":"mstore","nativeSrc":"19044:6:30","nodeType":"YulIdentifier","src":"19044:6:30"},"nativeSrc":"19044:29:30","nodeType":"YulFunctionCall","src":"19044:29:30"},"nativeSrc":"19044:29:30","nodeType":"YulExpressionStatement","src":"19044:29:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19093:9:30","nodeType":"YulIdentifier","src":"19093:9:30"},{"kind":"number","nativeSrc":"19104:2:30","nodeType":"YulLiteral","src":"19104:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19089:3:30","nodeType":"YulIdentifier","src":"19089:3:30"},"nativeSrc":"19089:18:30","nodeType":"YulFunctionCall","src":"19089:18:30"},{"hexValue":"65787069726564","kind":"string","nativeSrc":"19109:9:30","nodeType":"YulLiteral","src":"19109:9:30","type":"","value":"expired"}],"functionName":{"name":"mstore","nativeSrc":"19082:6:30","nodeType":"YulIdentifier","src":"19082:6:30"},"nativeSrc":"19082:37:30","nodeType":"YulFunctionCall","src":"19082:37:30"},"nativeSrc":"19082:37:30","nodeType":"YulExpressionStatement","src":"19082:37:30"},{"nativeSrc":"19128:26:30","nodeType":"YulAssignment","src":"19128:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"19140:9:30","nodeType":"YulIdentifier","src":"19140:9:30"},{"kind":"number","nativeSrc":"19151:2:30","nodeType":"YulLiteral","src":"19151:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19136:3:30","nodeType":"YulIdentifier","src":"19136:3:30"},"nativeSrc":"19136:18:30","nodeType":"YulFunctionCall","src":"19136:18:30"},"variableNames":[{"name":"tail","nativeSrc":"19128:4:30","nodeType":"YulIdentifier","src":"19128:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_64ca1ae50619f7f4ab23f4c22c6b85b70cfc49c072d731be4f91487f95764c93__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18830:330:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18981:9:30","nodeType":"YulTypedName","src":"18981:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18995:4:30","nodeType":"YulTypedName","src":"18995:4:30","type":""}],"src":"18830:330:30"},{"body":{"nativeSrc":"19339:160:30","nodeType":"YulBlock","src":"19339:160:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19356:9:30","nodeType":"YulIdentifier","src":"19356:9:30"},{"kind":"number","nativeSrc":"19367:2:30","nodeType":"YulLiteral","src":"19367:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19349:6:30","nodeType":"YulIdentifier","src":"19349:6:30"},"nativeSrc":"19349:21:30","nodeType":"YulFunctionCall","src":"19349:21:30"},"nativeSrc":"19349:21:30","nodeType":"YulExpressionStatement","src":"19349:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19390:9:30","nodeType":"YulIdentifier","src":"19390:9:30"},{"kind":"number","nativeSrc":"19401:2:30","nodeType":"YulLiteral","src":"19401:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19386:3:30","nodeType":"YulIdentifier","src":"19386:3:30"},"nativeSrc":"19386:18:30","nodeType":"YulFunctionCall","src":"19386:18:30"},{"kind":"number","nativeSrc":"19406:2:30","nodeType":"YulLiteral","src":"19406:2:30","type":"","value":"10"}],"functionName":{"name":"mstore","nativeSrc":"19379:6:30","nodeType":"YulIdentifier","src":"19379:6:30"},"nativeSrc":"19379:30:30","nodeType":"YulFunctionCall","src":"19379:30:30"},"nativeSrc":"19379:30:30","nodeType":"YulExpressionStatement","src":"19379:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19429:9:30","nodeType":"YulIdentifier","src":"19429:9:30"},{"kind":"number","nativeSrc":"19440:2:30","nodeType":"YulLiteral","src":"19440:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19425:3:30","nodeType":"YulIdentifier","src":"19425:3:30"},"nativeSrc":"19425:18:30","nodeType":"YulFunctionCall","src":"19425:18:30"},{"hexValue":"6e6f6e63652075736564","kind":"string","nativeSrc":"19445:12:30","nodeType":"YulLiteral","src":"19445:12:30","type":"","value":"nonce used"}],"functionName":{"name":"mstore","nativeSrc":"19418:6:30","nodeType":"YulIdentifier","src":"19418:6:30"},"nativeSrc":"19418:40:30","nodeType":"YulFunctionCall","src":"19418:40:30"},"nativeSrc":"19418:40:30","nodeType":"YulExpressionStatement","src":"19418:40:30"},{"nativeSrc":"19467:26:30","nodeType":"YulAssignment","src":"19467:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"19479:9:30","nodeType":"YulIdentifier","src":"19479:9:30"},{"kind":"number","nativeSrc":"19490:2:30","nodeType":"YulLiteral","src":"19490:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19475:3:30","nodeType":"YulIdentifier","src":"19475:3:30"},"nativeSrc":"19475:18:30","nodeType":"YulFunctionCall","src":"19475:18:30"},"variableNames":[{"name":"tail","nativeSrc":"19467:4:30","nodeType":"YulIdentifier","src":"19467:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_93401b78a9a15fdd9637202256dc22545d2892602bcb5ead8f30e328fe8cde91__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19165:334:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19316:9:30","nodeType":"YulTypedName","src":"19316:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19330:4:30","nodeType":"YulTypedName","src":"19330:4:30","type":""}],"src":"19165:334:30"},{"body":{"nativeSrc":"19678:164:30","nodeType":"YulBlock","src":"19678:164:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19695:9:30","nodeType":"YulIdentifier","src":"19695:9:30"},{"kind":"number","nativeSrc":"19706:2:30","nodeType":"YulLiteral","src":"19706:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19688:6:30","nodeType":"YulIdentifier","src":"19688:6:30"},"nativeSrc":"19688:21:30","nodeType":"YulFunctionCall","src":"19688:21:30"},"nativeSrc":"19688:21:30","nodeType":"YulExpressionStatement","src":"19688:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19729:9:30","nodeType":"YulIdentifier","src":"19729:9:30"},{"kind":"number","nativeSrc":"19740:2:30","nodeType":"YulLiteral","src":"19740:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19725:3:30","nodeType":"YulIdentifier","src":"19725:3:30"},"nativeSrc":"19725:18:30","nodeType":"YulFunctionCall","src":"19725:18:30"},{"kind":"number","nativeSrc":"19745:2:30","nodeType":"YulLiteral","src":"19745:2:30","type":"","value":"14"}],"functionName":{"name":"mstore","nativeSrc":"19718:6:30","nodeType":"YulIdentifier","src":"19718:6:30"},"nativeSrc":"19718:30:30","nodeType":"YulFunctionCall","src":"19718:30:30"},"nativeSrc":"19718:30:30","nodeType":"YulExpressionStatement","src":"19718:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19768:9:30","nodeType":"YulIdentifier","src":"19768:9:30"},{"kind":"number","nativeSrc":"19779:2:30","nodeType":"YulLiteral","src":"19779:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19764:3:30","nodeType":"YulIdentifier","src":"19764:3:30"},"nativeSrc":"19764:18:30","nodeType":"YulFunctionCall","src":"19764:18:30"},{"hexValue":"616c7265616479206d696e746564","kind":"string","nativeSrc":"19784:16:30","nodeType":"YulLiteral","src":"19784:16:30","type":"","value":"already minted"}],"functionName":{"name":"mstore","nativeSrc":"19757:6:30","nodeType":"YulIdentifier","src":"19757:6:30"},"nativeSrc":"19757:44:30","nodeType":"YulFunctionCall","src":"19757:44:30"},"nativeSrc":"19757:44:30","nodeType":"YulExpressionStatement","src":"19757:44:30"},{"nativeSrc":"19810:26:30","nodeType":"YulAssignment","src":"19810:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"19822:9:30","nodeType":"YulIdentifier","src":"19822:9:30"},{"kind":"number","nativeSrc":"19833:2:30","nodeType":"YulLiteral","src":"19833:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19818:3:30","nodeType":"YulIdentifier","src":"19818:3:30"},"nativeSrc":"19818:18:30","nodeType":"YulFunctionCall","src":"19818:18:30"},"variableNames":[{"name":"tail","nativeSrc":"19810:4:30","nodeType":"YulIdentifier","src":"19810:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc1d79576d9c1e03d6ff90e81fd853c5eac89b9ed9cb54114db3e1e1ab962297__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19504:338:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19655:9:30","nodeType":"YulTypedName","src":"19655:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19669:4:30","nodeType":"YulTypedName","src":"19669:4:30","type":""}],"src":"19504:338:30"},{"body":{"nativeSrc":"20021:156:30","nodeType":"YulBlock","src":"20021:156:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20038:9:30","nodeType":"YulIdentifier","src":"20038:9:30"},{"kind":"number","nativeSrc":"20049:2:30","nodeType":"YulLiteral","src":"20049:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"20031:6:30","nodeType":"YulIdentifier","src":"20031:6:30"},"nativeSrc":"20031:21:30","nodeType":"YulFunctionCall","src":"20031:21:30"},"nativeSrc":"20031:21:30","nodeType":"YulExpressionStatement","src":"20031:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20072:9:30","nodeType":"YulIdentifier","src":"20072:9:30"},{"kind":"number","nativeSrc":"20083:2:30","nodeType":"YulLiteral","src":"20083:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20068:3:30","nodeType":"YulIdentifier","src":"20068:3:30"},"nativeSrc":"20068:18:30","nodeType":"YulFunctionCall","src":"20068:18:30"},{"kind":"number","nativeSrc":"20088:1:30","nodeType":"YulLiteral","src":"20088:1:30","type":"","value":"7"}],"functionName":{"name":"mstore","nativeSrc":"20061:6:30","nodeType":"YulIdentifier","src":"20061:6:30"},"nativeSrc":"20061:29:30","nodeType":"YulFunctionCall","src":"20061:29:30"},"nativeSrc":"20061:29:30","nodeType":"YulExpressionStatement","src":"20061:29:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20110:9:30","nodeType":"YulIdentifier","src":"20110:9:30"},{"kind":"number","nativeSrc":"20121:2:30","nodeType":"YulLiteral","src":"20121:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20106:3:30","nodeType":"YulIdentifier","src":"20106:3:30"},"nativeSrc":"20106:18:30","nodeType":"YulFunctionCall","src":"20106:18:30"},{"hexValue":"62616420736967","kind":"string","nativeSrc":"20126:9:30","nodeType":"YulLiteral","src":"20126:9:30","type":"","value":"bad sig"}],"functionName":{"name":"mstore","nativeSrc":"20099:6:30","nodeType":"YulIdentifier","src":"20099:6:30"},"nativeSrc":"20099:37:30","nodeType":"YulFunctionCall","src":"20099:37:30"},"nativeSrc":"20099:37:30","nodeType":"YulExpressionStatement","src":"20099:37:30"},{"nativeSrc":"20145:26:30","nodeType":"YulAssignment","src":"20145:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"20157:9:30","nodeType":"YulIdentifier","src":"20157:9:30"},{"kind":"number","nativeSrc":"20168:2:30","nodeType":"YulLiteral","src":"20168:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20153:3:30","nodeType":"YulIdentifier","src":"20153:3:30"},"nativeSrc":"20153:18:30","nodeType":"YulFunctionCall","src":"20153:18:30"},"variableNames":[{"name":"tail","nativeSrc":"20145:4:30","nodeType":"YulIdentifier","src":"20145:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_2ea973a0052a4e6a834e07d94ae8fecb501158013d52044186e8b1a997ca8d08__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19847:330:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19998:9:30","nodeType":"YulTypedName","src":"19998:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20012:4:30","nodeType":"YulTypedName","src":"20012:4:30","type":""}],"src":"19847:330:30"},{"body":{"nativeSrc":"20290:101:30","nodeType":"YulBlock","src":"20290:101:30","statements":[{"nativeSrc":"20300:26:30","nodeType":"YulAssignment","src":"20300:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"20312:9:30","nodeType":"YulIdentifier","src":"20312:9:30"},{"kind":"number","nativeSrc":"20323:2:30","nodeType":"YulLiteral","src":"20323:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20308:3:30","nodeType":"YulIdentifier","src":"20308:3:30"},"nativeSrc":"20308:18:30","nodeType":"YulFunctionCall","src":"20308:18:30"},"variableNames":[{"name":"tail","nativeSrc":"20300:4:30","nodeType":"YulIdentifier","src":"20300:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20342:9:30","nodeType":"YulIdentifier","src":"20342:9:30"},{"arguments":[{"name":"value0","nativeSrc":"20357:6:30","nodeType":"YulIdentifier","src":"20357:6:30"},{"kind":"number","nativeSrc":"20365:18:30","nodeType":"YulLiteral","src":"20365:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"20353:3:30","nodeType":"YulIdentifier","src":"20353:3:30"},"nativeSrc":"20353:31:30","nodeType":"YulFunctionCall","src":"20353:31:30"}],"functionName":{"name":"mstore","nativeSrc":"20335:6:30","nodeType":"YulIdentifier","src":"20335:6:30"},"nativeSrc":"20335:50:30","nodeType":"YulFunctionCall","src":"20335:50:30"},"nativeSrc":"20335:50:30","nodeType":"YulExpressionStatement","src":"20335:50:30"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"20182:209:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20259:9:30","nodeType":"YulTypedName","src":"20259:9:30","type":""},{"name":"value0","nativeSrc":"20270:6:30","nodeType":"YulTypedName","src":"20270:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20281:4:30","nodeType":"YulTypedName","src":"20281:4:30","type":""}],"src":"20182:209:30"},{"body":{"nativeSrc":"20428:95:30","nodeType":"YulBlock","src":"20428:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20445:1:30","nodeType":"YulLiteral","src":"20445:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"20452:3:30","nodeType":"YulLiteral","src":"20452:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"20457:10:30","nodeType":"YulLiteral","src":"20457:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"20448:3:30","nodeType":"YulIdentifier","src":"20448:3:30"},"nativeSrc":"20448:20:30","nodeType":"YulFunctionCall","src":"20448:20:30"}],"functionName":{"name":"mstore","nativeSrc":"20438:6:30","nodeType":"YulIdentifier","src":"20438:6:30"},"nativeSrc":"20438:31:30","nodeType":"YulFunctionCall","src":"20438:31:30"},"nativeSrc":"20438:31:30","nodeType":"YulExpressionStatement","src":"20438:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20485:1:30","nodeType":"YulLiteral","src":"20485:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"20488:4:30","nodeType":"YulLiteral","src":"20488:4:30","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"20478:6:30","nodeType":"YulIdentifier","src":"20478:6:30"},"nativeSrc":"20478:15:30","nodeType":"YulFunctionCall","src":"20478:15:30"},"nativeSrc":"20478:15:30","nodeType":"YulExpressionStatement","src":"20478:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20509:1:30","nodeType":"YulLiteral","src":"20509:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"20512:4:30","nodeType":"YulLiteral","src":"20512:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20502:6:30","nodeType":"YulIdentifier","src":"20502:6:30"},"nativeSrc":"20502:15:30","nodeType":"YulFunctionCall","src":"20502:15:30"},"nativeSrc":"20502:15:30","nodeType":"YulExpressionStatement","src":"20502:15:30"}]},"name":"panic_error_0x12","nativeSrc":"20396:127:30","nodeType":"YulFunctionDefinition","src":"20396:127:30"},{"body":{"nativeSrc":"20629:102:30","nodeType":"YulBlock","src":"20629:102:30","statements":[{"nativeSrc":"20639:26:30","nodeType":"YulAssignment","src":"20639:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"20651:9:30","nodeType":"YulIdentifier","src":"20651:9:30"},{"kind":"number","nativeSrc":"20662:2:30","nodeType":"YulLiteral","src":"20662:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20647:3:30","nodeType":"YulIdentifier","src":"20647:3:30"},"nativeSrc":"20647:18:30","nodeType":"YulFunctionCall","src":"20647:18:30"},"variableNames":[{"name":"tail","nativeSrc":"20639:4:30","nodeType":"YulIdentifier","src":"20639:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20681:9:30","nodeType":"YulIdentifier","src":"20681:9:30"},{"arguments":[{"name":"value0","nativeSrc":"20696:6:30","nodeType":"YulIdentifier","src":"20696:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20712:3:30","nodeType":"YulLiteral","src":"20712:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"20717:1:30","nodeType":"YulLiteral","src":"20717:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"20708:3:30","nodeType":"YulIdentifier","src":"20708:3:30"},"nativeSrc":"20708:11:30","nodeType":"YulFunctionCall","src":"20708:11:30"},{"kind":"number","nativeSrc":"20721:1:30","nodeType":"YulLiteral","src":"20721:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"20704:3:30","nodeType":"YulIdentifier","src":"20704:3:30"},"nativeSrc":"20704:19:30","nodeType":"YulFunctionCall","src":"20704:19:30"}],"functionName":{"name":"and","nativeSrc":"20692:3:30","nodeType":"YulIdentifier","src":"20692:3:30"},"nativeSrc":"20692:32:30","nodeType":"YulFunctionCall","src":"20692:32:30"}],"functionName":{"name":"mstore","nativeSrc":"20674:6:30","nodeType":"YulIdentifier","src":"20674:6:30"},"nativeSrc":"20674:51:30","nodeType":"YulFunctionCall","src":"20674:51:30"},"nativeSrc":"20674:51:30","nodeType":"YulExpressionStatement","src":"20674:51:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"20528:203:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20598:9:30","nodeType":"YulTypedName","src":"20598:9:30","type":""},{"name":"value0","nativeSrc":"20609:6:30","nodeType":"YulTypedName","src":"20609:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20620:4:30","nodeType":"YulTypedName","src":"20620:4:30","type":""}],"src":"20528:203:30"},{"body":{"nativeSrc":"20817:103:30","nodeType":"YulBlock","src":"20817:103:30","statements":[{"body":{"nativeSrc":"20863:16:30","nodeType":"YulBlock","src":"20863:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20872:1:30","nodeType":"YulLiteral","src":"20872:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"20875:1:30","nodeType":"YulLiteral","src":"20875:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"20865:6:30","nodeType":"YulIdentifier","src":"20865:6:30"},"nativeSrc":"20865:12:30","nodeType":"YulFunctionCall","src":"20865:12:30"},"nativeSrc":"20865:12:30","nodeType":"YulExpressionStatement","src":"20865:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20838:7:30","nodeType":"YulIdentifier","src":"20838:7:30"},{"name":"headStart","nativeSrc":"20847:9:30","nodeType":"YulIdentifier","src":"20847:9:30"}],"functionName":{"name":"sub","nativeSrc":"20834:3:30","nodeType":"YulIdentifier","src":"20834:3:30"},"nativeSrc":"20834:23:30","nodeType":"YulFunctionCall","src":"20834:23:30"},{"kind":"number","nativeSrc":"20859:2:30","nodeType":"YulLiteral","src":"20859:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"20830:3:30","nodeType":"YulIdentifier","src":"20830:3:30"},"nativeSrc":"20830:32:30","nodeType":"YulFunctionCall","src":"20830:32:30"},"nativeSrc":"20827:52:30","nodeType":"YulIf","src":"20827:52:30"},{"nativeSrc":"20888:26:30","nodeType":"YulAssignment","src":"20888:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"20904:9:30","nodeType":"YulIdentifier","src":"20904:9:30"}],"functionName":{"name":"mload","nativeSrc":"20898:5:30","nodeType":"YulIdentifier","src":"20898:5:30"},"nativeSrc":"20898:16:30","nodeType":"YulFunctionCall","src":"20898:16:30"},"variableNames":[{"name":"value0","nativeSrc":"20888:6:30","nodeType":"YulIdentifier","src":"20888:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"20736:184:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20783:9:30","nodeType":"YulTypedName","src":"20783:9:30","type":""},{"name":"dataEnd","nativeSrc":"20794:7:30","nodeType":"YulTypedName","src":"20794:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20806:6:30","nodeType":"YulTypedName","src":"20806:6:30","type":""}],"src":"20736:184:30"},{"body":{"nativeSrc":"21138:276:30","nodeType":"YulBlock","src":"21138:276:30","statements":[{"nativeSrc":"21148:27:30","nodeType":"YulAssignment","src":"21148:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"21160:9:30","nodeType":"YulIdentifier","src":"21160:9:30"},{"kind":"number","nativeSrc":"21171:3:30","nodeType":"YulLiteral","src":"21171:3:30","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"21156:3:30","nodeType":"YulIdentifier","src":"21156:3:30"},"nativeSrc":"21156:19:30","nodeType":"YulFunctionCall","src":"21156:19:30"},"variableNames":[{"name":"tail","nativeSrc":"21148:4:30","nodeType":"YulIdentifier","src":"21148:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21191:9:30","nodeType":"YulIdentifier","src":"21191:9:30"},{"name":"value0","nativeSrc":"21202:6:30","nodeType":"YulIdentifier","src":"21202:6:30"}],"functionName":{"name":"mstore","nativeSrc":"21184:6:30","nodeType":"YulIdentifier","src":"21184:6:30"},"nativeSrc":"21184:25:30","nodeType":"YulFunctionCall","src":"21184:25:30"},"nativeSrc":"21184:25:30","nodeType":"YulExpressionStatement","src":"21184:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21229:9:30","nodeType":"YulIdentifier","src":"21229:9:30"},{"kind":"number","nativeSrc":"21240:2:30","nodeType":"YulLiteral","src":"21240:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21225:3:30","nodeType":"YulIdentifier","src":"21225:3:30"},"nativeSrc":"21225:18:30","nodeType":"YulFunctionCall","src":"21225:18:30"},{"arguments":[{"name":"value1","nativeSrc":"21249:6:30","nodeType":"YulIdentifier","src":"21249:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"21265:3:30","nodeType":"YulLiteral","src":"21265:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"21270:1:30","nodeType":"YulLiteral","src":"21270:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"21261:3:30","nodeType":"YulIdentifier","src":"21261:3:30"},"nativeSrc":"21261:11:30","nodeType":"YulFunctionCall","src":"21261:11:30"},{"kind":"number","nativeSrc":"21274:1:30","nodeType":"YulLiteral","src":"21274:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"21257:3:30","nodeType":"YulIdentifier","src":"21257:3:30"},"nativeSrc":"21257:19:30","nodeType":"YulFunctionCall","src":"21257:19:30"}],"functionName":{"name":"and","nativeSrc":"21245:3:30","nodeType":"YulIdentifier","src":"21245:3:30"},"nativeSrc":"21245:32:30","nodeType":"YulFunctionCall","src":"21245:32:30"}],"functionName":{"name":"mstore","nativeSrc":"21218:6:30","nodeType":"YulIdentifier","src":"21218:6:30"},"nativeSrc":"21218:60:30","nodeType":"YulFunctionCall","src":"21218:60:30"},"nativeSrc":"21218:60:30","nodeType":"YulExpressionStatement","src":"21218:60:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21298:9:30","nodeType":"YulIdentifier","src":"21298:9:30"},{"kind":"number","nativeSrc":"21309:2:30","nodeType":"YulLiteral","src":"21309:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21294:3:30","nodeType":"YulIdentifier","src":"21294:3:30"},"nativeSrc":"21294:18:30","nodeType":"YulFunctionCall","src":"21294:18:30"},{"name":"value2","nativeSrc":"21314:6:30","nodeType":"YulIdentifier","src":"21314:6:30"}],"functionName":{"name":"mstore","nativeSrc":"21287:6:30","nodeType":"YulIdentifier","src":"21287:6:30"},"nativeSrc":"21287:34:30","nodeType":"YulFunctionCall","src":"21287:34:30"},"nativeSrc":"21287:34:30","nodeType":"YulExpressionStatement","src":"21287:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21341:9:30","nodeType":"YulIdentifier","src":"21341:9:30"},{"kind":"number","nativeSrc":"21352:2:30","nodeType":"YulLiteral","src":"21352:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21337:3:30","nodeType":"YulIdentifier","src":"21337:3:30"},"nativeSrc":"21337:18:30","nodeType":"YulFunctionCall","src":"21337:18:30"},{"name":"value3","nativeSrc":"21357:6:30","nodeType":"YulIdentifier","src":"21357:6:30"}],"functionName":{"name":"mstore","nativeSrc":"21330:6:30","nodeType":"YulIdentifier","src":"21330:6:30"},"nativeSrc":"21330:34:30","nodeType":"YulFunctionCall","src":"21330:34:30"},"nativeSrc":"21330:34:30","nodeType":"YulExpressionStatement","src":"21330:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21384:9:30","nodeType":"YulIdentifier","src":"21384:9:30"},{"kind":"number","nativeSrc":"21395:3:30","nodeType":"YulLiteral","src":"21395:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21380:3:30","nodeType":"YulIdentifier","src":"21380:3:30"},"nativeSrc":"21380:19:30","nodeType":"YulFunctionCall","src":"21380:19:30"},{"name":"value4","nativeSrc":"21401:6:30","nodeType":"YulIdentifier","src":"21401:6:30"}],"functionName":{"name":"mstore","nativeSrc":"21373:6:30","nodeType":"YulIdentifier","src":"21373:6:30"},"nativeSrc":"21373:35:30","nodeType":"YulFunctionCall","src":"21373:35:30"},"nativeSrc":"21373:35:30","nodeType":"YulExpressionStatement","src":"21373:35:30"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nativeSrc":"20925:489:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21075:9:30","nodeType":"YulTypedName","src":"21075:9:30","type":""},{"name":"value4","nativeSrc":"21086:6:30","nodeType":"YulTypedName","src":"21086:6:30","type":""},{"name":"value3","nativeSrc":"21094:6:30","nodeType":"YulTypedName","src":"21094:6:30","type":""},{"name":"value2","nativeSrc":"21102:6:30","nodeType":"YulTypedName","src":"21102:6:30","type":""},{"name":"value1","nativeSrc":"21110:6:30","nodeType":"YulTypedName","src":"21110:6:30","type":""},{"name":"value0","nativeSrc":"21118:6:30","nodeType":"YulTypedName","src":"21118:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21129:4:30","nodeType":"YulTypedName","src":"21129:4:30","type":""}],"src":"20925:489:30"},{"body":{"nativeSrc":"21667:144:30","nodeType":"YulBlock","src":"21667:144:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"21684:3:30","nodeType":"YulIdentifier","src":"21684:3:30"},{"arguments":[{"kind":"number","nativeSrc":"21693:3:30","nodeType":"YulLiteral","src":"21693:3:30","type":"","value":"240"},{"kind":"number","nativeSrc":"21698:4:30","nodeType":"YulLiteral","src":"21698:4:30","type":"","value":"6401"}],"functionName":{"name":"shl","nativeSrc":"21689:3:30","nodeType":"YulIdentifier","src":"21689:3:30"},"nativeSrc":"21689:14:30","nodeType":"YulFunctionCall","src":"21689:14:30"}],"functionName":{"name":"mstore","nativeSrc":"21677:6:30","nodeType":"YulIdentifier","src":"21677:6:30"},"nativeSrc":"21677:27:30","nodeType":"YulFunctionCall","src":"21677:27:30"},"nativeSrc":"21677:27:30","nodeType":"YulExpressionStatement","src":"21677:27:30"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"21724:3:30","nodeType":"YulIdentifier","src":"21724:3:30"},{"kind":"number","nativeSrc":"21729:1:30","nodeType":"YulLiteral","src":"21729:1:30","type":"","value":"2"}],"functionName":{"name":"add","nativeSrc":"21720:3:30","nodeType":"YulIdentifier","src":"21720:3:30"},"nativeSrc":"21720:11:30","nodeType":"YulFunctionCall","src":"21720:11:30"},{"name":"value0","nativeSrc":"21733:6:30","nodeType":"YulIdentifier","src":"21733:6:30"}],"functionName":{"name":"mstore","nativeSrc":"21713:6:30","nodeType":"YulIdentifier","src":"21713:6:30"},"nativeSrc":"21713:27:30","nodeType":"YulFunctionCall","src":"21713:27:30"},"nativeSrc":"21713:27:30","nodeType":"YulExpressionStatement","src":"21713:27:30"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"21760:3:30","nodeType":"YulIdentifier","src":"21760:3:30"},{"kind":"number","nativeSrc":"21765:2:30","nodeType":"YulLiteral","src":"21765:2:30","type":"","value":"34"}],"functionName":{"name":"add","nativeSrc":"21756:3:30","nodeType":"YulIdentifier","src":"21756:3:30"},"nativeSrc":"21756:12:30","nodeType":"YulFunctionCall","src":"21756:12:30"},{"name":"value1","nativeSrc":"21770:6:30","nodeType":"YulIdentifier","src":"21770:6:30"}],"functionName":{"name":"mstore","nativeSrc":"21749:6:30","nodeType":"YulIdentifier","src":"21749:6:30"},"nativeSrc":"21749:28:30","nodeType":"YulFunctionCall","src":"21749:28:30"},"nativeSrc":"21749:28:30","nodeType":"YulExpressionStatement","src":"21749:28:30"},{"nativeSrc":"21786:19:30","nodeType":"YulAssignment","src":"21786:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"21797:3:30","nodeType":"YulIdentifier","src":"21797:3:30"},{"kind":"number","nativeSrc":"21802:2:30","nodeType":"YulLiteral","src":"21802:2:30","type":"","value":"66"}],"functionName":{"name":"add","nativeSrc":"21793:3:30","nodeType":"YulIdentifier","src":"21793:3:30"},"nativeSrc":"21793:12:30","nodeType":"YulFunctionCall","src":"21793:12:30"},"variableNames":[{"name":"end","nativeSrc":"21786:3:30","nodeType":"YulIdentifier","src":"21786:3:30"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nativeSrc":"21419:392:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21635:3:30","nodeType":"YulTypedName","src":"21635:3:30","type":""},{"name":"value1","nativeSrc":"21640:6:30","nodeType":"YulTypedName","src":"21640:6:30","type":""},{"name":"value0","nativeSrc":"21648:6:30","nodeType":"YulTypedName","src":"21648:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21659:3:30","nodeType":"YulTypedName","src":"21659:3:30","type":""}],"src":"21419:392:30"},{"body":{"nativeSrc":"21848:95:30","nodeType":"YulBlock","src":"21848:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21865:1:30","nodeType":"YulLiteral","src":"21865:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"21872:3:30","nodeType":"YulLiteral","src":"21872:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"21877:10:30","nodeType":"YulLiteral","src":"21877:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"21868:3:30","nodeType":"YulIdentifier","src":"21868:3:30"},"nativeSrc":"21868:20:30","nodeType":"YulFunctionCall","src":"21868:20:30"}],"functionName":{"name":"mstore","nativeSrc":"21858:6:30","nodeType":"YulIdentifier","src":"21858:6:30"},"nativeSrc":"21858:31:30","nodeType":"YulFunctionCall","src":"21858:31:30"},"nativeSrc":"21858:31:30","nodeType":"YulExpressionStatement","src":"21858:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21905:1:30","nodeType":"YulLiteral","src":"21905:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"21908:4:30","nodeType":"YulLiteral","src":"21908:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"21898:6:30","nodeType":"YulIdentifier","src":"21898:6:30"},"nativeSrc":"21898:15:30","nodeType":"YulFunctionCall","src":"21898:15:30"},"nativeSrc":"21898:15:30","nodeType":"YulExpressionStatement","src":"21898:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21929:1:30","nodeType":"YulLiteral","src":"21929:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"21932:4:30","nodeType":"YulLiteral","src":"21932:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21922:6:30","nodeType":"YulIdentifier","src":"21922:6:30"},"nativeSrc":"21922:15:30","nodeType":"YulFunctionCall","src":"21922:15:30"},"nativeSrc":"21922:15:30","nodeType":"YulExpressionStatement","src":"21922:15:30"}]},"name":"panic_error_0x11","nativeSrc":"21816:127:30","nodeType":"YulFunctionDefinition","src":"21816:127:30"},{"body":{"nativeSrc":"21994:102:30","nodeType":"YulBlock","src":"21994:102:30","statements":[{"nativeSrc":"22004:38:30","nodeType":"YulAssignment","src":"22004:38:30","value":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"22019:1:30","nodeType":"YulIdentifier","src":"22019:1:30"},{"kind":"number","nativeSrc":"22022:4:30","nodeType":"YulLiteral","src":"22022:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"22015:3:30","nodeType":"YulIdentifier","src":"22015:3:30"},"nativeSrc":"22015:12:30","nodeType":"YulFunctionCall","src":"22015:12:30"},{"arguments":[{"name":"y","nativeSrc":"22033:1:30","nodeType":"YulIdentifier","src":"22033:1:30"},{"kind":"number","nativeSrc":"22036:4:30","nodeType":"YulLiteral","src":"22036:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"22029:3:30","nodeType":"YulIdentifier","src":"22029:3:30"},"nativeSrc":"22029:12:30","nodeType":"YulFunctionCall","src":"22029:12:30"}],"functionName":{"name":"add","nativeSrc":"22011:3:30","nodeType":"YulIdentifier","src":"22011:3:30"},"nativeSrc":"22011:31:30","nodeType":"YulFunctionCall","src":"22011:31:30"},"variableNames":[{"name":"sum","nativeSrc":"22004:3:30","nodeType":"YulIdentifier","src":"22004:3:30"}]},{"body":{"nativeSrc":"22068:22:30","nodeType":"YulBlock","src":"22068:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"22070:16:30","nodeType":"YulIdentifier","src":"22070:16:30"},"nativeSrc":"22070:18:30","nodeType":"YulFunctionCall","src":"22070:18:30"},"nativeSrc":"22070:18:30","nodeType":"YulExpressionStatement","src":"22070:18:30"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"22057:3:30","nodeType":"YulIdentifier","src":"22057:3:30"},{"kind":"number","nativeSrc":"22062:4:30","nodeType":"YulLiteral","src":"22062:4:30","type":"","value":"0xff"}],"functionName":{"name":"gt","nativeSrc":"22054:2:30","nodeType":"YulIdentifier","src":"22054:2:30"},"nativeSrc":"22054:13:30","nodeType":"YulFunctionCall","src":"22054:13:30"},"nativeSrc":"22051:39:30","nodeType":"YulIf","src":"22051:39:30"}]},"name":"checked_add_t_uint8","nativeSrc":"21948:148:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"21977:1:30","nodeType":"YulTypedName","src":"21977:1:30","type":""},{"name":"y","nativeSrc":"21980:1:30","nodeType":"YulTypedName","src":"21980:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"21986:3:30","nodeType":"YulTypedName","src":"21986:3:30","type":""}],"src":"21948:148:30"},{"body":{"nativeSrc":"22282:217:30","nodeType":"YulBlock","src":"22282:217:30","statements":[{"nativeSrc":"22292:27:30","nodeType":"YulAssignment","src":"22292:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"22304:9:30","nodeType":"YulIdentifier","src":"22304:9:30"},{"kind":"number","nativeSrc":"22315:3:30","nodeType":"YulLiteral","src":"22315:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22300:3:30","nodeType":"YulIdentifier","src":"22300:3:30"},"nativeSrc":"22300:19:30","nodeType":"YulFunctionCall","src":"22300:19:30"},"variableNames":[{"name":"tail","nativeSrc":"22292:4:30","nodeType":"YulIdentifier","src":"22292:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22335:9:30","nodeType":"YulIdentifier","src":"22335:9:30"},{"name":"value0","nativeSrc":"22346:6:30","nodeType":"YulIdentifier","src":"22346:6:30"}],"functionName":{"name":"mstore","nativeSrc":"22328:6:30","nodeType":"YulIdentifier","src":"22328:6:30"},"nativeSrc":"22328:25:30","nodeType":"YulFunctionCall","src":"22328:25:30"},"nativeSrc":"22328:25:30","nodeType":"YulExpressionStatement","src":"22328:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22373:9:30","nodeType":"YulIdentifier","src":"22373:9:30"},{"kind":"number","nativeSrc":"22384:2:30","nodeType":"YulLiteral","src":"22384:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22369:3:30","nodeType":"YulIdentifier","src":"22369:3:30"},"nativeSrc":"22369:18:30","nodeType":"YulFunctionCall","src":"22369:18:30"},{"arguments":[{"name":"value1","nativeSrc":"22393:6:30","nodeType":"YulIdentifier","src":"22393:6:30"},{"kind":"number","nativeSrc":"22401:4:30","nodeType":"YulLiteral","src":"22401:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"22389:3:30","nodeType":"YulIdentifier","src":"22389:3:30"},"nativeSrc":"22389:17:30","nodeType":"YulFunctionCall","src":"22389:17:30"}],"functionName":{"name":"mstore","nativeSrc":"22362:6:30","nodeType":"YulIdentifier","src":"22362:6:30"},"nativeSrc":"22362:45:30","nodeType":"YulFunctionCall","src":"22362:45:30"},"nativeSrc":"22362:45:30","nodeType":"YulExpressionStatement","src":"22362:45:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22427:9:30","nodeType":"YulIdentifier","src":"22427:9:30"},{"kind":"number","nativeSrc":"22438:2:30","nodeType":"YulLiteral","src":"22438:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22423:3:30","nodeType":"YulIdentifier","src":"22423:3:30"},"nativeSrc":"22423:18:30","nodeType":"YulFunctionCall","src":"22423:18:30"},{"name":"value2","nativeSrc":"22443:6:30","nodeType":"YulIdentifier","src":"22443:6:30"}],"functionName":{"name":"mstore","nativeSrc":"22416:6:30","nodeType":"YulIdentifier","src":"22416:6:30"},"nativeSrc":"22416:34:30","nodeType":"YulFunctionCall","src":"22416:34:30"},"nativeSrc":"22416:34:30","nodeType":"YulExpressionStatement","src":"22416:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22470:9:30","nodeType":"YulIdentifier","src":"22470:9:30"},{"kind":"number","nativeSrc":"22481:2:30","nodeType":"YulLiteral","src":"22481:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22466:3:30","nodeType":"YulIdentifier","src":"22466:3:30"},"nativeSrc":"22466:18:30","nodeType":"YulFunctionCall","src":"22466:18:30"},{"name":"value3","nativeSrc":"22486:6:30","nodeType":"YulIdentifier","src":"22486:6:30"}],"functionName":{"name":"mstore","nativeSrc":"22459:6:30","nodeType":"YulIdentifier","src":"22459:6:30"},"nativeSrc":"22459:34:30","nodeType":"YulFunctionCall","src":"22459:34:30"},"nativeSrc":"22459:34:30","nodeType":"YulExpressionStatement","src":"22459:34:30"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"22101:398:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22227:9:30","nodeType":"YulTypedName","src":"22227:9:30","type":""},{"name":"value3","nativeSrc":"22238:6:30","nodeType":"YulTypedName","src":"22238:6:30","type":""},{"name":"value2","nativeSrc":"22246:6:30","nodeType":"YulTypedName","src":"22246:6:30","type":""},{"name":"value1","nativeSrc":"22254:6:30","nodeType":"YulTypedName","src":"22254:6:30","type":""},{"name":"value0","nativeSrc":"22262:6:30","nodeType":"YulTypedName","src":"22262:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22273:4:30","nodeType":"YulTypedName","src":"22273:4:30","type":""}],"src":"22101:398:30"},{"body":{"nativeSrc":"22642:61:30","nodeType":"YulBlock","src":"22642:61:30","statements":[{"nativeSrc":"22652:45:30","nodeType":"YulAssignment","src":"22652:45:30","value":{"arguments":[{"name":"value0","nativeSrc":"22685:6:30","nodeType":"YulIdentifier","src":"22685:6:30"},{"name":"pos","nativeSrc":"22693:3:30","nodeType":"YulIdentifier","src":"22693:3:30"}],"functionName":{"name":"abi_encode_string_storage","nativeSrc":"22659:25:30","nodeType":"YulIdentifier","src":"22659:25:30"},"nativeSrc":"22659:38:30","nodeType":"YulFunctionCall","src":"22659:38:30"},"variableNames":[{"name":"end","nativeSrc":"22652:3:30","nodeType":"YulIdentifier","src":"22652:3:30"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"22504:199:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22618:3:30","nodeType":"YulTypedName","src":"22618:3:30","type":""},{"name":"value0","nativeSrc":"22623:6:30","nodeType":"YulTypedName","src":"22623:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22634:3:30","nodeType":"YulTypedName","src":"22634:3:30","type":""}],"src":"22504:199:30"},{"body":{"nativeSrc":"22921:276:30","nodeType":"YulBlock","src":"22921:276:30","statements":[{"nativeSrc":"22931:27:30","nodeType":"YulAssignment","src":"22931:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"22943:9:30","nodeType":"YulIdentifier","src":"22943:9:30"},{"kind":"number","nativeSrc":"22954:3:30","nodeType":"YulLiteral","src":"22954:3:30","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"22939:3:30","nodeType":"YulIdentifier","src":"22939:3:30"},"nativeSrc":"22939:19:30","nodeType":"YulFunctionCall","src":"22939:19:30"},"variableNames":[{"name":"tail","nativeSrc":"22931:4:30","nodeType":"YulIdentifier","src":"22931:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22974:9:30","nodeType":"YulIdentifier","src":"22974:9:30"},{"name":"value0","nativeSrc":"22985:6:30","nodeType":"YulIdentifier","src":"22985:6:30"}],"functionName":{"name":"mstore","nativeSrc":"22967:6:30","nodeType":"YulIdentifier","src":"22967:6:30"},"nativeSrc":"22967:25:30","nodeType":"YulFunctionCall","src":"22967:25:30"},"nativeSrc":"22967:25:30","nodeType":"YulExpressionStatement","src":"22967:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23012:9:30","nodeType":"YulIdentifier","src":"23012:9:30"},{"kind":"number","nativeSrc":"23023:2:30","nodeType":"YulLiteral","src":"23023:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23008:3:30","nodeType":"YulIdentifier","src":"23008:3:30"},"nativeSrc":"23008:18:30","nodeType":"YulFunctionCall","src":"23008:18:30"},{"name":"value1","nativeSrc":"23028:6:30","nodeType":"YulIdentifier","src":"23028:6:30"}],"functionName":{"name":"mstore","nativeSrc":"23001:6:30","nodeType":"YulIdentifier","src":"23001:6:30"},"nativeSrc":"23001:34:30","nodeType":"YulFunctionCall","src":"23001:34:30"},"nativeSrc":"23001:34:30","nodeType":"YulExpressionStatement","src":"23001:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23055:9:30","nodeType":"YulIdentifier","src":"23055:9:30"},{"kind":"number","nativeSrc":"23066:2:30","nodeType":"YulLiteral","src":"23066:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23051:3:30","nodeType":"YulIdentifier","src":"23051:3:30"},"nativeSrc":"23051:18:30","nodeType":"YulFunctionCall","src":"23051:18:30"},{"name":"value2","nativeSrc":"23071:6:30","nodeType":"YulIdentifier","src":"23071:6:30"}],"functionName":{"name":"mstore","nativeSrc":"23044:6:30","nodeType":"YulIdentifier","src":"23044:6:30"},"nativeSrc":"23044:34:30","nodeType":"YulFunctionCall","src":"23044:34:30"},"nativeSrc":"23044:34:30","nodeType":"YulExpressionStatement","src":"23044:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23098:9:30","nodeType":"YulIdentifier","src":"23098:9:30"},{"kind":"number","nativeSrc":"23109:2:30","nodeType":"YulLiteral","src":"23109:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23094:3:30","nodeType":"YulIdentifier","src":"23094:3:30"},"nativeSrc":"23094:18:30","nodeType":"YulFunctionCall","src":"23094:18:30"},{"name":"value3","nativeSrc":"23114:6:30","nodeType":"YulIdentifier","src":"23114:6:30"}],"functionName":{"name":"mstore","nativeSrc":"23087:6:30","nodeType":"YulIdentifier","src":"23087:6:30"},"nativeSrc":"23087:34:30","nodeType":"YulFunctionCall","src":"23087:34:30"},"nativeSrc":"23087:34:30","nodeType":"YulExpressionStatement","src":"23087:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23141:9:30","nodeType":"YulIdentifier","src":"23141:9:30"},{"kind":"number","nativeSrc":"23152:3:30","nodeType":"YulLiteral","src":"23152:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"23137:3:30","nodeType":"YulIdentifier","src":"23137:3:30"},"nativeSrc":"23137:19:30","nodeType":"YulFunctionCall","src":"23137:19:30"},{"arguments":[{"name":"value4","nativeSrc":"23162:6:30","nodeType":"YulIdentifier","src":"23162:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"23178:3:30","nodeType":"YulLiteral","src":"23178:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"23183:1:30","nodeType":"YulLiteral","src":"23183:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"23174:3:30","nodeType":"YulIdentifier","src":"23174:3:30"},"nativeSrc":"23174:11:30","nodeType":"YulFunctionCall","src":"23174:11:30"},{"kind":"number","nativeSrc":"23187:1:30","nodeType":"YulLiteral","src":"23187:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"23170:3:30","nodeType":"YulIdentifier","src":"23170:3:30"},"nativeSrc":"23170:19:30","nodeType":"YulFunctionCall","src":"23170:19:30"}],"functionName":{"name":"and","nativeSrc":"23158:3:30","nodeType":"YulIdentifier","src":"23158:3:30"},"nativeSrc":"23158:32:30","nodeType":"YulFunctionCall","src":"23158:32:30"}],"functionName":{"name":"mstore","nativeSrc":"23130:6:30","nodeType":"YulIdentifier","src":"23130:6:30"},"nativeSrc":"23130:61:30","nodeType":"YulFunctionCall","src":"23130:61:30"},"nativeSrc":"23130:61:30","nodeType":"YulExpressionStatement","src":"23130:61:30"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"22708:489:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22858:9:30","nodeType":"YulTypedName","src":"22858:9:30","type":""},{"name":"value4","nativeSrc":"22869:6:30","nodeType":"YulTypedName","src":"22869:6:30","type":""},{"name":"value3","nativeSrc":"22877:6:30","nodeType":"YulTypedName","src":"22877:6:30","type":""},{"name":"value2","nativeSrc":"22885:6:30","nodeType":"YulTypedName","src":"22885:6:30","type":""},{"name":"value1","nativeSrc":"22893:6:30","nodeType":"YulTypedName","src":"22893:6:30","type":""},{"name":"value0","nativeSrc":"22901:6:30","nodeType":"YulTypedName","src":"22901:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22912:4:30","nodeType":"YulTypedName","src":"22912:4:30","type":""}],"src":"22708:489:30"},{"body":{"nativeSrc":"23331:145:30","nodeType":"YulBlock","src":"23331:145:30","statements":[{"nativeSrc":"23341:26:30","nodeType":"YulAssignment","src":"23341:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"23353:9:30","nodeType":"YulIdentifier","src":"23353:9:30"},{"kind":"number","nativeSrc":"23364:2:30","nodeType":"YulLiteral","src":"23364:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23349:3:30","nodeType":"YulIdentifier","src":"23349:3:30"},"nativeSrc":"23349:18:30","nodeType":"YulFunctionCall","src":"23349:18:30"},"variableNames":[{"name":"tail","nativeSrc":"23341:4:30","nodeType":"YulIdentifier","src":"23341:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"23383:9:30","nodeType":"YulIdentifier","src":"23383:9:30"},{"arguments":[{"name":"value0","nativeSrc":"23398:6:30","nodeType":"YulIdentifier","src":"23398:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"23414:3:30","nodeType":"YulLiteral","src":"23414:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"23419:1:30","nodeType":"YulLiteral","src":"23419:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"23410:3:30","nodeType":"YulIdentifier","src":"23410:3:30"},"nativeSrc":"23410:11:30","nodeType":"YulFunctionCall","src":"23410:11:30"},{"kind":"number","nativeSrc":"23423:1:30","nodeType":"YulLiteral","src":"23423:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"23406:3:30","nodeType":"YulIdentifier","src":"23406:3:30"},"nativeSrc":"23406:19:30","nodeType":"YulFunctionCall","src":"23406:19:30"}],"functionName":{"name":"and","nativeSrc":"23394:3:30","nodeType":"YulIdentifier","src":"23394:3:30"},"nativeSrc":"23394:32:30","nodeType":"YulFunctionCall","src":"23394:32:30"}],"functionName":{"name":"mstore","nativeSrc":"23376:6:30","nodeType":"YulIdentifier","src":"23376:6:30"},"nativeSrc":"23376:51:30","nodeType":"YulFunctionCall","src":"23376:51:30"},"nativeSrc":"23376:51:30","nodeType":"YulExpressionStatement","src":"23376:51:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23447:9:30","nodeType":"YulIdentifier","src":"23447:9:30"},{"kind":"number","nativeSrc":"23458:2:30","nodeType":"YulLiteral","src":"23458:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23443:3:30","nodeType":"YulIdentifier","src":"23443:3:30"},"nativeSrc":"23443:18:30","nodeType":"YulFunctionCall","src":"23443:18:30"},{"name":"value1","nativeSrc":"23463:6:30","nodeType":"YulIdentifier","src":"23463:6:30"}],"functionName":{"name":"mstore","nativeSrc":"23436:6:30","nodeType":"YulIdentifier","src":"23436:6:30"},"nativeSrc":"23436:34:30","nodeType":"YulFunctionCall","src":"23436:34:30"},"nativeSrc":"23436:34:30","nodeType":"YulExpressionStatement","src":"23436:34:30"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"23202:274:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23292:9:30","nodeType":"YulTypedName","src":"23292:9:30","type":""},{"name":"value1","nativeSrc":"23303:6:30","nodeType":"YulTypedName","src":"23303:6:30","type":""},{"name":"value0","nativeSrc":"23311:6:30","nodeType":"YulTypedName","src":"23311:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23322:4:30","nodeType":"YulTypedName","src":"23322:4:30","type":""}],"src":"23202:274:30"},{"body":{"nativeSrc":"23655:158:30","nodeType":"YulBlock","src":"23655:158:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"23672:9:30","nodeType":"YulIdentifier","src":"23672:9:30"},{"kind":"number","nativeSrc":"23683:2:30","nodeType":"YulLiteral","src":"23683:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"23665:6:30","nodeType":"YulIdentifier","src":"23665:6:30"},"nativeSrc":"23665:21:30","nodeType":"YulFunctionCall","src":"23665:21:30"},"nativeSrc":"23665:21:30","nodeType":"YulExpressionStatement","src":"23665:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23706:9:30","nodeType":"YulIdentifier","src":"23706:9:30"},{"kind":"number","nativeSrc":"23717:2:30","nodeType":"YulLiteral","src":"23717:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23702:3:30","nodeType":"YulIdentifier","src":"23702:3:30"},"nativeSrc":"23702:18:30","nodeType":"YulFunctionCall","src":"23702:18:30"},{"kind":"number","nativeSrc":"23722:1:30","nodeType":"YulLiteral","src":"23722:1:30","type":"","value":"9"}],"functionName":{"name":"mstore","nativeSrc":"23695:6:30","nodeType":"YulIdentifier","src":"23695:6:30"},"nativeSrc":"23695:29:30","nodeType":"YulFunctionCall","src":"23695:29:30"},"nativeSrc":"23695:29:30","nodeType":"YulExpressionStatement","src":"23695:29:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23744:9:30","nodeType":"YulIdentifier","src":"23744:9:30"},{"kind":"number","nativeSrc":"23755:2:30","nodeType":"YulLiteral","src":"23755:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23740:3:30","nodeType":"YulIdentifier","src":"23740:3:30"},"nativeSrc":"23740:18:30","nodeType":"YulFunctionCall","src":"23740:18:30"},{"hexValue":"736f756c626f756e64","kind":"string","nativeSrc":"23760:11:30","nodeType":"YulLiteral","src":"23760:11:30","type":"","value":"soulbound"}],"functionName":{"name":"mstore","nativeSrc":"23733:6:30","nodeType":"YulIdentifier","src":"23733:6:30"},"nativeSrc":"23733:39:30","nodeType":"YulFunctionCall","src":"23733:39:30"},"nativeSrc":"23733:39:30","nodeType":"YulExpressionStatement","src":"23733:39:30"},{"nativeSrc":"23781:26:30","nodeType":"YulAssignment","src":"23781:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"23793:9:30","nodeType":"YulIdentifier","src":"23793:9:30"},{"kind":"number","nativeSrc":"23804:2:30","nodeType":"YulLiteral","src":"23804:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23789:3:30","nodeType":"YulIdentifier","src":"23789:3:30"},"nativeSrc":"23789:18:30","nodeType":"YulFunctionCall","src":"23789:18:30"},"variableNames":[{"name":"tail","nativeSrc":"23781:4:30","nodeType":"YulIdentifier","src":"23781:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_9e7ed7f8e6dcd193d98e2fd5ebd44790ad3072ac13a6c8399c17d661a1faa4bd__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23481:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23632:9:30","nodeType":"YulTypedName","src":"23632:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23646:4:30","nodeType":"YulTypedName","src":"23646:4:30","type":""}],"src":"23481:332:30"},{"body":{"nativeSrc":"24049:330:30","nodeType":"YulBlock","src":"24049:330:30","statements":[{"nativeSrc":"24059:29:30","nodeType":"YulVariableDeclaration","src":"24059:29:30","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"24077:3:30","nodeType":"YulLiteral","src":"24077:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"24082:1:30","nodeType":"YulLiteral","src":"24082:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"24073:3:30","nodeType":"YulIdentifier","src":"24073:3:30"},"nativeSrc":"24073:11:30","nodeType":"YulFunctionCall","src":"24073:11:30"},{"kind":"number","nativeSrc":"24086:1:30","nodeType":"YulLiteral","src":"24086:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"24069:3:30","nodeType":"YulIdentifier","src":"24069:3:30"},"nativeSrc":"24069:19:30","nodeType":"YulFunctionCall","src":"24069:19:30"},"variables":[{"name":"_1","nativeSrc":"24063:2:30","nodeType":"YulTypedName","src":"24063:2:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"24104:9:30","nodeType":"YulIdentifier","src":"24104:9:30"},{"arguments":[{"name":"value0","nativeSrc":"24119:6:30","nodeType":"YulIdentifier","src":"24119:6:30"},{"name":"_1","nativeSrc":"24127:2:30","nodeType":"YulIdentifier","src":"24127:2:30"}],"functionName":{"name":"and","nativeSrc":"24115:3:30","nodeType":"YulIdentifier","src":"24115:3:30"},"nativeSrc":"24115:15:30","nodeType":"YulFunctionCall","src":"24115:15:30"}],"functionName":{"name":"mstore","nativeSrc":"24097:6:30","nodeType":"YulIdentifier","src":"24097:6:30"},"nativeSrc":"24097:34:30","nodeType":"YulFunctionCall","src":"24097:34:30"},"nativeSrc":"24097:34:30","nodeType":"YulExpressionStatement","src":"24097:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24151:9:30","nodeType":"YulIdentifier","src":"24151:9:30"},{"kind":"number","nativeSrc":"24162:2:30","nodeType":"YulLiteral","src":"24162:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24147:3:30","nodeType":"YulIdentifier","src":"24147:3:30"},"nativeSrc":"24147:18:30","nodeType":"YulFunctionCall","src":"24147:18:30"},{"arguments":[{"name":"value1","nativeSrc":"24171:6:30","nodeType":"YulIdentifier","src":"24171:6:30"},{"name":"_1","nativeSrc":"24179:2:30","nodeType":"YulIdentifier","src":"24179:2:30"}],"functionName":{"name":"and","nativeSrc":"24167:3:30","nodeType":"YulIdentifier","src":"24167:3:30"},"nativeSrc":"24167:15:30","nodeType":"YulFunctionCall","src":"24167:15:30"}],"functionName":{"name":"mstore","nativeSrc":"24140:6:30","nodeType":"YulIdentifier","src":"24140:6:30"},"nativeSrc":"24140:43:30","nodeType":"YulFunctionCall","src":"24140:43:30"},"nativeSrc":"24140:43:30","nodeType":"YulExpressionStatement","src":"24140:43:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24203:9:30","nodeType":"YulIdentifier","src":"24203:9:30"},{"kind":"number","nativeSrc":"24214:2:30","nodeType":"YulLiteral","src":"24214:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24199:3:30","nodeType":"YulIdentifier","src":"24199:3:30"},"nativeSrc":"24199:18:30","nodeType":"YulFunctionCall","src":"24199:18:30"},{"name":"value2","nativeSrc":"24219:6:30","nodeType":"YulIdentifier","src":"24219:6:30"}],"functionName":{"name":"mstore","nativeSrc":"24192:6:30","nodeType":"YulIdentifier","src":"24192:6:30"},"nativeSrc":"24192:34:30","nodeType":"YulFunctionCall","src":"24192:34:30"},"nativeSrc":"24192:34:30","nodeType":"YulExpressionStatement","src":"24192:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24246:9:30","nodeType":"YulIdentifier","src":"24246:9:30"},{"kind":"number","nativeSrc":"24257:2:30","nodeType":"YulLiteral","src":"24257:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24242:3:30","nodeType":"YulIdentifier","src":"24242:3:30"},"nativeSrc":"24242:18:30","nodeType":"YulFunctionCall","src":"24242:18:30"},{"name":"value3","nativeSrc":"24262:6:30","nodeType":"YulIdentifier","src":"24262:6:30"}],"functionName":{"name":"mstore","nativeSrc":"24235:6:30","nodeType":"YulIdentifier","src":"24235:6:30"},"nativeSrc":"24235:34:30","nodeType":"YulFunctionCall","src":"24235:34:30"},"nativeSrc":"24235:34:30","nodeType":"YulExpressionStatement","src":"24235:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24289:9:30","nodeType":"YulIdentifier","src":"24289:9:30"},{"kind":"number","nativeSrc":"24300:3:30","nodeType":"YulLiteral","src":"24300:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"24285:3:30","nodeType":"YulIdentifier","src":"24285:3:30"},"nativeSrc":"24285:19:30","nodeType":"YulFunctionCall","src":"24285:19:30"},{"kind":"number","nativeSrc":"24306:3:30","nodeType":"YulLiteral","src":"24306:3:30","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"24278:6:30","nodeType":"YulIdentifier","src":"24278:6:30"},"nativeSrc":"24278:32:30","nodeType":"YulFunctionCall","src":"24278:32:30"},"nativeSrc":"24278:32:30","nodeType":"YulExpressionStatement","src":"24278:32:30"},{"nativeSrc":"24319:54:30","nodeType":"YulAssignment","src":"24319:54:30","value":{"arguments":[{"name":"value4","nativeSrc":"24345:6:30","nodeType":"YulIdentifier","src":"24345:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"24357:9:30","nodeType":"YulIdentifier","src":"24357:9:30"},{"kind":"number","nativeSrc":"24368:3:30","nodeType":"YulLiteral","src":"24368:3:30","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"24353:3:30","nodeType":"YulIdentifier","src":"24353:3:30"},"nativeSrc":"24353:19:30","nodeType":"YulFunctionCall","src":"24353:19:30"}],"functionName":{"name":"abi_encode_string","nativeSrc":"24327:17:30","nodeType":"YulIdentifier","src":"24327:17:30"},"nativeSrc":"24327:46:30","nodeType":"YulFunctionCall","src":"24327:46:30"},"variableNames":[{"name":"tail","nativeSrc":"24319:4:30","nodeType":"YulIdentifier","src":"24319:4:30"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"23818:561:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23986:9:30","nodeType":"YulTypedName","src":"23986:9:30","type":""},{"name":"value4","nativeSrc":"23997:6:30","nodeType":"YulTypedName","src":"23997:6:30","type":""},{"name":"value3","nativeSrc":"24005:6:30","nodeType":"YulTypedName","src":"24005:6:30","type":""},{"name":"value2","nativeSrc":"24013:6:30","nodeType":"YulTypedName","src":"24013:6:30","type":""},{"name":"value1","nativeSrc":"24021:6:30","nodeType":"YulTypedName","src":"24021:6:30","type":""},{"name":"value0","nativeSrc":"24029:6:30","nodeType":"YulTypedName","src":"24029:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24040:4:30","nodeType":"YulTypedName","src":"24040:4:30","type":""}],"src":"23818:561:30"},{"body":{"nativeSrc":"24464:169:30","nodeType":"YulBlock","src":"24464:169:30","statements":[{"body":{"nativeSrc":"24510:16:30","nodeType":"YulBlock","src":"24510:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"24519:1:30","nodeType":"YulLiteral","src":"24519:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"24522:1:30","nodeType":"YulLiteral","src":"24522:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"24512:6:30","nodeType":"YulIdentifier","src":"24512:6:30"},"nativeSrc":"24512:12:30","nodeType":"YulFunctionCall","src":"24512:12:30"},"nativeSrc":"24512:12:30","nodeType":"YulExpressionStatement","src":"24512:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"24485:7:30","nodeType":"YulIdentifier","src":"24485:7:30"},{"name":"headStart","nativeSrc":"24494:9:30","nodeType":"YulIdentifier","src":"24494:9:30"}],"functionName":{"name":"sub","nativeSrc":"24481:3:30","nodeType":"YulIdentifier","src":"24481:3:30"},"nativeSrc":"24481:23:30","nodeType":"YulFunctionCall","src":"24481:23:30"},{"kind":"number","nativeSrc":"24506:2:30","nodeType":"YulLiteral","src":"24506:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"24477:3:30","nodeType":"YulIdentifier","src":"24477:3:30"},"nativeSrc":"24477:32:30","nodeType":"YulFunctionCall","src":"24477:32:30"},"nativeSrc":"24474:52:30","nodeType":"YulIf","src":"24474:52:30"},{"nativeSrc":"24535:29:30","nodeType":"YulVariableDeclaration","src":"24535:29:30","value":{"arguments":[{"name":"headStart","nativeSrc":"24554:9:30","nodeType":"YulIdentifier","src":"24554:9:30"}],"functionName":{"name":"mload","nativeSrc":"24548:5:30","nodeType":"YulIdentifier","src":"24548:5:30"},"nativeSrc":"24548:16:30","nodeType":"YulFunctionCall","src":"24548:16:30"},"variables":[{"name":"value","nativeSrc":"24539:5:30","nodeType":"YulTypedName","src":"24539:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"24597:5:30","nodeType":"YulIdentifier","src":"24597:5:30"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"24573:23:30","nodeType":"YulIdentifier","src":"24573:23:30"},"nativeSrc":"24573:30:30","nodeType":"YulFunctionCall","src":"24573:30:30"},"nativeSrc":"24573:30:30","nodeType":"YulExpressionStatement","src":"24573:30:30"},{"nativeSrc":"24612:15:30","nodeType":"YulAssignment","src":"24612:15:30","value":{"name":"value","nativeSrc":"24622:5:30","nodeType":"YulIdentifier","src":"24622:5:30"},"variableNames":[{"name":"value0","nativeSrc":"24612:6:30","nodeType":"YulIdentifier","src":"24612:6:30"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"24384:249:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24430:9:30","nodeType":"YulTypedName","src":"24430:9:30","type":""},{"name":"dataEnd","nativeSrc":"24441:7:30","nodeType":"YulTypedName","src":"24441:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"24453:6:30","nodeType":"YulTypedName","src":"24453:6:30","type":""}],"src":"24384:249:30"},{"body":{"nativeSrc":"24969:496:30","nodeType":"YulBlock","src":"24969:496:30","statements":[{"nativeSrc":"24979:29:30","nodeType":"YulVariableDeclaration","src":"24979:29:30","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"24997:3:30","nodeType":"YulLiteral","src":"24997:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"25002:1:30","nodeType":"YulLiteral","src":"25002:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"24993:3:30","nodeType":"YulIdentifier","src":"24993:3:30"},"nativeSrc":"24993:11:30","nodeType":"YulFunctionCall","src":"24993:11:30"},{"kind":"number","nativeSrc":"25006:1:30","nodeType":"YulLiteral","src":"25006:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"24989:3:30","nodeType":"YulIdentifier","src":"24989:3:30"},"nativeSrc":"24989:19:30","nodeType":"YulFunctionCall","src":"24989:19:30"},"variables":[{"name":"_1","nativeSrc":"24983:2:30","nodeType":"YulTypedName","src":"24983:2:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"25024:9:30","nodeType":"YulIdentifier","src":"25024:9:30"},{"arguments":[{"name":"value0","nativeSrc":"25039:6:30","nodeType":"YulIdentifier","src":"25039:6:30"},{"name":"_1","nativeSrc":"25047:2:30","nodeType":"YulIdentifier","src":"25047:2:30"}],"functionName":{"name":"and","nativeSrc":"25035:3:30","nodeType":"YulIdentifier","src":"25035:3:30"},"nativeSrc":"25035:15:30","nodeType":"YulFunctionCall","src":"25035:15:30"}],"functionName":{"name":"mstore","nativeSrc":"25017:6:30","nodeType":"YulIdentifier","src":"25017:6:30"},"nativeSrc":"25017:34:30","nodeType":"YulFunctionCall","src":"25017:34:30"},"nativeSrc":"25017:34:30","nodeType":"YulExpressionStatement","src":"25017:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25071:9:30","nodeType":"YulIdentifier","src":"25071:9:30"},{"kind":"number","nativeSrc":"25082:2:30","nodeType":"YulLiteral","src":"25082:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25067:3:30","nodeType":"YulIdentifier","src":"25067:3:30"},"nativeSrc":"25067:18:30","nodeType":"YulFunctionCall","src":"25067:18:30"},{"arguments":[{"name":"value1","nativeSrc":"25091:6:30","nodeType":"YulIdentifier","src":"25091:6:30"},{"name":"_1","nativeSrc":"25099:2:30","nodeType":"YulIdentifier","src":"25099:2:30"}],"functionName":{"name":"and","nativeSrc":"25087:3:30","nodeType":"YulIdentifier","src":"25087:3:30"},"nativeSrc":"25087:15:30","nodeType":"YulFunctionCall","src":"25087:15:30"}],"functionName":{"name":"mstore","nativeSrc":"25060:6:30","nodeType":"YulIdentifier","src":"25060:6:30"},"nativeSrc":"25060:43:30","nodeType":"YulFunctionCall","src":"25060:43:30"},"nativeSrc":"25060:43:30","nodeType":"YulExpressionStatement","src":"25060:43:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25123:9:30","nodeType":"YulIdentifier","src":"25123:9:30"},{"kind":"number","nativeSrc":"25134:2:30","nodeType":"YulLiteral","src":"25134:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"25119:3:30","nodeType":"YulIdentifier","src":"25119:3:30"},"nativeSrc":"25119:18:30","nodeType":"YulFunctionCall","src":"25119:18:30"},{"kind":"number","nativeSrc":"25139:3:30","nodeType":"YulLiteral","src":"25139:3:30","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"25112:6:30","nodeType":"YulIdentifier","src":"25112:6:30"},"nativeSrc":"25112:31:30","nodeType":"YulFunctionCall","src":"25112:31:30"},"nativeSrc":"25112:31:30","nodeType":"YulExpressionStatement","src":"25112:31:30"},{"nativeSrc":"25152:71:30","nodeType":"YulVariableDeclaration","src":"25152:71:30","value":{"arguments":[{"name":"value2","nativeSrc":"25195:6:30","nodeType":"YulIdentifier","src":"25195:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"25207:9:30","nodeType":"YulIdentifier","src":"25207:9:30"},{"kind":"number","nativeSrc":"25218:3:30","nodeType":"YulLiteral","src":"25218:3:30","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"25203:3:30","nodeType":"YulIdentifier","src":"25203:3:30"},"nativeSrc":"25203:19:30","nodeType":"YulFunctionCall","src":"25203:19:30"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"25166:28:30","nodeType":"YulIdentifier","src":"25166:28:30"},"nativeSrc":"25166:57:30","nodeType":"YulFunctionCall","src":"25166:57:30"},"variables":[{"name":"tail_1","nativeSrc":"25156:6:30","nodeType":"YulTypedName","src":"25156:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25243:9:30","nodeType":"YulIdentifier","src":"25243:9:30"},{"kind":"number","nativeSrc":"25254:2:30","nodeType":"YulLiteral","src":"25254:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"25239:3:30","nodeType":"YulIdentifier","src":"25239:3:30"},"nativeSrc":"25239:18:30","nodeType":"YulFunctionCall","src":"25239:18:30"},{"arguments":[{"name":"tail_1","nativeSrc":"25263:6:30","nodeType":"YulIdentifier","src":"25263:6:30"},{"name":"headStart","nativeSrc":"25271:9:30","nodeType":"YulIdentifier","src":"25271:9:30"}],"functionName":{"name":"sub","nativeSrc":"25259:3:30","nodeType":"YulIdentifier","src":"25259:3:30"},"nativeSrc":"25259:22:30","nodeType":"YulFunctionCall","src":"25259:22:30"}],"functionName":{"name":"mstore","nativeSrc":"25232:6:30","nodeType":"YulIdentifier","src":"25232:6:30"},"nativeSrc":"25232:50:30","nodeType":"YulFunctionCall","src":"25232:50:30"},"nativeSrc":"25232:50:30","nodeType":"YulExpressionStatement","src":"25232:50:30"},{"nativeSrc":"25291:58:30","nodeType":"YulVariableDeclaration","src":"25291:58:30","value":{"arguments":[{"name":"value3","nativeSrc":"25334:6:30","nodeType":"YulIdentifier","src":"25334:6:30"},{"name":"tail_1","nativeSrc":"25342:6:30","nodeType":"YulIdentifier","src":"25342:6:30"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"25305:28:30","nodeType":"YulIdentifier","src":"25305:28:30"},"nativeSrc":"25305:44:30","nodeType":"YulFunctionCall","src":"25305:44:30"},"variables":[{"name":"tail_2","nativeSrc":"25295:6:30","nodeType":"YulTypedName","src":"25295:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25369:9:30","nodeType":"YulIdentifier","src":"25369:9:30"},{"kind":"number","nativeSrc":"25380:3:30","nodeType":"YulLiteral","src":"25380:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"25365:3:30","nodeType":"YulIdentifier","src":"25365:3:30"},"nativeSrc":"25365:19:30","nodeType":"YulFunctionCall","src":"25365:19:30"},{"arguments":[{"name":"tail_2","nativeSrc":"25390:6:30","nodeType":"YulIdentifier","src":"25390:6:30"},{"name":"headStart","nativeSrc":"25398:9:30","nodeType":"YulIdentifier","src":"25398:9:30"}],"functionName":{"name":"sub","nativeSrc":"25386:3:30","nodeType":"YulIdentifier","src":"25386:3:30"},"nativeSrc":"25386:22:30","nodeType":"YulFunctionCall","src":"25386:22:30"}],"functionName":{"name":"mstore","nativeSrc":"25358:6:30","nodeType":"YulIdentifier","src":"25358:6:30"},"nativeSrc":"25358:51:30","nodeType":"YulFunctionCall","src":"25358:51:30"},"nativeSrc":"25358:51:30","nodeType":"YulExpressionStatement","src":"25358:51:30"},{"nativeSrc":"25418:41:30","nodeType":"YulAssignment","src":"25418:41:30","value":{"arguments":[{"name":"value4","nativeSrc":"25444:6:30","nodeType":"YulIdentifier","src":"25444:6:30"},{"name":"tail_2","nativeSrc":"25452:6:30","nodeType":"YulIdentifier","src":"25452:6:30"}],"functionName":{"name":"abi_encode_string","nativeSrc":"25426:17:30","nodeType":"YulIdentifier","src":"25426:17:30"},"nativeSrc":"25426:33:30","nodeType":"YulFunctionCall","src":"25426:33:30"},"variableNames":[{"name":"tail","nativeSrc":"25418:4:30","nodeType":"YulIdentifier","src":"25418:4:30"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"24638:827:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24906:9:30","nodeType":"YulTypedName","src":"24906:9:30","type":""},{"name":"value4","nativeSrc":"24917:6:30","nodeType":"YulTypedName","src":"24917:6:30","type":""},{"name":"value3","nativeSrc":"24925:6:30","nodeType":"YulTypedName","src":"24925:6:30","type":""},{"name":"value2","nativeSrc":"24933:6:30","nodeType":"YulTypedName","src":"24933:6:30","type":""},{"name":"value1","nativeSrc":"24941:6:30","nodeType":"YulTypedName","src":"24941:6:30","type":""},{"name":"value0","nativeSrc":"24949:6:30","nodeType":"YulTypedName","src":"24949:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24960:4:30","nodeType":"YulTypedName","src":"24960:4:30","type":""}],"src":"24638:827:30"},{"body":{"nativeSrc":"25607:150:30","nodeType":"YulBlock","src":"25607:150:30","statements":[{"nativeSrc":"25617:27:30","nodeType":"YulVariableDeclaration","src":"25617:27:30","value":{"arguments":[{"name":"value0","nativeSrc":"25637:6:30","nodeType":"YulIdentifier","src":"25637:6:30"}],"functionName":{"name":"mload","nativeSrc":"25631:5:30","nodeType":"YulIdentifier","src":"25631:5:30"},"nativeSrc":"25631:13:30","nodeType":"YulFunctionCall","src":"25631:13:30"},"variables":[{"name":"length","nativeSrc":"25621:6:30","nodeType":"YulTypedName","src":"25621:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"25692:6:30","nodeType":"YulIdentifier","src":"25692:6:30"},{"kind":"number","nativeSrc":"25700:4:30","nodeType":"YulLiteral","src":"25700:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25688:3:30","nodeType":"YulIdentifier","src":"25688:3:30"},"nativeSrc":"25688:17:30","nodeType":"YulFunctionCall","src":"25688:17:30"},{"name":"pos","nativeSrc":"25707:3:30","nodeType":"YulIdentifier","src":"25707:3:30"},{"name":"length","nativeSrc":"25712:6:30","nodeType":"YulIdentifier","src":"25712:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"25653:34:30","nodeType":"YulIdentifier","src":"25653:34:30"},"nativeSrc":"25653:66:30","nodeType":"YulFunctionCall","src":"25653:66:30"},"nativeSrc":"25653:66:30","nodeType":"YulExpressionStatement","src":"25653:66:30"},{"nativeSrc":"25728:23:30","nodeType":"YulAssignment","src":"25728:23:30","value":{"arguments":[{"name":"pos","nativeSrc":"25739:3:30","nodeType":"YulIdentifier","src":"25739:3:30"},{"name":"length","nativeSrc":"25744:6:30","nodeType":"YulIdentifier","src":"25744:6:30"}],"functionName":{"name":"add","nativeSrc":"25735:3:30","nodeType":"YulIdentifier","src":"25735:3:30"},"nativeSrc":"25735:16:30","nodeType":"YulFunctionCall","src":"25735:16:30"},"variableNames":[{"name":"end","nativeSrc":"25728:3:30","nodeType":"YulIdentifier","src":"25728:3:30"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"25470:287:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25583:3:30","nodeType":"YulTypedName","src":"25583:3:30","type":""},{"name":"value0","nativeSrc":"25588:6:30","nodeType":"YulTypedName","src":"25588:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25599:3:30","nodeType":"YulTypedName","src":"25599:3:30","type":""}],"src":"25470:287:30"},{"body":{"nativeSrc":"25810:77:30","nodeType":"YulBlock","src":"25810:77:30","statements":[{"nativeSrc":"25820:16:30","nodeType":"YulAssignment","src":"25820:16:30","value":{"arguments":[{"name":"x","nativeSrc":"25831:1:30","nodeType":"YulIdentifier","src":"25831:1:30"},{"name":"y","nativeSrc":"25834:1:30","nodeType":"YulIdentifier","src":"25834:1:30"}],"functionName":{"name":"add","nativeSrc":"25827:3:30","nodeType":"YulIdentifier","src":"25827:3:30"},"nativeSrc":"25827:9:30","nodeType":"YulFunctionCall","src":"25827:9:30"},"variableNames":[{"name":"sum","nativeSrc":"25820:3:30","nodeType":"YulIdentifier","src":"25820:3:30"}]},{"body":{"nativeSrc":"25859:22:30","nodeType":"YulBlock","src":"25859:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"25861:16:30","nodeType":"YulIdentifier","src":"25861:16:30"},"nativeSrc":"25861:18:30","nodeType":"YulFunctionCall","src":"25861:18:30"},"nativeSrc":"25861:18:30","nodeType":"YulExpressionStatement","src":"25861:18:30"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"25851:1:30","nodeType":"YulIdentifier","src":"25851:1:30"},{"name":"sum","nativeSrc":"25854:3:30","nodeType":"YulIdentifier","src":"25854:3:30"}],"functionName":{"name":"gt","nativeSrc":"25848:2:30","nodeType":"YulIdentifier","src":"25848:2:30"},"nativeSrc":"25848:10:30","nodeType":"YulFunctionCall","src":"25848:10:30"},"nativeSrc":"25845:36:30","nodeType":"YulIf","src":"25845:36:30"}]},"name":"checked_add_t_uint256","nativeSrc":"25762:125:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"25793:1:30","nodeType":"YulTypedName","src":"25793:1:30","type":""},{"name":"y","nativeSrc":"25796:1:30","nodeType":"YulTypedName","src":"25796:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"25802:3:30","nodeType":"YulTypedName","src":"25802:3:30","type":""}],"src":"25762:125:30"},{"body":{"nativeSrc":"26077:232:30","nodeType":"YulBlock","src":"26077:232:30","statements":[{"nativeSrc":"26087:27:30","nodeType":"YulAssignment","src":"26087:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"26099:9:30","nodeType":"YulIdentifier","src":"26099:9:30"},{"kind":"number","nativeSrc":"26110:3:30","nodeType":"YulLiteral","src":"26110:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26095:3:30","nodeType":"YulIdentifier","src":"26095:3:30"},"nativeSrc":"26095:19:30","nodeType":"YulFunctionCall","src":"26095:19:30"},"variableNames":[{"name":"tail","nativeSrc":"26087:4:30","nodeType":"YulIdentifier","src":"26087:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"26130:9:30","nodeType":"YulIdentifier","src":"26130:9:30"},{"arguments":[{"name":"value0","nativeSrc":"26145:6:30","nodeType":"YulIdentifier","src":"26145:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"26161:3:30","nodeType":"YulLiteral","src":"26161:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"26166:1:30","nodeType":"YulLiteral","src":"26166:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"26157:3:30","nodeType":"YulIdentifier","src":"26157:3:30"},"nativeSrc":"26157:11:30","nodeType":"YulFunctionCall","src":"26157:11:30"},{"kind":"number","nativeSrc":"26170:1:30","nodeType":"YulLiteral","src":"26170:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"26153:3:30","nodeType":"YulIdentifier","src":"26153:3:30"},"nativeSrc":"26153:19:30","nodeType":"YulFunctionCall","src":"26153:19:30"}],"functionName":{"name":"and","nativeSrc":"26141:3:30","nodeType":"YulIdentifier","src":"26141:3:30"},"nativeSrc":"26141:32:30","nodeType":"YulFunctionCall","src":"26141:32:30"}],"functionName":{"name":"mstore","nativeSrc":"26123:6:30","nodeType":"YulIdentifier","src":"26123:6:30"},"nativeSrc":"26123:51:30","nodeType":"YulFunctionCall","src":"26123:51:30"},"nativeSrc":"26123:51:30","nodeType":"YulExpressionStatement","src":"26123:51:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26194:9:30","nodeType":"YulIdentifier","src":"26194:9:30"},{"kind":"number","nativeSrc":"26205:2:30","nodeType":"YulLiteral","src":"26205:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26190:3:30","nodeType":"YulIdentifier","src":"26190:3:30"},"nativeSrc":"26190:18:30","nodeType":"YulFunctionCall","src":"26190:18:30"},{"name":"value1","nativeSrc":"26210:6:30","nodeType":"YulIdentifier","src":"26210:6:30"}],"functionName":{"name":"mstore","nativeSrc":"26183:6:30","nodeType":"YulIdentifier","src":"26183:6:30"},"nativeSrc":"26183:34:30","nodeType":"YulFunctionCall","src":"26183:34:30"},"nativeSrc":"26183:34:30","nodeType":"YulExpressionStatement","src":"26183:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26237:9:30","nodeType":"YulIdentifier","src":"26237:9:30"},{"kind":"number","nativeSrc":"26248:2:30","nodeType":"YulLiteral","src":"26248:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26233:3:30","nodeType":"YulIdentifier","src":"26233:3:30"},"nativeSrc":"26233:18:30","nodeType":"YulFunctionCall","src":"26233:18:30"},{"name":"value2","nativeSrc":"26253:6:30","nodeType":"YulIdentifier","src":"26253:6:30"}],"functionName":{"name":"mstore","nativeSrc":"26226:6:30","nodeType":"YulIdentifier","src":"26226:6:30"},"nativeSrc":"26226:34:30","nodeType":"YulFunctionCall","src":"26226:34:30"},"nativeSrc":"26226:34:30","nodeType":"YulExpressionStatement","src":"26226:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26280:9:30","nodeType":"YulIdentifier","src":"26280:9:30"},{"kind":"number","nativeSrc":"26291:2:30","nodeType":"YulLiteral","src":"26291:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26276:3:30","nodeType":"YulIdentifier","src":"26276:3:30"},"nativeSrc":"26276:18:30","nodeType":"YulFunctionCall","src":"26276:18:30"},{"name":"value3","nativeSrc":"26296:6:30","nodeType":"YulIdentifier","src":"26296:6:30"}],"functionName":{"name":"mstore","nativeSrc":"26269:6:30","nodeType":"YulIdentifier","src":"26269:6:30"},"nativeSrc":"26269:34:30","nodeType":"YulFunctionCall","src":"26269:34:30"},"nativeSrc":"26269:34:30","nodeType":"YulExpressionStatement","src":"26269:34:30"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"25892:417:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26022:9:30","nodeType":"YulTypedName","src":"26022:9:30","type":""},{"name":"value3","nativeSrc":"26033:6:30","nodeType":"YulTypedName","src":"26033:6:30","type":""},{"name":"value2","nativeSrc":"26041:6:30","nodeType":"YulTypedName","src":"26041:6:30","type":""},{"name":"value1","nativeSrc":"26049:6:30","nodeType":"YulTypedName","src":"26049:6:30","type":""},{"name":"value0","nativeSrc":"26057:6:30","nodeType":"YulTypedName","src":"26057:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26068:4:30","nodeType":"YulTypedName","src":"26068:4:30","type":""}],"src":"25892:417:30"},{"body":{"nativeSrc":"26543:236:30","nodeType":"YulBlock","src":"26543:236:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"26560:9:30","nodeType":"YulIdentifier","src":"26560:9:30"},{"kind":"number","nativeSrc":"26571:2:30","nodeType":"YulLiteral","src":"26571:2:30","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"26553:6:30","nodeType":"YulIdentifier","src":"26553:6:30"},"nativeSrc":"26553:21:30","nodeType":"YulFunctionCall","src":"26553:21:30"},"nativeSrc":"26553:21:30","nodeType":"YulExpressionStatement","src":"26553:21:30"},{"nativeSrc":"26583:70:30","nodeType":"YulVariableDeclaration","src":"26583:70:30","value":{"arguments":[{"name":"value0","nativeSrc":"26626:6:30","nodeType":"YulIdentifier","src":"26626:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"26638:9:30","nodeType":"YulIdentifier","src":"26638:9:30"},{"kind":"number","nativeSrc":"26649:2:30","nodeType":"YulLiteral","src":"26649:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26634:3:30","nodeType":"YulIdentifier","src":"26634:3:30"},"nativeSrc":"26634:18:30","nodeType":"YulFunctionCall","src":"26634:18:30"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"26597:28:30","nodeType":"YulIdentifier","src":"26597:28:30"},"nativeSrc":"26597:56:30","nodeType":"YulFunctionCall","src":"26597:56:30"},"variables":[{"name":"tail_1","nativeSrc":"26587:6:30","nodeType":"YulTypedName","src":"26587:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26673:9:30","nodeType":"YulIdentifier","src":"26673:9:30"},{"kind":"number","nativeSrc":"26684:2:30","nodeType":"YulLiteral","src":"26684:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26669:3:30","nodeType":"YulIdentifier","src":"26669:3:30"},"nativeSrc":"26669:18:30","nodeType":"YulFunctionCall","src":"26669:18:30"},{"arguments":[{"name":"tail_1","nativeSrc":"26693:6:30","nodeType":"YulIdentifier","src":"26693:6:30"},{"name":"headStart","nativeSrc":"26701:9:30","nodeType":"YulIdentifier","src":"26701:9:30"}],"functionName":{"name":"sub","nativeSrc":"26689:3:30","nodeType":"YulIdentifier","src":"26689:3:30"},"nativeSrc":"26689:22:30","nodeType":"YulFunctionCall","src":"26689:22:30"}],"functionName":{"name":"mstore","nativeSrc":"26662:6:30","nodeType":"YulIdentifier","src":"26662:6:30"},"nativeSrc":"26662:50:30","nodeType":"YulFunctionCall","src":"26662:50:30"},"nativeSrc":"26662:50:30","nodeType":"YulExpressionStatement","src":"26662:50:30"},{"nativeSrc":"26721:52:30","nodeType":"YulAssignment","src":"26721:52:30","value":{"arguments":[{"name":"value1","nativeSrc":"26758:6:30","nodeType":"YulIdentifier","src":"26758:6:30"},{"name":"tail_1","nativeSrc":"26766:6:30","nodeType":"YulIdentifier","src":"26766:6:30"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"26729:28:30","nodeType":"YulIdentifier","src":"26729:28:30"},"nativeSrc":"26729:44:30","nodeType":"YulFunctionCall","src":"26729:44:30"},"variableNames":[{"name":"tail","nativeSrc":"26721:4:30","nodeType":"YulIdentifier","src":"26721:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"26314:465:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26504:9:30","nodeType":"YulTypedName","src":"26504:9:30","type":""},{"name":"value1","nativeSrc":"26515:6:30","nodeType":"YulTypedName","src":"26515:6:30","type":""},{"name":"value0","nativeSrc":"26523:6:30","nodeType":"YulTypedName","src":"26523:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26534:4:30","nodeType":"YulTypedName","src":"26534:4:30","type":""}],"src":"26314:465:30"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_boolt_boolt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n        value2 := abi_decode_bool(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool_t_bool_t_string_memory_ptr__to_t_bool_t_bool_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_string(value2, add(headStart, 96))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_string_storage(value, pos) -> ret\n    {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value)\n            let _2 := 0x20\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := abi_encode_string_storage(value0, pos)\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), _1, length)\n        let end_1 := add(_1, length)\n        mstore(end_1, \".json\")\n        end := add(end_1, 5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_37a170f786e458179522ad8acdf045019b62598928e7a1acbbae427b70fe1ee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"disabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_64ca1ae50619f7f4ab23f4c22c6b85b70cfc49c072d731be4f91487f95764c93__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_93401b78a9a15fdd9637202256dc22545d2892602bcb5ead8f30e328fe8cde91__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"nonce used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc1d79576d9c1e03d6ff90e81fd853c5eac89b9ed9cb54114db3e1e1ab962297__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2ea973a0052a4e6a834e07d94ae8fecb501158013d52044186e8b1a997ca8d08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"bad sig\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        end := abi_encode_string_storage(value0, pos)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9e7ed7f8e6dcd193d98e2fd5ebd44790ad3072ac13a6c8399c17d661a1faa4bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"soulbound\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"652":[{"length":32,"start":5110},{"length":32,"start":5151},{"length":32,"start":5508}]},"linkReferences":{},"object":"6080604052600436106101ed5760003560e01c806355f804b31161010d578063a22cb465116100a0578063d6d0faee1161006f578063d6d0faee14610645578063e985e9c514610665578063f242432a14610685578063f698da25146106a5578063f72c0d8b146106ba57600080fd5b8063a22cb46514610588578063ad3cb1cc146105a8578063bd85b039146105d9578063d547741f1461062557600080fd5b806391d14854116100dc57806391d148541461050a57806395d89b411461052a578063a1ebf35d1461053f578063a217fddf1461057357600080fd5b806355f804b31461047a5780636a8a68941461049a5780636c0360eb146104d557806378ad847c146104ea57600080fd5b806327aed72e116101855780634e1273f4116101545780634e1273f4146103d75780634f1ef286146104045780634f558e791461041757806352d1902d1461046557600080fd5b806327aed72e146103485780632eb2c2d6146103775780632f2ff15d1461039757806336568abe146103b757600080fd5b806306fdde03116101c157806306fdde03146102b25780630e89341c146102d457806318160ddd146102f4578063248a9ca31461032857600080fd5b8062fdd58e146101f257806301ffc9a714610225578063034fc4b8146102555780630378073314610277575b600080fd5b3480156101fe57600080fd5b5061021261020d3660046123f9565b6106ee565b6040519081526020015b60405180910390f35b34801561023157600080fd5b50610245610240366004612439565b610725565b604051901515815260200161021c565b34801561026157600080fd5b506102756102703660046124ae565b610730565b005b34801561028357600080fd5b5061024561029236600461251c565b600160209081526000928352604080842090915290825290205460ff1681565b3480156102be57600080fd5b506102c76107e5565b60405161021c9190612598565b3480156102e057600080fd5b506102c76102ef3660046125ab565b610873565b34801561030057600080fd5b507f4a593662ee04d27b6a00ebb31be7fe0c102c2ade82a7c5d764f2df05dc4e280154610212565b34801561033457600080fd5b506102126103433660046125ab565b610956565b34801561035457600080fd5b506103686103633660046125ab565b610978565b60405161021c939291906125c4565b34801561038357600080fd5b5061027561039236600461272e565b610a2a565b3480156103a357600080fd5b506102756103b236600461251c565b610a96565b3480156103c357600080fd5b506102756103d236600461251c565b610ab8565b3480156103e357600080fd5b506103f76103f23660046127d7565b610af0565b60405161021c91906128d2565b6102756104123660046128e5565b610bbc565b34801561042357600080fd5b506102456104323660046125ab565b60009081527f4a593662ee04d27b6a00ebb31be7fe0c102c2ade82a7c5d764f2df05dc4e28006020526040902054151590565b34801561047157600080fd5b50610212610bdb565b34801561048657600080fd5b50610275610495366004612928565b610bf8565b3480156104a657600080fd5b506102456104b53660046123f9565b600660209081526000928352604080842090915290825290205460ff1681565b3480156104e157600080fd5b506102c7610c58565b3480156104f657600080fd5b50610275610505366004612969565b610c65565b34801561051657600080fd5b5061024561052536600461251c565b610ed1565b34801561053657600080fd5b506102c7610f09565b34801561054b57600080fd5b506102127fe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f7081565b34801561057f57600080fd5b50610212600081565b34801561059457600080fd5b506102756105a33660046129d9565b610f16565b3480156105b457600080fd5b506102c7604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156105e557600080fd5b506102126105f43660046125ab565b60009081527f4a593662ee04d27b6a00ebb31be7fe0c102c2ade82a7c5d764f2df05dc4e2800602052604090205490565b34801561063157600080fd5b5061027561064036600461251c565b610f21565b34801561065157600080fd5b50610275610660366004612a03565b610f3d565b34801561067157600080fd5b50610245610680366004612aac565b6110f3565b34801561069157600080fd5b506102756106a0366004612ad6565b611140565b3480156106b157600080fd5b50600554610212565b3480156106c657600080fd5b506102127f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b6000818152600080516020612f81833981519152602090815260408083206001600160a01b03861684529091529020545b92915050565b600061071f8261119f565b600061073b816111c4565b60405180606001604052808615158152602001851515815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508881526020818152604091829020845181549286015161ffff1990931690151561ff00191617610100921515929092029190911781559083015190915060018201906107da9082612bbc565b505050505050505050565b600280546107f290612b3a565b80601f016020809104026020016040519081016040528092919081815260200182805461081e90612b3a565b801561086b5780601f106108405761010080835404028352916020019161086b565b820191906000526020600020905b81548152906001019060200180831161084e57829003601f168201915b505050505081565b60008181526020819052604081206001018054606092919061089490612b3a565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090612b3a565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b5050505050905080516000146109235792915050565b600461092e846111d1565b60405160200161093f929190612cee565b604051602081830303815290604052915050919050565b6000908152600080516020612fa1833981519152602052604090206001015490565b6000602081905290815260409020805460018201805460ff80841694610100909404169291906109a790612b3a565b80601f01602080910402602001604051908101604052809291908181526020018280546109d390612b3a565b8015610a205780601f106109f557610100808354040283529160200191610a20565b820191906000526020600020905b815481529060010190602001808311610a0357829003601f168201915b5050505050905083565b336001600160a01b0386168114801590610a4b5750610a4986826110f3565b155b15610a815760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b610a8e8686868686611263565b505050505050565b610a9f82610956565b610aa8816111c4565b610ab283836112ca565b50505050565b6001600160a01b0381163314610ae15760405163334bd91960e11b815260040160405180910390fd5b610aeb828261136f565b505050565b60608151835114610b215781518351604051635b05999160e01b815260048101929092526024820152604401610a78565b600083516001600160401b03811115610b3c57610b3c6125e7565b604051908082528060200260200182016040528015610b65578160200160208202803683370190505b50905060005b8451811015610bb457602080820286010151610b8f906020808402870101516106ee565b828281518110610ba157610ba1612d23565b6020908102919091010152600101610b6b565b509392505050565b610bc46113eb565b610bcd82611492565b610bd782826114bc565b5050565b6000610be5611579565b50600080516020612f6183398151915290565b6000610c03816111c4565b6004610c10838583612d39565b5060007f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b610c3e6000610873565b604051610c4b9190612598565b60405180910390a2505050565b600480546107f290612b3a565b60008581526020819052604090205460ff16610cae5760405162461bcd60e51b8152602060048201526008602482015267191a5cd8589b195960c21b6044820152606401610a78565b83421115610ce85760405162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b6044820152606401610a78565b6001600160a01b038616600090815260066020908152604080832086845290915290205460ff1615610d495760405162461bcd60e51b815260206004820152600a6024820152691b9bdb98d9481d5cd95960b21b6044820152606401610a78565b60008581526001602090815260408083206001600160a01b038a16845290915290205460ff1615610dad5760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481b5a5b9d195960921b6044820152606401610a78565b6000610dbb878787876115c2565b90506000610dff8285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061167992505050565b9050610e2b7fe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f7082610ed1565b610e615760405162461bcd60e51b81526020600482015260076024820152666261642073696760c81b6044820152606401610a78565b6001600160a01b038816600081815260066020908152604080832089845282528083208054600160ff1991821681179092558c85528184528285209585529483528184208054909516811790945580519182019052908152610ec7918a918a9190611746565b5050505050505050565b6000918252600080516020612fa1833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600380546107f290612b3a565b610bd73383836117a3565b610f2a82610956565b610f33816111c4565b610ab2838361136f565b6000610f4761184b565b805490915060ff600160401b82041615906001600160401b0316600081158015610f6e5750825b90506000826001600160401b03166001148015610f8a5750303b155b905081158015610f98575080155b15610fb65760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610fe057845460ff60401b1916600160401b1785555b610ff860405180602001604052806000815250611874565b611000611885565b611008611885565b611010611885565b600261101c8b82612bbc565b5060036110298a82612bbc565b5060046110368982612bbc565b506110426000886112ca565b5061106d7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3886112ca565b506110987fe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70876112ca565b506110a161188d565b83156110e757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6001600160a01b0391821660009081527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c45016020908152604080832093909416825291909152205460ff1690565b336001600160a01b0386168114801590611161575061115f86826110f3565b155b156111925760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610a78565b610a8e868686868661193c565b60006001600160e01b03198216637965db0b60e01b148061071f575061071f826119ca565b6111ce8133611a1a565b50565b606060006111de83611a53565b60010190506000816001600160401b038111156111fd576111fd6125e7565b6040519080825280601f01601f191660200182016040528015611227576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461123157509392505050565b6001600160a01b03841661128d57604051632bfa23e760e11b815260006004820152602401610a78565b6001600160a01b0385166112b657604051626a0d4560e21b815260006004820152602401610a78565b6112c38585858585611b2b565b5050505050565b6000600080516020612fa18339815191526112e58484610ed1565b611365576000848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561131b3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061071f565b600091505061071f565b6000600080516020612fa183398151915261138a8484610ed1565b15611365576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061071f565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061147257507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611466600080516020612f61833981519152546001600160a01b031690565b6001600160a01b031614155b156114905760405163703e46dd60e11b815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3610bd7816111c4565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611516575060408051601f3d908101601f1916820190925261151391810190612df8565b60015b61153e57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610a78565b600080516020612f61833981519152811461156f57604051632a87526960e21b815260048101829052602401610a78565b610aeb8383611b7e565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114905760405163703e46dd60e11b815260040160405180910390fd5b600554604080517f18ee0c6e30bf6cd4d37bc78510848a916e713be58f7d4ebf54cd34e2f446b5e560208201526001600160a01b03871691810191909152606081018590526080810184905260a081018390526000919060c0016040516020818303038152906040528051906020012060405160200161165992919061190160f01b81526002810192909252602282015260420190565b604051602081830303815290604052805190602001209050949350505050565b6000815160411461168c5750600061071f565b60208201516040830151606084015160001a601b8110156116b5576116b2601b82612e27565b90505b8060ff16601b141580156116cd57508060ff16601c14155b156116de576000935050505061071f565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611731573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6001600160a01b03841661177057604051632bfa23e760e11b815260006004820152602401610a78565b60408051600180825260208201869052818301908152606082018590526080820190925290610a8e600087848487611b2b565b600080516020612f818339815191526001600160a01b0383166117db5760405162ced3e160e81b815260006004820152602401610a78565b6001600160a01b038481166000818152600184016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0061071f565b61187c611bd4565b6111ce81611bf9565b611490611bd4565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60026040516118bd9190612e40565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f198184030181529190528051602090910120600555565b6001600160a01b03841661196657604051632bfa23e760e11b815260006004820152602401610a78565b6001600160a01b03851661198f57604051626a0d4560e21b815260006004820152602401610a78565b604080516001808252602082018690528183019081526060820185905260808201909252906119c18787848487611b2b565b50505050505050565b60006001600160e01b03198216636cdb3d1360e11b14806119fb57506001600160e01b031982166303a24d0760e21b145b8061071f57506301ffc9a760e01b6001600160e01b031983161461071f565b611a248282610ed1565b610bd75760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610a78565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611a925772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611abe576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611adc57662386f26fc10000830492506010015b6305f5e1008310611af4576305f5e100830492506008015b6127108310611b0857612710830492506004015b60648310611b1a576064830492506002015b600a831061071f5760010192915050565b611b3785858585611c0a565b6001600160a01b038416156112c35782513390600103611b705760208481015190840151611b69838989858589611cc6565b5050610a8e565b610a8e818787878787611dea565b611b8782611ed3565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611bcc57610aeb8282611f38565b610bd7611fae565b611bdc611fcd565b61149057604051631afcd79f60e31b815260040160405180910390fd5b611c01611bd4565b6111ce81611fe7565b6001600160a01b03841615801590611c2a57506001600160a01b03831615155b15611cba5760005b8251811015611cb857600080848381518110611c5057611c50612d23565b6020026020010151815260200190815260200160002060000160019054906101000a900460ff1615611cb05760405162461bcd60e51b81526020600482015260096024820152681cdbdd5b189bdd5b9960ba1b6044820152606401610a78565b600101611c32565b505b610ab284848484612021565b6001600160a01b0384163b15610a8e5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611d0a9089908990889088908890600401612e4c565b6020604051808303816000875af1925050508015611d45575060408051601f3d908101601f19168201909252611d4291810190612e91565b60015b611dae573d808015611d73576040519150601f19603f3d011682016040523d82523d6000602084013e611d78565b606091505b508051600003611da657604051632bfa23e760e11b81526001600160a01b0386166004820152602401610a78565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b146119c157604051632bfa23e760e11b81526001600160a01b0386166004820152602401610a78565b6001600160a01b0384163b15610a8e5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611e2e9089908990889088908890600401612eae565b6020604051808303816000875af1925050508015611e69575060408051601f3d908101601f19168201909252611e6691810190612e91565b60015b611e97573d808015611d73576040519150601f19603f3d011682016040523d82523d6000602084013e611d78565b6001600160e01b0319811663bc197c8160e01b146119c157604051632bfa23e760e11b81526001600160a01b0386166004820152602401610a78565b806001600160a01b03163b600003611f0957604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610a78565b600080516020612f6183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051611f559190612f0c565b600060405180830381855af49150503d8060008114611f90576040519150601f19603f3d011682016040523d82523d6000602084013e611f95565b606091505b5091509150611fa5858383612131565b95945050505050565b34156114905760405163b398979f60e01b815260040160405180910390fd5b6000611fd761184b565b54600160401b900460ff16919050565b600080516020612f818339815191527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4502610aeb8382612bbc565b7f4a593662ee04d27b6a00ebb31be7fe0c102c2ade82a7c5d764f2df05dc4e280061204e85858585612190565b6001600160a01b0385166120cf576000805b84518110156120b357602081810285810182015190870182015160009081529185905260408220805491928392612098908490612f28565b909155506120a890508184612f28565b925050600101612060565b50808260010160008282546120c89190612f28565b9091555050505b6001600160a01b0384166112c3576000805b845181101561211d57602081810285810182015190870182015160009081529185905260409091208054829003905591909101906001016120e1565b506001820180549190910390555050505050565b60608261214657612141826123b5565b612189565b815115801561215d57506001600160a01b0384163b155b1561218657604051639996b31560e01b81526001600160a01b0385166004820152602401610a78565b50805b9392505050565b80518251600080516020612f8183398151915291146121cf5782518251604051635b05999160e01b815260048101929092526024820152604401610a78565b3360005b84518110156122d5576020818102868101820151908601909101516001600160a01b03891615612286576000828152602086815260408083206001600160a01b038d1684529091529020548181101561225f576040516303dee4c560e01b81526001600160a01b038b166004820152602481018290526044810183905260648101849052608401610a78565b6000838152602087815260408083206001600160a01b038e16845290915290209082900390555b6001600160a01b038816156122cb576000828152602086815260408083206001600160a01b038c168452909152812080548392906122c5908490612f28565b90915550505b50506001016121d3565b5083516001036123565760208401516000906020850151909150866001600160a01b0316886001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051612347929190918252602082015260400190565b60405180910390a45050610a8e565b846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516123a5929190612f3b565b60405180910390a4505050505050565b8051156123c457805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b03811681146123f457600080fd5b919050565b6000806040838503121561240c57600080fd5b612415836123dd565b946020939093013593505050565b6001600160e01b0319811681146111ce57600080fd5b60006020828403121561244b57600080fd5b813561218981612423565b803580151581146123f457600080fd5b60008083601f84011261247857600080fd5b5081356001600160401b0381111561248f57600080fd5b6020830191508360208285010111156124a757600080fd5b9250929050565b6000806000806000608086880312156124c657600080fd5b853594506124d660208701612456565b93506124e460408701612456565b925060608601356001600160401b038111156124ff57600080fd5b61250b88828901612466565b969995985093965092949392505050565b6000806040838503121561252f57600080fd5b8235915061253f602084016123dd565b90509250929050565b60005b8381101561256357818101518382015260200161254b565b50506000910152565b60008151808452612584816020860160208601612548565b601f01601f19169290920160200192915050565b602081526000612189602083018461256c565b6000602082840312156125bd57600080fd5b5035919050565b83151581528215156020820152606060408201526000611fa5606083018461256c565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612625576126256125e7565b604052919050565b60006001600160401b03821115612646576126466125e7565b5060051b60200190565b600082601f83011261266157600080fd5b813560206126766126718361262d565b6125fd565b8083825260208201915060208460051b87010193508684111561269857600080fd5b602086015b848110156126b4578035835291830191830161269d565b509695505050505050565b600082601f8301126126d057600080fd5b81356001600160401b038111156126e9576126e96125e7565b6126fc601f8201601f19166020016125fd565b81815284602083860101111561271157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561274657600080fd5b61274f866123dd565b945061275d602087016123dd565b935060408601356001600160401b038082111561277957600080fd5b61278589838a01612650565b9450606088013591508082111561279b57600080fd5b6127a789838a01612650565b935060808801359150808211156127bd57600080fd5b506127ca888289016126bf565b9150509295509295909350565b600080604083850312156127ea57600080fd5b82356001600160401b038082111561280157600080fd5b818501915085601f83011261281557600080fd5b813560206128256126718361262d565b82815260059290921b8401810191818101908984111561284457600080fd5b948201945b838610156128695761285a866123dd565b82529482019490820190612849565b9650508601359250508082111561287f57600080fd5b5061288c85828601612650565b9150509250929050565b60008151808452602080850194506020840160005b838110156128c7578151875295820195908201906001016128ab565b509495945050505050565b6020815260006121896020830184612896565b600080604083850312156128f857600080fd5b612901836123dd565b915060208301356001600160401b0381111561291c57600080fd5b61288c858286016126bf565b6000806020838503121561293b57600080fd5b82356001600160401b0381111561295157600080fd5b61295d85828601612466565b90969095509350505050565b60008060008060008060a0878903121561298257600080fd5b61298b876123dd565b955060208701359450604087013593506060870135925060808701356001600160401b038111156129bb57600080fd5b6129c789828a01612466565b979a9699509497509295939492505050565b600080604083850312156129ec57600080fd5b6129f5836123dd565b915061253f60208401612456565b600080600080600060a08688031215612a1b57600080fd5b85356001600160401b0380821115612a3257600080fd5b612a3e89838a016126bf565b96506020880135915080821115612a5457600080fd5b612a6089838a016126bf565b95506040880135915080821115612a7657600080fd5b50612a83888289016126bf565b935050612a92606087016123dd565b9150612aa0608087016123dd565b90509295509295909350565b60008060408385031215612abf57600080fd5b612ac8836123dd565b915061253f602084016123dd565b600080600080600060a08688031215612aee57600080fd5b612af7866123dd565b9450612b05602087016123dd565b9350604086013592506060860135915060808601356001600160401b03811115612b2e57600080fd5b6127ca888289016126bf565b600181811c90821680612b4e57607f821691505b602082108103612b6e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610aeb576000816000526020600020601f850160051c81016020861015612b9d5750805b601f850160051c820191505b81811015610a8e57828155600101612ba9565b81516001600160401b03811115612bd557612bd56125e7565b612be981612be38454612b3a565b84612b74565b602080601f831160018114612c1e5760008415612c065750858301515b600019600386901b1c1916600185901b178555610a8e565b600085815260208120601f198616915b82811015612c4d57888601518255948401946001909101908401612c2e565b5085821015612c6b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008154612c8881612b3a565b60018281168015612ca05760018114612cb557612ce4565b60ff1984168752821515830287019450612ce4565b8560005260208060002060005b85811015612cdb5781548a820152908401908201612cc2565b50505082870194505b5050505092915050565b6000612cfa8285612c7b565b8351612d0a818360208801612548565b64173539b7b760d91b9101908152600501949350505050565b634e487b7160e01b600052603260045260246000fd5b6001600160401b03831115612d5057612d506125e7565b612d6483612d5e8354612b3a565b83612b74565b6000601f841160018114612d985760008515612d805750838201355b600019600387901b1c1916600186901b1783556112c3565b600083815260209020601f19861690835b82811015612dc95786850135825560209485019460019092019101612da9565b5086821015612de65760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b600060208284031215612e0a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60ff818116838216019081111561071f5761071f612e11565b60006121898284612c7b565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612e869083018461256c565b979650505050505050565b600060208284031215612ea357600080fd5b815161218981612423565b6001600160a01b0386811682528516602082015260a060408201819052600090612eda90830186612896565b8281036060840152612eec8186612896565b90508281036080840152612f00818561256c565b98975050505050505050565b60008251612f1e818460208701612548565b9190910192915050565b8082018082111561071f5761071f612e11565b604081526000612f4e6040830185612896565b8281036020840152611fa5818561289656fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c450002dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a26469706673582212206596011fedca1c818a6da1c1104cfdc1abd6d51755d915725dac5add1c96751d64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1ED JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55F804B3 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD6D0FAEE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD6D0FAEE EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xF698DA25 EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xA1EBF35D EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x6A8A6894 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0x78AD847C EQ PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27AED72E GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27AED72E EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x34FC4B8 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x3780733 EQ PUSH2 0x277 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x23F9 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x24AE JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x251C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x25AB JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x4A593662EE04D27B6A00EBB31BE7FE0C102C2ADE82A7C5D764F2DF05DC4E2801 SLOAD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x25AB JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x25AB JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x272E JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x251C JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x251C JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D7 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH2 0x275 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x28E5 JUMP JUMPDEST PUSH2 0xBBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x25AB JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A593662EE04D27B6A00EBB31BE7FE0C102C2ADE82A7C5D764F2DF05DC4E2800 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0xBDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2928 JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x23F9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0xC58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x505 CALLDATASIZE PUSH1 0x4 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x525 CALLDATASIZE PUSH1 0x4 PUSH2 0x251C JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0xF09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x5A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x29D9 JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x5F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x25AB JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A593662EE04D27B6A00EBB31BE7FE0C102C2ADE82A7C5D764F2DF05DC4E2800 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x640 CALLDATASIZE PUSH1 0x4 PUSH2 0x251C JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x660 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A03 JUMP JUMPDEST PUSH2 0xF3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x680 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAC JUMP JUMPDEST PUSH2 0x10F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x6A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71F DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73B DUP2 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 SWAP1 SWAP5 MSTORE POP POP DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP3 DUP7 ADD MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR PUSH2 0x100 SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP4 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x7DA SWAP1 DUP3 PUSH2 0x2BBC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x7F2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x81E SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x86B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x840 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x86B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x84E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x894 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8C0 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ PUSH2 0x923 JUMPI SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH2 0x92E DUP5 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x93F SWAP3 SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP2 SWAP1 PUSH2 0x9A7 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D3 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA20 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA20 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA03 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xA4B JUMPI POP PUSH2 0xA49 DUP7 DUP3 PUSH2 0x10F3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1263 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA9F DUP3 PUSH2 0x956 JUMP JUMPDEST PUSH2 0xAA8 DUP2 PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0xAB2 DUP4 DUP4 PUSH2 0x12CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAEB DUP3 DUP3 PUSH2 0x136F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB21 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3C PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB65 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0xB8F SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x6EE JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBA1 JUMPI PUSH2 0xBA1 PUSH2 0x2D23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xB6B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBC4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xBCD DUP3 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0xBD7 DUP3 DUP3 PUSH2 0x14BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE5 PUSH2 0x1579 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC03 DUP2 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xC10 DUP4 DUP6 DUP4 PUSH2 0x2D39 JUMP JUMPDEST POP PUSH1 0x0 PUSH32 0x6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B PUSH2 0xC3E PUSH1 0x0 PUSH2 0x873 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4B SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x7F2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x191A5CD8589B1959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDB98D9481D5CD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x185B1C9958591E481B5A5B9D1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBB DUP8 DUP8 DUP8 DUP8 PUSH2 0x15C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDFF DUP3 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1679 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP PUSH2 0xE2B PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP3 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x62616420736967 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE DUP13 DUP6 MSTORE DUP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 DUP6 MSTORE SWAP5 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND DUP2 OR SWAP1 SWAP5 SSTORE DUP1 MLOAD SWAP2 DUP3 ADD SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH2 0xEC7 SWAP2 DUP11 SWAP2 DUP11 SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x7F2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0xBD7 CALLER DUP4 DUP4 PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0xF2A DUP3 PUSH2 0x956 JUMP JUMPDEST PUSH2 0xF33 DUP2 PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0xAB2 DUP4 DUP4 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF47 PUSH2 0x184B JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xF6E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xF8A JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xF98 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xFE0 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xFF8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x1000 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1008 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1010 PUSH2 0x1885 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x101C DUP12 DUP3 PUSH2 0x2BBC JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x1029 DUP11 DUP3 PUSH2 0x2BBC JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x1036 DUP10 DUP3 PUSH2 0x2BBC JUMP JUMPDEST POP PUSH2 0x1042 PUSH1 0x0 DUP9 PUSH2 0x12CA JUMP JUMPDEST POP PUSH2 0x106D PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP9 PUSH2 0x12CA JUMP JUMPDEST POP PUSH2 0x1098 PUSH32 0xE2F4EAAE4A9751E85A3E4A7B9587827A877F29914755229B07A7B2DA98285F70 DUP8 PUSH2 0x12CA JUMP JUMPDEST POP PUSH2 0x10A1 PUSH2 0x188D JUMP JUMPDEST DUP4 ISZERO PUSH2 0x10E7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4501 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x1161 JUMPI POP PUSH2 0x115F DUP7 DUP3 PUSH2 0x10F3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xA8E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x71F JUMPI POP PUSH2 0x71F DUP3 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x11CE DUP2 CALLER PUSH2 0x1A1A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x11DE DUP4 PUSH2 0x1A53 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x11FD JUMPI PUSH2 0x11FD PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1227 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1231 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x12B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x12C3 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B2B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x12E5 DUP5 DUP5 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x1365 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x131B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x71F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x71F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x138A DUP5 DUP5 PUSH2 0xED1 JUMP JUMPDEST ISZERO PUSH2 0x1365 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x71F JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1472 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1466 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0xBD7 DUP2 PUSH2 0x11C4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1516 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1513 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x153E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x156F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAEB DUP4 DUP4 PUSH2 0x1B7E JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x18EE0C6E30BF6CD4D37BC78510848A916E713BE58F7D4EBF54CD34E2F446B5E5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1659 SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x168C JUMPI POP PUSH1 0x0 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x16B5 JUMPI PUSH2 0x16B2 PUSH1 0x1B DUP3 PUSH2 0x2E27 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x16CD JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1731 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xA8E PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x17DB JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP8 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x187C PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x11CE DUP2 PUSH2 0x1BF9 JUMP JUMPDEST PUSH2 0x1490 PUSH2 0x1BD4 JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x18BD SWAP2 SWAP1 PUSH2 0x2E40 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1966 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x198F JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x19C1 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1B2B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x19FB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x71F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x71F JUMP JUMPDEST PUSH2 0x1A24 DUP3 DUP3 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0xBD7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1A92 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1ABE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1ADC JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1AF4 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1B08 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B1A JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x71F JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B37 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x12C3 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x1B70 JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x1B69 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1CC6 JUMP JUMPDEST POP POP PUSH2 0xA8E JUMP JUMPDEST PUSH2 0xA8E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1DEA JUMP JUMPDEST PUSH2 0x1B87 DUP3 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1BCC JUMPI PUSH2 0xAEB DUP3 DUP3 PUSH2 0x1F38 JUMP JUMPDEST PUSH2 0xBD7 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x1BDC PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C01 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x11CE DUP2 PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C2A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1CBA JUMPI PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1CB8 JUMPI PUSH1 0x0 DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C50 JUMPI PUSH2 0x1C50 PUSH2 0x2D23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1CDBDD5B189BDD5B99 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C32 JUMP JUMPDEST POP JUMPDEST PUSH2 0xAB2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1D0A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E4C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D45 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1D42 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2E91 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DAE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1D73 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D78 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1DA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x19C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1E2E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2EAE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E69 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1E66 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2E91 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E97 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1D73 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x19C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x1F09 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F55 SWAP2 SWAP1 PUSH2 0x2F0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F90 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1FA5 DUP6 DUP4 DUP4 PUSH2 0x2131 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD7 PUSH2 0x184B JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4502 PUSH2 0xAEB DUP4 DUP3 PUSH2 0x2BBC JUMP JUMPDEST PUSH32 0x4A593662EE04D27B6A00EBB31BE7FE0C102C2ADE82A7C5D764F2DF05DC4E2800 PUSH2 0x204E DUP6 DUP6 DUP6 DUP6 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x20CF JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP8 ADD DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x2098 SWAP1 DUP5 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x20A8 SWAP1 POP DUP2 DUP5 PUSH2 0x2F28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x2060 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20C8 SWAP2 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x12C3 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x211D JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP8 ADD DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x20E1 JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2146 JUMPI PUSH2 0x2141 DUP3 PUSH2 0x23B5 JUMP JUMPDEST PUSH2 0x2189 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x215D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x2186 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA78 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 EQ PUSH2 0x21CF JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xA78 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x22D5 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP7 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP7 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x2286 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x225F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x22CB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x22C5 SWAP1 DUP5 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x21D3 JUMP JUMPDEST POP DUP4 MLOAD PUSH1 0x1 SUB PUSH2 0x2356 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2347 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0xA8E JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x23A5 SWAP3 SWAP2 SWAP1 PUSH2 0x2F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x23C4 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x23F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x240C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2415 DUP4 PUSH2 0x23DD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x11CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2189 DUP2 PUSH2 0x2423 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x23F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x248F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x24D6 PUSH1 0x20 DUP8 ADD PUSH2 0x2456 JUMP JUMPDEST SWAP4 POP PUSH2 0x24E4 PUSH1 0x40 DUP8 ADD PUSH2 0x2456 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x250B DUP9 DUP3 DUP10 ADD PUSH2 0x2466 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x252F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x253F PUSH1 0x20 DUP5 ADD PUSH2 0x23DD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2563 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x254B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2584 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2189 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1FA5 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x256C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2625 JUMPI PUSH2 0x2625 PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2646 JUMPI PUSH2 0x2646 PUSH2 0x25E7 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2676 PUSH2 0x2671 DUP4 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x25FD JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x2698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x26B4 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x269D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x26E9 JUMPI PUSH2 0x26E9 PUSH2 0x25E7 JUMP JUMPDEST PUSH2 0x26FC PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x25FD JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x274F DUP7 PUSH2 0x23DD JUMP JUMPDEST SWAP5 POP PUSH2 0x275D PUSH1 0x20 DUP8 ADD PUSH2 0x23DD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2785 DUP10 DUP4 DUP11 ADD PUSH2 0x2650 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x279B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27A7 DUP10 DUP4 DUP11 ADD PUSH2 0x2650 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27CA DUP9 DUP3 DUP10 ADD PUSH2 0x26BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2825 PUSH2 0x2671 DUP4 PUSH2 0x262D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x2844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2869 JUMPI PUSH2 0x285A DUP7 PUSH2 0x23DD JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x2849 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x287F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288C DUP6 DUP3 DUP7 ADD PUSH2 0x2650 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28C7 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x28AB JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2189 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2901 DUP4 PUSH2 0x23DD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x291C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x288C DUP6 DUP3 DUP7 ADD PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x293B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x295D DUP6 DUP3 DUP7 ADD PUSH2 0x2466 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x298B DUP8 PUSH2 0x23DD JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x29BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29C7 DUP10 DUP3 DUP11 ADD PUSH2 0x2466 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29F5 DUP4 PUSH2 0x23DD JUMP JUMPDEST SWAP2 POP PUSH2 0x253F PUSH1 0x20 DUP5 ADD PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2A32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A3E DUP10 DUP4 DUP11 ADD PUSH2 0x26BF JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A60 DUP10 DUP4 DUP11 ADD PUSH2 0x26BF JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A83 DUP9 DUP3 DUP10 ADD PUSH2 0x26BF JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2A92 PUSH1 0x60 DUP8 ADD PUSH2 0x23DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA0 PUSH1 0x80 DUP8 ADD PUSH2 0x23DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2ABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AC8 DUP4 PUSH2 0x23DD JUMP JUMPDEST SWAP2 POP PUSH2 0x253F PUSH1 0x20 DUP5 ADD PUSH2 0x23DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2AEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AF7 DUP7 PUSH2 0x23DD JUMP JUMPDEST SWAP5 POP PUSH2 0x2B05 PUSH1 0x20 DUP8 ADD PUSH2 0x23DD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27CA DUP9 DUP3 DUP10 ADD PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2B4E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2B6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2B9D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA8E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2BA9 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2BD5 JUMPI PUSH2 0x2BD5 PUSH2 0x25E7 JUMP JUMPDEST PUSH2 0x2BE9 DUP2 PUSH2 0x2BE3 DUP5 SLOAD PUSH2 0x2B3A JUMP JUMPDEST DUP5 PUSH2 0x2B74 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C1E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2C06 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C4D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2C2E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2C6B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2C88 DUP2 PUSH2 0x2B3A JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x2CA0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2CB5 JUMPI PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x2CE4 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2CDB JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x2CC2 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CFA DUP3 DUP6 PUSH2 0x2C7B JUMP JUMPDEST DUP4 MLOAD PUSH2 0x2D0A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2548 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x2D50 JUMPI PUSH2 0x2D50 PUSH2 0x25E7 JUMP JUMPDEST PUSH2 0x2D64 DUP4 PUSH2 0x2D5E DUP4 SLOAD PUSH2 0x2B3A JUMP JUMPDEST DUP4 PUSH2 0x2B74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2D98 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x2D80 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2DC9 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2DA9 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x2DE6 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71F PUSH2 0x2E11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2189 DUP3 DUP5 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2E86 SWAP1 DUP4 ADD DUP5 PUSH2 0x256C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2189 DUP2 PUSH2 0x2423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2EDA SWAP1 DUP4 ADD DUP7 PUSH2 0x2896 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2EEC DUP2 DUP7 PUSH2 0x2896 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2F00 DUP2 DUP6 PUSH2 0x256C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2F1E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2548 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71F PUSH2 0x2E11 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2F4E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2896 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1FA5 DUP2 DUP6 PUSH2 0x2896 JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC88BE536D5240C274A3B1D3 LOG1 0xBE SLOAD BASEFEE 0x2F 0xD9 0xCA LOG2 SWAP5 CREATE DUP13 PUSH3 0xA7CDE5 PUSH10 0xF49A3C450002DD7BC7DE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x96011FEDCA1C DUP2 DUP11 PUSH14 0xA1C1104CFDC1ABD6D51755D91572 TSTORE 0xAC GAS 0xDD SHR SWAP7 PUSH22 0x1D64736F6C6343000818003300000000000000000000 ","sourceMap":"874:5025:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3298:191:3;;;;;;;;;;-1:-1:-1;3298:191:3;;;;;:::i;:::-;;:::i;:::-;;;597:25:30;;;585:2;570:18;3298:191:3;;;;;;;;5672:225:29;;;;;;;;;;-1:-1:-1;5672:225:29;;;;;:::i;:::-;;:::i;:::-;;;1184:14:30;;1177:22;1159:41;;1147:2;1132:18;5672:225:29;1019:187:30;2736:237:29;;;;;;;;;;-1:-1:-1;2736:237:29;;;;;:::i;:::-;;:::i;:::-;;1433:61;;;;;;;;;;-1:-1:-1;1433:61:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1523:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2979:249::-;;;;;;;;;;-1:-1:-1;2979:249:29;;;;;:::i;:::-;;:::i;2114:171:4:-;;;;;;;;;;-1:-1:-1;2261:17:4;;2114:171;;4807:191:0;;;;;;;;;;-1:-1:-1;4807:191:0;;;;;:::i;:::-;;:::i;1373:54:29:-;;;;;;;;;;-1:-1:-1;1373:54:29;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;5049:429:3:-;;;;;;;;;;-1:-1:-1;5049:429:3;;;;;:::i;:::-;;:::i;5294:136:0:-;;;;;;;;;;-1:-1:-1;5294:136:0;;;;;:::i;:::-;;:::i;6396:245::-;;;;;;;;;;-1:-1:-1;6396:245:0;;;;;:::i;:::-;;:::i;3646:552:3:-;;;;;;;;;;-1:-1:-1;3646:552:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4161:214:2:-;;;;;;:::i;:::-;;:::i;2378:106:4:-;;;;;;;;;;-1:-1:-1;2378:106:4;;;;;:::i;:::-;2435:4;2032:18;;;1604:28;2032:18;;;;;;-1:-1:-1;;;2378:106:4;3708:134:2;;;;;;;;;;;;;:::i;2561:169:29:-;;;;;;;;;;-1:-1:-1;2561:169:29;;;;;:::i;:::-;;:::i;1798:62::-;;;;;;;;;;-1:-1:-1;1798:62:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1573:21;;;;;;;;;;;;;:::i;4003:694::-;;;;;;;;;;-1:-1:-1;4003:694:29;;;;;:::i;:::-;;:::i;3780:207:0:-;;;;;;;;;;-1:-1:-1;3780:207:0;;;;;:::i;:::-;;:::i;1547:20:29:-;;;;;;;;;;;;;:::i;1147:62::-;;;;;;;;;;;;1185:24;1147:62;;2398:49:0;;;;;;;;;;-1:-1:-1;2398:49:0;2443:4;2398:49;;4233:144:3;;;;;;;;;;-1:-1:-1;4233:144:3;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;1875:182:4;;;;;;;;;;-1:-1:-1;1875:182:4;;;;;:::i;:::-;1937:7;2032:18;;;1604:28;2032:18;;;;;;;1875:182;5710:138:0;;;;;;;;;;-1:-1:-1;5710:138:0;;;;;:::i;:::-;;:::i;1890:561:29:-;;;;;;;;;;-1:-1:-1;1890:561:29;;;;;:::i;:::-;;:::i;4412:216:3:-;;;;;;;;;;-1:-1:-1;4412:216:3;;;;;:::i;:::-;;:::i;4663:351::-;;;;;;;;;;-1:-1:-1;4663:351:3;;;;;:::i;:::-;;:::i;3234:86:29:-;;;;;;;;;;-1:-1:-1;3300:17:29;;3234:86;;1075:66;;;;;;;;;;;;1115:26;1075:66;;3298:191:3;3375:7;3458:15;;;-1:-1:-1;;;;;;;;;;;3458:15:3;;;;;;;;-1:-1:-1;;;;;3458:24:3;;;;;;;;;;3298:191;;;;;:::o;5672:225:29:-;5827:4;5854:36;5878:11;5854:23;:36::i;2736:237::-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;2895:71:29::1;;;;;;;;2920:7;2895:71;;;;;;2940:9;2895:71;;;;;;2956:8;;2895:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;2895:71:29;;;;-1:-1:-1;;2876:16:29;;;::::1;::::0;;;;;;;;:90;;;;;;::::1;::::0;-1:-1:-1;;2876:90:29;;;;::::1;;-1:-1:-1::0;;2876:90:29;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;:16;;-1:-1:-1;;2876:90:29;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;;;;;;;;;2736:237:29:o;1523:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2979:249::-;3059:17;3079:16;;;;;;;;;;:20;;3059:40;;3034:13;;3059:17;3079:20;3059:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3119:3;3113:17;3134:1;3113:22;3109:38;;3144:3;2979:249;-1:-1:-1;;2979:249:29:o;3109:38::-;3188:7;3197:13;:2;:11;:13::i;:::-;3171:49;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3157:64;;;2979:249;;;:::o;4807:191:0:-;4872:7;4967:14;;;-1:-1:-1;;;;;;;;;;;4967:14:0;;;;;:24;;;;4807:191::o;1373:54:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5049:429:3:-;966:10:5;-1:-1:-1;;;;;5286:14:3;;;;;;;:49;;;5305:30;5322:4;5328:6;5305:16;:30::i;:::-;5304:31;5286:49;5282:129;;;5358:42;;-1:-1:-1;;;5358:42:3;;-1:-1:-1;;;;;16819:15:30;;;5358:42:3;;;16801:34:30;16871:15;;16851:18;;;16844:43;16736:18;;5358:42:3;;;;;;;;5282:129;5420:51;5443:4;5449:2;5453:3;5458:6;5466:4;5420:22;:51::i;:::-;5233:245;5049:429;;;;;:::o;5294:136:0:-;5368:18;5381:4;5368:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5398:25:::1;5409:4;5415:7;5398:10;:25::i;:::-;;5294:136:::0;;;:::o;6396:245::-;-1:-1:-1;;;;;6489:34:0;;966:10:5;6489:34:0;6485:102;;6546:30;;-1:-1:-1;;;6546:30:0;;;;;;;;;;;6485:102;6597:37;6609:4;6615:18;6597:11;:37::i;:::-;;6396:245;;:::o;3646:552:3:-;3770:16;3821:3;:10;3802:8;:15;:29;3798:121;;3880:10;;3892:15;;3854:54;;-1:-1:-1;;;3854:54:3;;;;;17072:25:30;;;;17113:18;;;17106:34;17045:18;;3854:54:3;16898:248:30;3798:121:3;3929:30;3976:8;:15;-1:-1:-1;;;;;3962:30:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3962:30:3;;3929:63;;4008:9;4003:158;4027:8;:15;4023:1;:19;4003:158;;;17259:4:18;17250:14;;;17230:35;;;17224:42;4082:68:3;;17259:4:18;17250:14;;;17230:35;;;17224:42;3298:191:3;:::i;4082:68::-;4063:13;4077:1;4063:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;4044:3;;4003:158;;;-1:-1:-1;4178:13:3;3646:552;-1:-1:-1;;;3646:552:3:o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;2561:169:29:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;2654:7:29::1;:17;2664:7:::0;;2654;:17:::1;:::i;:::-;;2698:1;2686:14;2690:6;2694:1;2690:3;:6::i;:::-;2686:14;;;;;;:::i;:::-;;;;;;;;2561:169:::0;;;:::o;1573:21::-;;;;;;;:::i;4003:694::-;4183:12;:16;;;;;;;;;;:24;;;4175:45;;;;-1:-1:-1;;;4175:45:29;;18696:2:30;4175:45:29;;;18678:21:30;18735:1;18715:18;;;18708:29;-1:-1:-1;;;18753:18:30;;;18746:38;18801:18;;4175:45:29;18494:331:30;4175:45:29;4257:8;4238:15;:27;;4230:47;;;;-1:-1:-1;;;4230:47:29;;19032:2:30;4230:47:29;;;19014:21:30;19071:1;19051:18;;;19044:29;-1:-1:-1;;;19089:18:30;;;19082:37;19136:18;;4230:47:29;18830:330:30;4230:47:29;-1:-1:-1;;;;;4296:14:29;;;;;;:10;:14;;;;;;;;:30;;;;;;;;;;;4295:31;4287:54;;;;-1:-1:-1;;;4287:54:29;;19367:2:30;4287:54:29;;;19349:21:30;19406:2;19386:18;;;19379:30;-1:-1:-1;;;19425:18:30;;;19418:40;19475:18;;4287:54:29;19165:334:30;4287:54:29;4360:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;4360:17:29;;;;;;;;;;;;4359:18;4351:45;;;;-1:-1:-1;;;4351:45:29;;19706:2:30;4351:45:29;;;19688:21:30;19745:2;19725:18;;;19718:30;-1:-1:-1;;;19764:18:30;;;19757:44;19818:18;;4351:45:29;19504:338:30;4351:45:29;4407:14;4424:36;4436:2;4440;4444:8;4454:5;4424:11;:36::i;:::-;4407:53;;4470:17;4490:27;4499:6;4507:9;;4490:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4490:8:29;;-1:-1:-1;;;4490:27:29:i;:::-;4470:47;;4535:31;1185:24;4556:9;4535:7;:31::i;:::-;4527:51;;;;-1:-1:-1;;;4527:51:29;;20049:2:30;4527:51:29;;;20031:21:30;20088:1;20068:18;;;20061:29;-1:-1:-1;;;20106:18:30;;;20099:37;20153:18;;4527:51:29;19847:330:30;4527:51:29;-1:-1:-1;;;;;4589:14:29;;;;;;:10;:14;;;;;;;;:30;;;;;;;;:37;;4622:4;-1:-1:-1;;4589:37:29;;;;;;;;4636:13;;;;;;;;;:17;;;;;;;;;:24;;;;;;;;;;4670:20;;;;;;;;;;;;4589:14;;4636:13;;4622:4;4670:5;:20::i;:::-;4165:532;;4003:694;;;;;;:::o;3780:207:0:-;3857:4;3949:14;;;-1:-1:-1;;;;;;;;;;;3949:14:0;;;;;;;;-1:-1:-1;;;;;3949:31:0;;;;;;;;;;;;;;;3780:207::o;1547:20:29:-;;;;;;;:::i;4233:144:3:-;4318:52;966:10:5;4351:8:3;4361;4318:18;:52::i;5710:138:0:-;5785:18;5798:4;5785:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5815:26:::1;5827:4;5833:7;5815:11;:26::i;1890:561:29:-:0;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;-1:-1:-1;;;;;4348:14:1;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;-1:-1:-1;;;;;4788:16:1;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;2084:18:29::1;;;;;;;;;;;;::::0;:14:::1;:18::i;:::-;2112:22;:20;:22::i;:::-;2144;:20;:22::i;:::-;2176:24;:22;:24::i;:::-;2211:4;:12;2218:5:::0;2211:4;:12:::1;:::i;:::-;-1:-1:-1::0;2233:6:29::1;:16;2242:7:::0;2233:6;:16:::1;:::i;:::-;-1:-1:-1::0;2259:7:29::1;:18;2269:8:::0;2259:7;:18:::1;:::i;:::-;-1:-1:-1::0;2288:37:29::1;2443:4:0;2319:5:29::0;2288:10:::1;:37::i;:::-;;2335:32;1115:26;2361:5;2335:10;:32::i;:::-;;2377:31;1185:24;2401:6;2377:10;:31::i;:::-;;2419:25;:23;:25::i;:::-;5068:14:1::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;20335:50:30;;5140:14:1;;20323:2:30;20308:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;1890:561:29;;;;;:::o;4412:216:3:-;-1:-1:-1;;;;;4582:29:3;;;4502:4;4582:29;;;:20;:29;;;;;;;;:39;;;;;;;;;;;;;;;4412:216::o;4663:351::-;966:10:5;-1:-1:-1;;;;;4829:14:3;;;;;;;:49;;;4848:30;4865:4;4871:6;4848:16;:30::i;:::-;4847:31;4829:49;4825:129;;;4901:42;;-1:-1:-1;;;4901:42:3;;-1:-1:-1;;;;;16819:15:30;;;4901:42:3;;;16801:34:30;16871:15;;16851:18;;;16844:43;16736:18;;4901:42:3;16589:304:30;4825:129:3;4963:44;4981:4;4987:2;4991;4995:5;5002:4;4963:17;:44::i;3491:202:0:-;3576:4;-1:-1:-1;;;;;;3599:47:0;;-1:-1:-1;;;3599:47:0;;:87;;;3650:36;3674:11;3650:23;:36::i;4196:103::-;4262:30;4273:4;966:10:5;4262::0;:30::i;:::-;4196:103;:::o;1308:634:24:-;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;-1:-1:-1;;;;;1488:18:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:24;-1:-1:-1;1465:41:24;-1:-1:-1;1595:30:24;;;1611:4;1595:30;1652:247;-1:-1:-1;;1683:5:24;-1:-1:-1;;;1782:2:24;1771:14;;1766:32;1683:5;1753:46;1843:2;1834:11;;;-1:-1:-1;1863:21:24;1652:247;1863:21;-1:-1:-1;1919:6:24;1308:634;-1:-1:-1;;;1308:634:24:o;10123:445:3:-;-1:-1:-1;;;;;10316:16:3;;10312:88;;10355:34;;-1:-1:-1;;;10355:34:3;;10386:1;10355:34;;;20674:51:30;20647:18;;10355:34:3;20528:203:30;10312:88:3;-1:-1:-1;;;;;10413:18:3;;10409:88;;10454:32;;-1:-1:-1;;;10454:32:3;;10483:1;10454:32;;;20674:51:30;20647:18;;10454:32:3;20528:203:30;10409:88:3;10506:55;10533:4;10539:2;10543:3;10548:6;10556:4;10506:26;:55::i;:::-;10123:445;;;;;:::o;7318:387:0:-;7395:4;-1:-1:-1;;;;;;;;;;;7485:22:0;7493:4;7499:7;7485;:22::i;:::-;7480:219;;7523:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7523:31:0;;;;;;;;;:38;;-1:-1:-1;;7523:38:0;7557:4;7523:38;;;7607:12;966:10:5;;887:96;7607:12:0;-1:-1:-1;;;;;7580:40:0;7598:7;-1:-1:-1;;;;;7580:40:0;7592:4;7580:40;;;;;;;;;;7641:4;7634:11;;;;;7480:219;7683:5;7676:12;;;;;7942:388;8020:4;-1:-1:-1;;;;;;;;;;;8109:22:0;8117:4;8123:7;8109;:22::i;:::-;8105:219;;;8181:5;8147:14;;;;;;;;;;;-1:-1:-1;;;;;8147:31:0;;;;;;;;;;:39;;-1:-1:-1;;8147:39:0;;;8205:40;966:10:5;;8147:14:0;;8205:40;;8181:5;8205:40;8266:4;8259:11;;;;;4578:312:2;4658:4;-1:-1:-1;;;;;4667:6:2;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:11;-1:-1:-1;;;;;1519:53:11;;1441:138;4728:32:2;-1:-1:-1;;;;;4728:42:2;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:2;;;;;;;;;;;4633:251;4578:312::o;2457:98:29:-;1115:26;3272:16:0;3283:4;3272:10;:16::i;6032:538:2:-;6149:17;-1:-1:-1;;;;;6131:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:2;;;;;;;;-1:-1:-1;;6131:52:2;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:2;;-1:-1:-1;;;;;20692:32:30;;6493:60:2;;;20674:51:30;20647:18;;6493:60:2;20528:203:30;6127:437:2;-1:-1:-1;;;;;;;;;;;6225:40:2;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:2;;;;;597:25:30;;;570:18;;6292:34:2;451:177:30;6221:120:2;6354:54;6384:17;6403:4;6354:29;:54::i;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:2;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:2;;;;;;;;;;;3724:273:29;3903:17;;3932:46;;;1715:77;3932:46;;;21184:25:30;-1:-1:-1;;;;;21245:32:30;;21225:18;;;21218:60;;;;21294:18;;;21287:34;;;21337:18;;;21330:34;;;21380:19;;;21373:35;;;3825:7:29;;3903:17;21156:19:30;;3932:46:29;;;;;;;;;;;;3922:57;;;;;;3874:106;;;;;;;;-1:-1:-1;;;21677:27:30;;21729:1;21720:11;;21713:27;;;;21765:2;21756:12;;21749:28;21802:2;21793:12;;21419:392;3874:106:29;;;;;;;;;;;;;3851:139;;;;;;3844:146;;3724:273;;;;;;:::o;4703:457::-;4778:7;4801:3;:10;4815:2;4801:16;4797:39;;-1:-1:-1;4834:1:29;4819:17;;4797:39;4928:4;4919:14;;4913:21;4967:4;4958:14;;4952:21;5014:4;5005:14;;4999:21;4846:9;4991:30;5048:2;5044:6;;5040:19;;;5052:7;5057:2;5052:7;;:::i;:::-;;;5040:19;5073:1;:7;;5078:2;5073:7;;:18;;;;;5084:1;:7;;5089:2;5084:7;;5073:18;5069:41;;;5108:1;5093:17;;;;;;;5069:41;5127:26;;;;;;;;;;;;22328:25:30;;;22401:4;22389:17;;22369:18;;;22362:45;;;;22423:18;;;22416:34;;;22466:18;;;22459:34;;;5127:26:29;;22300:19:30;;5127:26:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5127:26:29;;-1:-1:-1;;5127:26:29;;;4703:457;-1:-1:-1;;;;;;;4703:457:29:o;11913:346:3:-;-1:-1:-1;;;;;12009:16:3;;12005:88;;12048:34;;-1:-1:-1;;;12048:34:3;;12079:1;12048:34;;;20674:51:30;20647:18;;12048:34:3;20528:203:30;12005:88:3;15192:4;15186:11;;15262:1;15247:17;;;15393:4;15381:17;;15374:35;;;15510:17;;;15540;;;15033:23;15577:17;;15570:35;;;15713:17;;;15700:31;;;15186:11;12191:61;-1:-1:-1;12230:2:3;15186:11;15510:17;12247:4;12191:26;:61::i;14435:374::-;-1:-1:-1;;;;;;;;;;;;;;;;14599:22:3;;14595:94;;14644:34;;-1:-1:-1;;;14644:34:3;;14675:1;14644:34;;;20674:51:30;20647:18;;14644:34:3;20528:203:30;14595:94:3;-1:-1:-1;;;;;14698:27:3;;;;;;;:20;;;:27;;;;;;;;:37;;;;;;;;;;;;;:48;;-1:-1:-1;;14698:48:3;;;;;;;;;;14761:41;;1159::30;;;14761::3;;1132:18:30;14761:41:3;;;;;;;14528:281;14435:374;;;:::o;9071:205:1:-;9129:30;;3147:66;9186:27;8819:122;2119:117:3;6929:20:1;:18;:20::i;:::-;2199:30:3::1;2224:4;2199:24;:30::i;1654:65:4:-:0;6929:20:1;:18;:20::i;3326:392:29:-;3451:95;3580:4;3564:22;;;;;;:::i;:::-;;;;;;;;;;3614:10;;;;;;;;-1:-1:-1;;;3614:10:29;;;;;3423:278;;;;;22967:25:30;;;;23008:18;;23001:34;;;;3604:21:29;23051:18:30;;;23044:34;3643:13:29;23094:18:30;;;23087:34;3682:4:29;23137:19:30;;;23130:61;22939:19;;3423:278:29;;;-1:-1:-1;;3423:278:29;;;;;;;;;3400:311;;3423:278;3400:311;;;;3380:17;:331;3326:392::o;9259:463:3:-;-1:-1:-1;;;;;9381:16:3;;9377:88;;9420:34;;-1:-1:-1;;;9420:34:3;;9451:1;9420:34;;;20674:51:30;20647:18;;9420:34:3;20528:203:30;9377:88:3;-1:-1:-1;;;;;9478:18:3;;9474:88;;9519:32;;-1:-1:-1;;;9519:32:3;;9548:1;9519:32;;;20674:51:30;20647:18;;9519:32:3;20528:203:30;9474:88:3;15192:4;15186:11;;15262:1;15247:17;;;15393:4;15381:17;;15374:35;;;15510:17;;;15540;;;15033:23;15577:17;;15570:35;;;15713:17;;;15700:31;;;15186:11;9660:55;9687:4;9693:2;15186:11;15510:17;9710:4;9660:26;:55::i;:::-;9367:355;;9259:463;;;;;:::o;2386:316::-;2499:4;-1:-1:-1;;;;;;2534:41:3;;-1:-1:-1;;;2534:41:3;;:109;;-1:-1:-1;;;;;;;2591:52:3;;-1:-1:-1;;;2591:52:3;2534:109;:161;;;-1:-1:-1;;;;;;;;;;1101:40:6;;;2659:36:3;1002:146:6;4429:197:0;4517:22;4525:4;4531:7;4517;:22::i;:::-;4512:108;;4562:47;;-1:-1:-1;;;4562:47:0;;-1:-1:-1;;;;;23394:32:30;;4562:47:0;;;23376:51:30;23443:18;;;23436:34;;;23349:18;;4562:47:0;23202:274:30;29154:916:26;29207:7;;-1:-1:-1;;;29282:17:26;;29278:103;;-1:-1:-1;;;29319:17:26;;;-1:-1:-1;29364:2:26;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:26;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:26;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:26;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:26;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:26;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:26:o;8102:700:3:-;8303:30;8311:4;8317:2;8321:3;8326:6;8303:7;:30::i;:::-;-1:-1:-1;;;;;8347:16:3;;;8343:453;;8428:10;;966::5;;8442:1:3;8428:15;8424:362;;17259:4:18;17230:35;;;17224:42;17230:35;;;17224:42;8581:72:3;8617:8;8627:4;8633:2;17224:42:18;;8648:4:3;8581:35;:72::i;:::-;8445:223;;8424:362;;;8692:79;8733:8;8743:4;8749:2;8753:3;8758:6;8766:4;8692:40;:79::i;2264:344:11:-;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:11;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;7082:141:1:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;2242:110:3;6929:20:1;:18;:20::i;:::-;2332:13:3::1;2340:4;2332:7;:13::i;5166:500:29:-:0;-1:-1:-1;;;;;5372:18:29;;;;;;:38;;-1:-1:-1;;;;;;5394:16:29;;;;5372:38;5368:246;;;5482:9;5477:127;5501:3;:10;5497:1;:14;5477:127;;;5545:12;:20;5558:3;5562:1;5558:6;;;;;;;;:::i;:::-;;;;;;;5545:20;;;;;;;;;;;:30;;;;;;;;;;;;5544:31;5536:53;;;;-1:-1:-1;;;5536:53:29;;23683:2:30;5536:53:29;;;23665:21:30;23722:1;23702:18;;;23695:29;-1:-1:-1;;;23740:18:30;;;23733:39;23789:18;;5536:53:29;23481:332:30;5536:53:29;5513:3;;5477:127;;;;5368:246;5623:36;5637:4;5643:2;5647:3;5652:6;5623:13;:36::i;1006:961:16:-;-1:-1:-1;;;;;1205:14:16;;;:18;1201:760;;1243:71;;-1:-1:-1;;;1243:71:16;;-1:-1:-1;;;;;1243:38:16;;;;;:71;;1282:8;;1292:4;;1298:2;;1302:5;;1309:4;;1243:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1243:71:16;;;;;;;;-1:-1:-1;;1243:71:16;;;;;;;;;;;;:::i;:::-;;;1239:712;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:6;:13;1630:1;1613:18;1609:328;;1718:41;;-1:-1:-1;;;1718:41:16;;-1:-1:-1;;;;;20692:32:30;;1718:41:16;;;20674:51:30;20647:18;;1718:41:16;20528:203:30;1609:328:16;1889:6;1883:13;1876:4;1868:6;1864:17;1857:40;1239:712;-1:-1:-1;;;;;;1363:55:16;;-1:-1:-1;;;1363:55:16;1359:189;;1488:41;;-1:-1:-1;;;1488:41:16;;-1:-1:-1;;;;;20692:32:30;;1488:41:16;;;20674:51:30;20647:18;;1488:41:16;20528:203:30;2523:1028:16;-1:-1:-1;;;;;2747:14:16;;;:18;2743:802;;2785:78;;-1:-1:-1;;;2785:78:16;;-1:-1:-1;;;;;2785:43:16;;;;;:78;;2829:8;;2839:4;;2845:3;;2850:6;;2858:4;;2785:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2785:78:16;;;;;;;;-1:-1:-1;;2785:78:16;;;;;;;;;;;;:::i;:::-;;;2781:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2942:60:16;;-1:-1:-1;;;2942:60:16;2938:194;;3072:41;;-1:-1:-1;;;3072:41:16;;-1:-1:-1;;;;;20692:32:30;;3072:41:16;;;20674:51:30;20647:18;;3072:41:16;20528:203:30;1671:281:11;1748:17;-1:-1:-1;;;;;1748:29:11;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:11;;-1:-1:-1;;;;;20692:32:30;;1805:47:11;;;20674:51:30;20647:18;;1805:47:11;20528:203:30;1744:119:11;-1:-1:-1;;;;;;;;;;;1872:73:11;;-1:-1:-1;;;;;;1872:73:11;-1:-1:-1;;;;;1872:73:11;;;;;;;;;;1671:281::o;3916:253:17:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:17;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:17:o;6113:122:11:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:11;;;;;;;;;;;8485:120:1;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;11390:145:3:-;-1:-1:-1;;;;;;;;;;;11513:6:3;:15;11522:6;11513;:15;:::i;2529:1671:4:-;1604:28;2762:36;2776:4;2782:2;2786:3;2791:6;2762:13;:36::i;:::-;-1:-1:-1;;;;;2813:18:4;;2809:575;;2847:22;2892:9;2887:333;2911:3;:10;2907:1;:14;2887:333;;;17259:4:18;17250:14;;;17230:35;;;;;17224:42;17230:35;;;;;17224:42;2946:13:4;3114:41;;;;;;;;;;:50;;17224:42:18;;;;3114:50:4;;17224:42:18;;3114:50:4;:::i;:::-;;;;-1:-1:-1;3182:23:4;;-1:-1:-1;3200:5:4;3182:23;;:::i;:::-;;-1:-1:-1;;2923:3:4;;2887:333;;;;3359:14;3338:1;:17;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;;;2809:575:4;-1:-1:-1;;;;;3398:16:4;;3394:800;;3430:22;3475:9;3470:499;3494:3;:10;3490:1;:14;3470:499;;;17259:4:18;17250:14;;;17230:35;;;;;17224:42;17230:35;;;;;17224:42;3529:13:4;3730:41;;;;;;;;;;;:50;;;;;;;3913:23;;;;;-1:-1:-1;3506:3:4;3470:499;;;-1:-1:-1;4134:17:4;;;:35;;;;;;;;2683:1517;2529:1671;;;;:::o;4437:582:17:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:17;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:17;;-1:-1:-1;;;;;20692:32:30;;4933:24:17;;;20674:51:30;20647:18;;4933:24:17;20528:203:30;4853:119:17;-1:-1:-1;4992:10:17;4605:408;4437:582;;;;;:::o;6179:1344:3:-;6371:13;;6357:10;;-1:-1:-1;;;;;;;;;;;2032:22:3;6357:27;6353:117;;6433:10;;6445:13;;6407:52;;-1:-1:-1;;;6407:52:3;;;;;17072:25:30;;;;17113:18;;;17106:34;17045:18;;6407:52:3;16898:248:30;6353:117:3;966:10:5;6480:16:3;6522:697;6546:3;:10;6542:1;:14;6522:697;;;17259:4:18;17250:14;;;17230:35;;;;;17224:42;17230:35;;;;;;17224:42;-1:-1:-1;;;;;6692:18:3;;;6688:424;;6730:19;6752:15;;;;;;;;;;;-1:-1:-1;;;;;6752:21:3;;;;;;;;;;6795:19;;;6791:129;;;6845:56;;-1:-1:-1;;;6845:56:3;;-1:-1:-1;;;;;26141:32:30;;6845:56:3;;;26123:51:30;26190:18;;;26183:34;;;26233:18;;;26226:34;;;26276:18;;;26269:34;;;26095:19;;6845:56:3;25892:417:30;6791:129:3;7036:11;:15;;;;;;;;;;;-1:-1:-1;;;;;7036:21:3;;;;;;;;;7060:19;;;;7036:43;;6688:424;-1:-1:-1;;;;;7130:16:3;;;7126:83;;7166:11;:15;;;;;;;;;;;-1:-1:-1;;;;;7166:19:3;;;;;;;;;:28;;7189:5;;7166:11;:28;;7189:5;;7166:28;:::i;:::-;;;;-1:-1:-1;;7126:83:3;-1:-1:-1;;6558:3:3;;6522:697;;;;7233:3;:10;7247:1;7233:15;7229:288;;17259:4:18;17230:35;;17224:42;7264:10:3;;17259:4:18;17230:35;;17224:42;7264:38:3;;-1:-1:-1;7410:2:3;-1:-1:-1;;;;;7379:45:3;7404:4;-1:-1:-1;;;;;7379:45:3;7394:8;-1:-1:-1;;;;;7379:45:3;;7414:2;7418:5;7379:45;;;;;;17072:25:30;;;17128:2;17113:18;;17106:34;17060:2;17045:18;;16898:248;7379:45:3;;;;;;;;7250:185;;7229:288;;;7490:2;-1:-1:-1;;;;;7460:46:3;7484:4;-1:-1:-1;;;;;7460:46:3;7474:8;-1:-1:-1;;;;;7460:46:3;;7494:3;7499:6;7460:46;;;;;;;:::i;:::-;;;;;;;;6286:1237;;6179:1344;;;;:::o;5559:434:17:-;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:17;;;;;;;;;;;14:173:30;82:20;;-1:-1:-1;;;;;131:31:30;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:30:o;633:131::-;-1:-1:-1;;;;;;707:32:30;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:160::-;1276:20;;1332:13;;1325:21;1315:32;;1305:60;;1361:1;1358;1351:12;1376:348;1428:8;1438:6;1492:3;1485:4;1477:6;1473:17;1469:27;1459:55;;1510:1;1507;1500:12;1459:55;-1:-1:-1;1533:20:30;;-1:-1:-1;;;;;1565:30:30;;1562:50;;;1608:1;1605;1598:12;1562:50;1645:4;1637:6;1633:17;1621:29;;1697:3;1690:4;1681:6;1673;1669:19;1665:30;1662:39;1659:59;;;1714:1;1711;1704:12;1659:59;1376:348;;;;;:::o;1729:616::-;1821:6;1829;1837;1845;1853;1906:3;1894:9;1885:7;1881:23;1877:33;1874:53;;;1923:1;1920;1913:12;1874:53;1959:9;1946:23;1936:33;;1988:35;2019:2;2008:9;2004:18;1988:35;:::i;:::-;1978:45;;2042:35;2073:2;2062:9;2058:18;2042:35;:::i;:::-;2032:45;;2128:2;2117:9;2113:18;2100:32;-1:-1:-1;;;;;2147:6:30;2144:30;2141:50;;;2187:1;2184;2177:12;2141:50;2226:59;2277:7;2268:6;2257:9;2253:22;2226:59;:::i;:::-;1729:616;;;;-1:-1:-1;1729:616:30;;-1:-1:-1;2304:8:30;;2200:85;1729:616;-1:-1:-1;;;1729:616:30:o;2350:254::-;2418:6;2426;2479:2;2467:9;2458:7;2454:23;2450:32;2447:52;;;2495:1;2492;2485:12;2447:52;2531:9;2518:23;2508:33;;2560:38;2594:2;2583:9;2579:18;2560:38;:::i;:::-;2550:48;;2350:254;;;;;:::o;2609:250::-;2694:1;2704:113;2718:6;2715:1;2712:13;2704:113;;;2794:11;;;2788:18;2775:11;;;2768:39;2740:2;2733:10;2704:113;;;-1:-1:-1;;2851:1:30;2833:16;;2826:27;2609:250::o;2864:271::-;2906:3;2944:5;2938:12;2971:6;2966:3;2959:19;2987:76;3056:6;3049:4;3044:3;3040:14;3033:4;3026:5;3022:16;2987:76;:::i;:::-;3117:2;3096:15;-1:-1:-1;;3092:29:30;3083:39;;;;3124:4;3079:50;;2864:271;-1:-1:-1;;2864:271:30:o;3140:220::-;3289:2;3278:9;3271:21;3252:4;3309:45;3350:2;3339:9;3335:18;3327:6;3309:45;:::i;3365:180::-;3424:6;3477:2;3465:9;3456:7;3452:23;3448:32;3445:52;;;3493:1;3490;3483:12;3445:52;-1:-1:-1;3516:23:30;;3365:180;-1:-1:-1;3365:180:30:o;3917:382::-;4124:6;4117:14;4110:22;4099:9;4092:41;4183:6;4176:14;4169:22;4164:2;4153:9;4149:18;4142:50;4228:2;4223;4212:9;4208:18;4201:30;4073:4;4248:45;4289:2;4278:9;4274:18;4266:6;4248:45;:::i;4304:127::-;4365:10;4360:3;4356:20;4353:1;4346:31;4396:4;4393:1;4386:15;4420:4;4417:1;4410:15;4436:275;4507:2;4501:9;4572:2;4553:13;;-1:-1:-1;;4549:27:30;4537:40;;-1:-1:-1;;;;;4592:34:30;;4628:22;;;4589:62;4586:88;;;4654:18;;:::i;:::-;4690:2;4683:22;4436:275;;-1:-1:-1;4436:275:30:o;4716:183::-;4776:4;-1:-1:-1;;;;;4801:6:30;4798:30;4795:56;;;4831:18;;:::i;:::-;-1:-1:-1;4876:1:30;4872:14;4888:4;4868:25;;4716:183::o;4904:668::-;4958:5;5011:3;5004:4;4996:6;4992:17;4988:27;4978:55;;5029:1;5026;5019:12;4978:55;5065:6;5052:20;5091:4;5115:60;5131:43;5171:2;5131:43;:::i;:::-;5115:60;:::i;:::-;5197:3;5221:2;5216:3;5209:15;5249:4;5244:3;5240:14;5233:21;;5306:4;5300:2;5297:1;5293:10;5285:6;5281:23;5277:34;5263:48;;5334:3;5326:6;5323:15;5320:35;;;5351:1;5348;5341:12;5320:35;5387:4;5379:6;5375:17;5401:142;5417:6;5412:3;5409:15;5401:142;;;5483:17;;5471:30;;5521:12;;;;5434;;5401:142;;;-1:-1:-1;5561:5:30;4904:668;-1:-1:-1;;;;;;4904:668:30:o;5577:530::-;5619:5;5672:3;5665:4;5657:6;5653:17;5649:27;5639:55;;5690:1;5687;5680:12;5639:55;5726:6;5713:20;-1:-1:-1;;;;;5748:2:30;5745:26;5742:52;;;5774:18;;:::i;:::-;5818:55;5861:2;5842:13;;-1:-1:-1;;5838:27:30;5867:4;5834:38;5818:55;:::i;:::-;5898:2;5889:7;5882:19;5944:3;5937:4;5932:2;5924:6;5920:15;5916:26;5913:35;5910:55;;;5961:1;5958;5951:12;5910:55;6026:2;6019:4;6011:6;6007:17;6000:4;5991:7;5987:18;5974:55;6074:1;6049:16;;;6067:4;6045:27;6038:38;;;;6053:7;5577:530;-1:-1:-1;;;5577:530:30:o;6112:943::-;6266:6;6274;6282;6290;6298;6351:3;6339:9;6330:7;6326:23;6322:33;6319:53;;;6368:1;6365;6358:12;6319:53;6391:29;6410:9;6391:29;:::i;:::-;6381:39;;6439:38;6473:2;6462:9;6458:18;6439:38;:::i;:::-;6429:48;;6528:2;6517:9;6513:18;6500:32;-1:-1:-1;;;;;6592:2:30;6584:6;6581:14;6578:34;;;6608:1;6605;6598:12;6578:34;6631:61;6684:7;6675:6;6664:9;6660:22;6631:61;:::i;:::-;6621:71;;6745:2;6734:9;6730:18;6717:32;6701:48;;6774:2;6764:8;6761:16;6758:36;;;6790:1;6787;6780:12;6758:36;6813:63;6868:7;6857:8;6846:9;6842:24;6813:63;:::i;:::-;6803:73;;6929:3;6918:9;6914:19;6901:33;6885:49;;6959:2;6949:8;6946:16;6943:36;;;6975:1;6972;6965:12;6943:36;;6998:51;7041:7;7030:8;7019:9;7015:24;6998:51;:::i;:::-;6988:61;;;6112:943;;;;;;;;:::o;7319:1146::-;7437:6;7445;7498:2;7486:9;7477:7;7473:23;7469:32;7466:52;;;7514:1;7511;7504:12;7466:52;7554:9;7541:23;-1:-1:-1;;;;;7624:2:30;7616:6;7613:14;7610:34;;;7640:1;7637;7630:12;7610:34;7678:6;7667:9;7663:22;7653:32;;7723:7;7716:4;7712:2;7708:13;7704:27;7694:55;;7745:1;7742;7735:12;7694:55;7781:2;7768:16;7803:4;7827:60;7843:43;7883:2;7843:43;:::i;7827:60::-;7921:15;;;8003:1;7999:10;;;;7991:19;;7987:28;;;7952:12;;;;8027:19;;;8024:39;;;8059:1;8056;8049:12;8024:39;8083:11;;;;8103:148;8119:6;8114:3;8111:15;8103:148;;;8185:23;8204:3;8185:23;:::i;:::-;8173:36;;8136:12;;;;8229;;;;8103:148;;;8270:5;-1:-1:-1;;8313:18:30;;8300:32;;-1:-1:-1;;8344:16:30;;;8341:36;;;8373:1;8370;8363:12;8341:36;;8396:63;8451:7;8440:8;8429:9;8425:24;8396:63;:::i;:::-;8386:73;;;7319:1146;;;;;:::o;8470:439::-;8523:3;8561:5;8555:12;8588:6;8583:3;8576:19;8614:4;8643;8638:3;8634:14;8627:21;;8682:4;8675:5;8671:16;8705:1;8715:169;8729:6;8726:1;8723:13;8715:169;;;8790:13;;8778:26;;8824:12;;;;8859:15;;;;8751:1;8744:9;8715:169;;;-1:-1:-1;8900:3:30;;8470:439;-1:-1:-1;;;;;8470:439:30:o;8914:261::-;9093:2;9082:9;9075:21;9056:4;9113:56;9165:2;9154:9;9150:18;9142:6;9113:56;:::i;9180:394::-;9257:6;9265;9318:2;9306:9;9297:7;9293:23;9289:32;9286:52;;;9334:1;9331;9324:12;9286:52;9357:29;9376:9;9357:29;:::i;:::-;9347:39;;9437:2;9426:9;9422:18;9409:32;-1:-1:-1;;;;;9456:6:30;9453:30;9450:50;;;9496:1;9493;9486:12;9450:50;9519:49;9560:7;9551:6;9540:9;9536:22;9519:49;:::i;9579:411::-;9650:6;9658;9711:2;9699:9;9690:7;9686:23;9682:32;9679:52;;;9727:1;9724;9717:12;9679:52;9767:9;9754:23;-1:-1:-1;;;;;9792:6:30;9789:30;9786:50;;;9832:1;9829;9822:12;9786:50;9871:59;9922:7;9913:6;9902:9;9898:22;9871:59;:::i;:::-;9949:8;;9845:85;;-1:-1:-1;9579:411:30;-1:-1:-1;;;;9579:411:30:o;9995:690::-;10101:6;10109;10117;10125;10133;10141;10194:3;10182:9;10173:7;10169:23;10165:33;10162:53;;;10211:1;10208;10201:12;10162:53;10234:29;10253:9;10234:29;:::i;:::-;10224:39;;10310:2;10299:9;10295:18;10282:32;10272:42;;10361:2;10350:9;10346:18;10333:32;10323:42;;10412:2;10401:9;10397:18;10384:32;10374:42;;10467:3;10456:9;10452:19;10439:33;-1:-1:-1;;;;;10487:6:30;10484:30;10481:50;;;10527:1;10524;10517:12;10481:50;10566:59;10617:7;10608:6;10597:9;10593:22;10566:59;:::i;:::-;9995:690;;;;-1:-1:-1;9995:690:30;;-1:-1:-1;9995:690:30;;10644:8;;9995:690;-1:-1:-1;;;9995:690:30:o;10690:254::-;10755:6;10763;10816:2;10804:9;10795:7;10791:23;10787:32;10784:52;;;10832:1;10829;10822:12;10784:52;10855:29;10874:9;10855:29;:::i;:::-;10845:39;;10903:35;10934:2;10923:9;10919:18;10903:35;:::i;10949:890::-;11074:6;11082;11090;11098;11106;11159:3;11147:9;11138:7;11134:23;11130:33;11127:53;;;11176:1;11173;11166:12;11127:53;11216:9;11203:23;-1:-1:-1;;;;;11286:2:30;11278:6;11275:14;11272:34;;;11302:1;11299;11292:12;11272:34;11325:49;11366:7;11357:6;11346:9;11342:22;11325:49;:::i;:::-;11315:59;;11427:2;11416:9;11412:18;11399:32;11383:48;;11456:2;11446:8;11443:16;11440:36;;;11472:1;11469;11462:12;11440:36;11495:51;11538:7;11527:8;11516:9;11512:24;11495:51;:::i;:::-;11485:61;;11599:2;11588:9;11584:18;11571:32;11555:48;;11628:2;11618:8;11615:16;11612:36;;;11644:1;11641;11634:12;11612:36;;11667:51;11710:7;11699:8;11688:9;11684:24;11667:51;:::i;:::-;11657:61;;;11737:38;11771:2;11760:9;11756:18;11737:38;:::i;:::-;11727:48;;11794:39;11828:3;11817:9;11813:19;11794:39;:::i;:::-;11784:49;;10949:890;;;;;;;;:::o;11844:260::-;11912:6;11920;11973:2;11961:9;11952:7;11948:23;11944:32;11941:52;;;11989:1;11986;11979:12;11941:52;12012:29;12031:9;12012:29;:::i;:::-;12002:39;;12060:38;12094:2;12083:9;12079:18;12060:38;:::i;12109:606::-;12213:6;12221;12229;12237;12245;12298:3;12286:9;12277:7;12273:23;12269:33;12266:53;;;12315:1;12312;12305:12;12266:53;12338:29;12357:9;12338:29;:::i;:::-;12328:39;;12386:38;12420:2;12409:9;12405:18;12386:38;:::i;:::-;12376:48;;12471:2;12460:9;12456:18;12443:32;12433:42;;12522:2;12511:9;12507:18;12494:32;12484:42;;12577:3;12566:9;12562:19;12549:33;-1:-1:-1;;;;;12597:6:30;12594:30;12591:50;;;12637:1;12634;12627:12;12591:50;12660:49;12701:7;12692:6;12681:9;12677:22;12660:49;:::i;12720:380::-;12799:1;12795:12;;;;12842;;;12863:61;;12917:4;12909:6;12905:17;12895:27;;12863:61;12970:2;12962:6;12959:14;12939:18;12936:38;12933:161;;13016:10;13011:3;13007:20;13004:1;12997:31;13051:4;13048:1;13041:15;13079:4;13076:1;13069:15;12933:161;;12720:380;;;:::o;13231:543::-;13333:2;13328:3;13325:11;13322:446;;;13369:1;13393:5;13390:1;13383:16;13437:4;13434:1;13424:18;13507:2;13495:10;13491:19;13488:1;13484:27;13478:4;13474:38;13543:4;13531:10;13528:20;13525:47;;;-1:-1:-1;13566:4:30;13525:47;13621:2;13616:3;13612:12;13609:1;13605:20;13599:4;13595:31;13585:41;;13676:82;13694:2;13687:5;13684:13;13676:82;;;13739:17;;;13720:1;13709:13;13676:82;;13950:1345;14076:3;14070:10;-1:-1:-1;;;;;14095:6:30;14092:30;14089:56;;;14125:18;;:::i;:::-;14154:97;14244:6;14204:38;14236:4;14230:11;14204:38;:::i;:::-;14198:4;14154:97;:::i;:::-;14306:4;;14363:2;14352:14;;14380:1;14375:663;;;;15082:1;15099:6;15096:89;;;-1:-1:-1;15151:19:30;;;15145:26;15096:89;-1:-1:-1;;13907:1:30;13903:11;;;13899:24;13895:29;13885:40;13931:1;13927:11;;;13882:57;15198:81;;14345:944;;14375:663;13178:1;13171:14;;;13215:4;13202:18;;-1:-1:-1;;14411:20:30;;;14529:236;14543:7;14540:1;14537:14;14529:236;;;14632:19;;;14626:26;14611:42;;14724:27;;;;14692:1;14680:14;;;;14559:19;;14529:236;;;14533:3;14793:6;14784:7;14781:19;14778:201;;;14854:19;;;14848:26;-1:-1:-1;;14937:1:30;14933:14;;;14949:3;14929:24;14925:37;14921:42;14906:58;14891:74;;14778:201;-1:-1:-1;;;;;15025:1:30;15009:14;;;15005:22;14992:36;;-1:-1:-1;13950:1345:30:o;15300:723::-;15350:3;15391:5;15385:12;15420:36;15446:9;15420:36;:::i;:::-;15475:1;15492:17;;;15518:133;;;;15665:1;15660:357;;;;15485:532;;15518:133;-1:-1:-1;;15551:24:30;;15539:37;;15624:14;;15617:22;15605:35;;15596:45;;;-1:-1:-1;15518:133:30;;15660:357;15691:5;15688:1;15681:16;15720:4;15765;15762:1;15752:18;15792:1;15806:165;15820:6;15817:1;15814:13;15806:165;;;15898:14;;15885:11;;;15878:35;15941:16;;;;15835:10;;15806:165;;;15810:3;;;16000:6;15995:3;15991:16;15984:23;;15485:532;;;;;15300:723;;;;:::o;16028:556::-;16305:3;16333:38;16367:3;16359:6;16333:38;:::i;:::-;16400:6;16394:13;16416:65;16474:6;16470:2;16463:4;16455:6;16451:17;16416:65;:::i;:::-;-1:-1:-1;;;16503:15:30;;16527:22;;;16576:1;16565:13;;16028:556;-1:-1:-1;;;;16028:556:30:o;17151:127::-;17212:10;17207:3;17203:20;17200:1;17193:31;17243:4;17240:1;17233:15;17267:4;17264:1;17257:15;17283:1206;-1:-1:-1;;;;;17402:3:30;17399:27;17396:53;;;17429:18;;:::i;:::-;17458:94;17548:3;17508:38;17540:4;17534:11;17508:38;:::i;:::-;17502:4;17458:94;:::i;:::-;17578:1;17603:2;17598:3;17595:11;17620:1;17615:616;;;;18275:1;18292:3;18289:93;;;-1:-1:-1;18348:19:30;;;18335:33;18289:93;-1:-1:-1;;13907:1:30;13903:11;;;13899:24;13895:29;13885:40;13931:1;13927:11;;;13882:57;18395:78;;17588:895;;17615:616;13178:1;13171:14;;;13215:4;13202:18;;-1:-1:-1;;17651:17:30;;;17752:9;17774:229;17788:7;17785:1;17782:14;17774:229;;;17877:19;;;17864:33;17849:49;;17984:4;17969:20;;;;17937:1;17925:14;;;;17804:12;17774:229;;;17778:3;18031;18022:7;18019:16;18016:159;;;18155:1;18151:6;18145:3;18139;18136:1;18132:11;18128:21;18124:34;18120:39;18107:9;18102:3;18098:19;18085:33;18081:79;18073:6;18066:95;18016:159;;;18218:1;18212:3;18209:1;18205:11;18201:19;18195:4;18188:33;17588:895;;17283:1206;;;:::o;20736:184::-;20806:6;20859:2;20847:9;20838:7;20834:23;20830:32;20827:52;;;20875:1;20872;20865:12;20827:52;-1:-1:-1;20898:16:30;;20736:184;-1:-1:-1;20736:184:30:o;21816:127::-;21877:10;21872:3;21868:20;21865:1;21858:31;21908:4;21905:1;21898:15;21932:4;21929:1;21922:15;21948:148;22036:4;22015:12;;;22029;;;22011:31;;22054:13;;22051:39;;;22070:18;;:::i;22504:199::-;22634:3;22659:38;22693:3;22685:6;22659:38;:::i;23818:561::-;-1:-1:-1;;;;;24115:15:30;;;24097:34;;24167:15;;24162:2;24147:18;;24140:43;24214:2;24199:18;;24192:34;;;24257:2;24242:18;;24235:34;;;24077:3;24300;24285:19;;24278:32;;;24040:4;;24327:46;;24353:19;;24345:6;24327:46;:::i;:::-;24319:54;23818:561;-1:-1:-1;;;;;;;23818:561:30:o;24384:249::-;24453:6;24506:2;24494:9;24485:7;24481:23;24477:32;24474:52;;;24522:1;24519;24512:12;24474:52;24554:9;24548:16;24573:30;24597:5;24573:30;:::i;24638:827::-;-1:-1:-1;;;;;25035:15:30;;;25017:34;;25087:15;;25082:2;25067:18;;25060:43;24997:3;25134:2;25119:18;;25112:31;;;24960:4;;25166:57;;25203:19;;25195:6;25166:57;:::i;:::-;25271:9;25263:6;25259:22;25254:2;25243:9;25239:18;25232:50;25305:44;25342:6;25334;25305:44;:::i;:::-;25291:58;;25398:9;25390:6;25386:22;25380:3;25369:9;25365:19;25358:51;25426:33;25452:6;25444;25426:33;:::i;:::-;25418:41;24638:827;-1:-1:-1;;;;;;;;24638:827:30:o;25470:287::-;25599:3;25637:6;25631:13;25653:66;25712:6;25707:3;25700:4;25692:6;25688:17;25653:66;:::i;:::-;25735:16;;;;;25470:287;-1:-1:-1;;25470:287:30:o;25762:125::-;25827:9;;;25848:10;;;25845:36;;;25861:18;;:::i;26314:465::-;26571:2;26560:9;26553:21;26534:4;26597:56;26649:2;26638:9;26634:18;26626:6;26597:56;:::i;:::-;26701:9;26693:6;26689:22;26684:2;26673:9;26669:18;26662:50;26729:44;26766:6;26758;26729:44;:::i"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","SIGNER_ROLE()":"a1ebf35d","UPGRADER_ROLE()":"f72c0d8b","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","achievements(uint256)":"27aed72e","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","baseURI()":"6c0360eb","domainSeparator()":"f698da25","exists(uint256)":"4f558e79","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasMinted(uint256,address)":"03780733","hasRole(bytes32,address)":"91d14854","initialize(string,string,string,address,address)":"d6d0faee","isApprovedForAll(address,address)":"e985e9c5","mintWithPermit(address,uint256,uint256,bytes32,bytes)":"78ad847c","name()":"06fdde03","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setAchievement(uint256,bool,bool,string)":"034fc4b8","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupply(uint256)":"bd85b039","upgradeToAndCall(address,bytes)":"4f1ef286","uri(uint256)":"0e89341c","usedNonces(address,uint256)":"6a8a6894"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SIGNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"achievements\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"soulbound\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"mintWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"soulbound\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"perIdURI\",\"type\":\"string\"}],\"name\":\"setAchievement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBase\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"the capsule honor badges - upgradeable ERC-1155 for achievements - Soulbound per achievement (toggleable) - 1-per-user-per-achievement enforced - EIP-712 signer-gated minting\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Achievements1155Upgradeable.sol\":\"Achievements1155Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x366f804cd7571a67c51bec726d9f25b44cb0fb52bdeeed88b397c24c7ea0865f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8fccf68ef3ff40ed155e23ed8e3d0de299dcef6012a0536828b16c65af2b3c8\",\"dweb:/ipfs/Qmahy3CJAgMoNJEpbJMjEKsZMc6sU8gCYrFan4WnmBrMZT\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":{\"keccak256\":\"0xb9823676cbde3953a1578db316962b3c14d1518c246293d92acf9bb276ce5da4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63565d7926edaed0e116338a9240edd2d391cf808d009f937762bd930d8a6c86\",\"dweb:/ipfs/QmUyfwAxYDnzSqNhCnqUqjFuM42wFNbHM4VRgjuFkc8yNW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/Achievements1155Upgradeable.sol\":{\"keccak256\":\"0xf4fb07da0bda48e9a9f6d954bb386dccb1f3c6c35d783e1b5c87b3be9bdf6477\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4633acc39dbec427795b9ea0ab6a3ca352e78dd4b1bf65b72cdce4ddffdb3ab\",\"dweb:/ipfs/QmVn7nAe9YASR2qCZzk2jQcWd736X524HPTBUGGc8nH7FH\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":9618,"contract":"src/Achievements1155Upgradeable.sol:Achievements1155Upgradeable","label":"achievements","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_struct(AchievementDef)9613_storage)"},{"astId":9624,"contract":"src/Achievements1155Upgradeable.sol:Achievements1155Upgradeable","label":"hasMinted","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_mapping(t_address,t_bool))"},{"astId":9626,"contract":"src/Achievements1155Upgradeable.sol:Achievements1155Upgradeable","label":"name","offset":0,"slot":"2","type":"t_string_storage"},{"astId":9628,"contract":"src/Achievements1155Upgradeable.sol:Achievements1155Upgradeable","label":"symbol","offset":0,"slot":"3","type":"t_string_storage"},{"astId":9630,"contract":"src/Achievements1155Upgradeable.sol:Achievements1155Upgradeable","label":"baseURI","offset":0,"slot":"4","type":"t_string_storage"},{"astId":9632,"contract":"src/Achievements1155Upgradeable.sol:Achievements1155Upgradeable","label":"_DOMAIN_SEPARATOR","offset":0,"slot":"5","type":"t_bytes32"},{"astId":9643,"contract":"src/Achievements1155Upgradeable.sol:Achievements1155Upgradeable","label":"usedNonces","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_uint256,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => bool))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_bool)"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_uint256,t_struct(AchievementDef)9613_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Achievements1155Upgradeable.AchievementDef)","numberOfBytes":"32","value":"t_struct(AchievementDef)9613_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AchievementDef)9613_storage":{"encoding":"inplace","label":"struct Achievements1155Upgradeable.AchievementDef","members":[{"astId":9608,"contract":"src/Achievements1155Upgradeable.sol:Achievements1155Upgradeable","label":"enabled","offset":0,"slot":"0","type":"t_bool"},{"astId":9610,"contract":"src/Achievements1155Upgradeable.sol:Achievements1155Upgradeable","label":"soulbound","offset":1,"slot":"0","type":"t_bool"},{"astId":9612,"contract":"src/Achievements1155Upgradeable.sol:Achievements1155Upgradeable","label":"uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}